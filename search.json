[{"path":"https://dipterix.org/dipsaus/articles/r_expr_addons.html","id":"assign-if-invalid","dir":"Articles","previous_headings":"","what":"1. %?<-%: Assign if invalid","title":"R Expression Add-on","text":"coding R, data checking actually headache. example, check variable aa exists NULL, otherwise set default value 1, check looks like: time repeating . %?<-% operator, just need: powerful part left-hand side can expression. example, value exists, %?<-% nothing (even evaluate expressions right-hand side)","code":"if( exists('aa') && !is.null(aa) ){   aa <- 1 } aa %?<-% 1 print(aa) #> [1] 1 l %?<-% list()  l$aa %?<-% 1  print(l) #> $aa #> [1] 1 # e already exists e <- list(aa = 1)  # %?<-% will not evaluate rhs, nor assign values system.time({   e %?<-% { Sys.sleep(10); list(aa = 2) }   print(e) }) #> $aa #> [1] 1 #>    user  system elapsed  #>       0       0       0"},{"path":"https://dipterix.org/dipsaus/articles/r_expr_addons.html","id":"javascript-style-of-creating-functions","dir":"Articles","previous_headings":"","what":"2. JavaScript-style of creating functions","title":"R Expression Add-on","text":"modern JavaScript, function can created via (arg) => { ... }. example, dipsaus provides functions iapply, %=>%, example: %=>% collect left-hand side elements arguments right-hand side expression body create function:","code":"const li = ['A', 'T', 'G', 'C']; li.map((el, ii) => {   return(`The index for ${el} is ${ii}`); }); li <- c('A', 'T', 'G', 'C') li |> iapply(alist(el, ii) %=>% {   sprintf('The index for %s is %s', el, ii) }) #> [1] \"The index for A is 1\" \"The index for T is 2\" \"The index for G is 3\" #> [4] \"The index for C is 4\" alist(a, b=a^2, ...) %=>% {   print(c(a , b,...)) } #> function (a, b = a^2, ...)  #> { #>     print(c(a, b, ...)) #> }"},{"path":"https://dipterix.org/dipsaus/articles/r_expr_addons.html","id":"match-nested-calls-match_calls","dir":"Articles","previous_headings":"","what":"3. Match nested calls match_calls","title":"R Expression Add-on","text":"function match.call provided base package let us format calls formals matched. already powerful can parse expressions using .list() get input parameters. However, encounter nested calls like shiny UI components, match.call work well. can’t see matched results inside nested functions. match_calls solves problem recursively calling match.call: can also change modify calls. example, want add ns input ID shiny modules, following replave_args changes \"inputId\" ns(\"inputId\")","code":"match.call(textInput, call = quote(textInput('inputId', 'label', 'aaa'))) #> textInput(inputId = \"inputId\", label = \"label\", value = \"aaa\") match.call(tagList, call = quote(tagList(   div(     tags$ul(       tags$li(textInput('inputId', 'label', 'aaa'))     )   ) ))) #> tagList(div(tags$ul(tags$li(textInput(\"inputId\", \"label\", \"aaa\"))))) match_calls(call = tagList(   div(     tags$ul(       tags$li(textInput('inputId', 'label', 'aaa'))     )   ) ), recursive = TRUE) #> tagList(div(tags$ul(tags$li(textInput(inputId = \"inputId\", label = \"label\",  #>     value = \"aaa\"))))) match_calls(call = tagList(   div(     tags$ul(       tags$li(textInput('inputId', 'label', 'aaa'))     )   ) ), recursive = TRUE, replace_args = list(   'inputId' = function(v, ...){     as.call(list(quote(ns), v))   } )) #> tagList(div(tags$ul(tags$li(textInput(inputId = ns(\"inputId\"),  #>     label = \"label\", value = \"aaa\")))))"},{"path":"https://dipterix.org/dipsaus/articles/r_expr_addons.html","id":"pipe-friendly-functions","dir":"Articles","previous_headings":"","what":"4. Pipe-friendly functions","title":"R Expression Add-on","text":"Pipe functions can simplify workflow make R code readable. popular pipe operator %>% (|> R 4.0) allows left-hand elements first input right-hand side functions. dipsaus provides several pipe-friendly functions.","code":""},{"path":"https://dipterix.org/dipsaus/articles/r_expr_addons.html","id":"no-operations-no_op","dir":"Articles","previous_headings":"4. Pipe-friendly functions","what":"No-operations no_op","title":"R Expression Add-on","text":"no_op takes whatever input , returns input, side effects. example, want plot results pipe continue analysis, usually happens: no_op, pipe becomes: ’s example","code":"x_tmp <- x |>    do_something(...)  plot(x_tmp)  final_results <- x_tmp |>    do_others(...) final_results <- x |>    do_something(...) |>    no_op(plot, ylim = c(0,100)) |>    do_others(...) par(mfrow = c(1,2))  result <- (1:10) |>    iapply(alist(el, ii) %=>% {     rnorm(20, el, ii)   }, simplify = FALSE) |>    unlist() |>       # Begin no-ops, result will not change   no_op({     # Use expression and \".\" to refer the data     print(summary(.))   }) |>    no_op(     # Use function and pass ... to function     plot, x = seq(0,1,length.out = 200),      type = 'p', ylim = c(-20,20), pch = 16,     xlab = 'Time', ylab = 'Value', las = 1   ) |>    no_op(hist, xlab = 'Values', main = 'Histogram')  #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>  -8.101   1.379   4.588   6.344  10.196  35.644 str(result) #>  num [1:200] -0.4 1.255 -1.437 0.994 1.622 ..."},{"path":"https://dipterix.org/dipsaus/articles/r_expr_addons.html","id":"do_aggregate","dir":"Articles","previous_headings":"4. Pipe-friendly functions","what":"do_aggregate","title":"R Expression Add-on","text":"wrapper aggregate function. using formula, aggregate requires formula first element. pipe results data.frame want use formula, ’s super inconvenient. do_aggregate allows first element data frames using formula:","code":"## S3 method for class 'formula' aggregate(formula, data, FUN, ..., subset, na.action = na.omit) ToothGrowth |>    do_aggregate(len ~ ., mean) #>   supp dose   len #> 1   OJ  0.5 13.23 #> 2   VC  0.5  7.98 #> 3   OJ  1.0 22.70 #> 4   VC  1.0 16.77 #> 5   OJ  2.0 26.06 #> 6   VC  2.0 26.14"},{"path":"https://dipterix.org/dipsaus/articles/shiny_customized_widgets.html","id":"styled-action-button","dir":"Articles","previous_headings":"","what":"1. Styled Action Button","title":"Shiny Customized Widgets","text":"default shiny actionButton fully use Bootstrap theme full features defined HTML. example, button class always btn btn-default can’t disable/enable button easy way. actionButtonStyled solves two problems: type allows add Bootstrap styles button. supported types : default, primary, info, success, warning, danger customized CSS styles, class provides flexible way add classes updating button, disabled allows disable/enable button usage listed follows: Note website must include Bootstrap library. viewing default CRAN vignette, might want check link view demo. Show-case:","code":"# UI function actionButtonStyled(inputId, label, icon = NULL, width = NULL,                     btn_type = \"button\", type = \"primary\", class = \"\", ...)  # Update function updateActionButtonStyled(session, inputId, label = NULL, icon = NULL,                          type = NULL, disabled = NULL, ...)"},{"path":"https://dipterix.org/dipsaus/articles/shiny_customized_widgets.html","id":"compound-inputs-grouped-inputs","dir":"Articles","previous_headings":"","what":"2. Compound Inputs (grouped Inputs)","title":"Shiny Customized Widgets","text":"compoundInput2 provides group inputs group contains multiple shiny inputs. examples create list input groups minimum 0 maximum 10. User can control size groups pressing + - buttons. value input$components looks like : found input extremely useful clinic trial experiment condition grouped developers don’t know ahead number condition groups. details can found demo('example-compountInput2', package='dipsaus'). source file can found using system.file('demo/example-compountInput2.R', package='dipsaus').","code":"compoundInput2(   'compound', 'Group Label', label_color = 1:10,   components = div(     textInput('txt', 'Text'),     selectInput('sel', 'Select', choices = 1:10, multiple = TRUE),     sliderInput('sli', 'Slider', max=1, min=0, val=0.5)   ), max_ncomp = 10, min_ncomp = 0, initial_ncomp = 1 ) #> [[1]] #> [[1]]$txt #> [1] \"\" #>  #> [[1]]$sel #> [1] \"1\" \"3\"  #>  #> [[1]]$sli #> [1] 0.5 #>  #> [[2]] ..."},{"path":"https://dipterix.org/dipsaus/articles/shiny_customized_widgets.html","id":"synchronize-multiple-inputs","dir":"Articles","previous_headings":"","what":"3. Synchronize Multiple Inputs","title":"Shiny Customized Widgets","text":"sync_shiny_inputs provides way update among multiple inputs dead-locks. example, input (textInput) shares information input B (sliderInput). Updating trigger B update. want updated B changed? following code might cause recursive updates: case, can use sync_shiny_inputs: inputIds refers input ID synchronized. one inputs changed, value passed corresponding uniform functions stored, updates notify inputs update UI values. input updates stored value. example, input changed \"0\" \"1\", first function uniform triggered, function(){.numeric()} evaluated =\"1\". result, numeric 1 stored. Next, functions updates called, 1 (stored previous step) input, results changing slider input B 1. whole process trigger re-update.","code":"# Bad example observeEvent(input$A, {   updateSliderInput(session, 'B', value = input$A) }) observeEvent(input$B, {   updateTextInput(session, 'A', value = input$B) }) sync_shiny_inputs(input, session, inputIds = c('A', 'B'), uniform = list(   function(a){as.numeric(a)},   function(b){ b } ), updates = list(   function(a){updateTextInput(session, 'A', value = a)},   function(b){updateSliderInput(session, 'B', value = b)} ))"},{"path":"https://dipterix.org/dipsaus/articles/utility_functions.html","id":"cat-strings-with-levels-debug-info-warning-error-and-fatal","dir":"Articles","previous_headings":"","what":"1. Cat strings with levels: DEBUG, INFO, WARNING, ERROR, and FATAL","title":"Utility Functions","text":"Level FATAL raise errors.","code":"cat2('Debug passed!', level = 'DEBUG') #> ✔ Debug passed!  cat2('You are all set.', level = 'INFO') #> ♥ You are all set.  cat2('Wait a second...', level = 'WARNING') #> ⚠ Wait a second...  cat2('Ooops', level = 'ERROR') #> ✖ Ooops  cat2('Bi--Doop---', level = 'FATAL') #> ✖ Bi--Doop--- #> Error:  #> ..."},{"path":"https://dipterix.org/dipsaus/articles/utility_functions.html","id":"parse_svec-and-deparse_svec","dir":"Articles","previous_headings":"","what":"2. parse_svec and deparse_svec","title":"Utility Functions","text":"parse_svec converts characters like \"7-10,14-15\" numeric vectors deparse_svec reverse process Parameter max_lag deparse_svec changes threshold integers collapsed together:","code":"parse_svec(\"7-10,14-15\") #> [1]  7  8  9 10 14 15 deparse_svec(c(2,5,3,1,7)) #> [1] \"1-3,5,7\" deparse_svec(c(1,2,4,7,11)) #> [1] \"1-2,4,7,11\"  deparse_svec(c(1,2,4,7,11), max_lag = 2) #> [1] \"1-4,7,11\"  deparse_svec(c(1,2,4,7,11), max_lag = 3) #> [1] \"1-7,11\""},{"path":"https://dipterix.org/dipsaus/articles/utility_functions.html","id":"system-information","dir":"Articles","previous_headings":"","what":"3. System Information","title":"Utility Functions","text":"goal work alternative retrieve system information. example, R doesn’t provide functions get memory limits, CPU chip-set information Linux MacOS.","code":"# Total RAM in bytes get_ram() #> 16766767104.0 B  # Print-friendly to_ram_size(get_ram(), 1024) #> 15.6 GB  # WARNING: $free is the total RAM - R usage, is no the actual free RAM mem_limit2() #> $total #> 16766767104.0 B #> $free #> 16703319064.0 B"},{"path":"https://dipterix.org/dipsaus/articles/utility_functions.html","id":"interactive-questions","dir":"Articles","previous_headings":"","what":"4. Interactive Questions","title":"Utility Functions","text":"askYesNo comes utils package allows ask yes/questions returns logical value. cancel entered, function returns NA, answers yes, cancel given, raise error. dipsaus::ask_yesno ask question user actually say yes ask_or_default instead asking yes/question, asks question default answer. User don’t type answers accept defaults:","code":"> ask_yesno('Please answer an yes/no question, ok?') ## ♥ Please answer an yes/no question, ok? (Yes/no):  > qweee ## ⚠ Please answer Y/yes, N/no, or c to cancel. (Yes/no):  > ttt ## ⚠ Please answer Y/yes, N/no, or c to cancel. (Yes/no):  > y ## [1] TRUE > ask_or_default(\"What is your password\", default = 'I will not tell you!') ## ♥ What is your password ##   [default is ‘I will not tell you!’]  > ## [1] \"I will not tell you!\""},{"path":"https://dipterix.org/dipsaus/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zhengjia Wang. Author, maintainer. John Magnotti. Contributor.           Contributed `rutabaga.R` Xiang Zhang. Contributor.           Contributed `rutabaga.R`","code":""},{"path":"https://dipterix.org/dipsaus/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang Z (2025). dipsaus: Dipping Sauce Data Analysis Visualizations. R package version 0.3.0.9004, https://dipterix.org/dipsaus/, https://github.com/dipterix/dipsaus.","code":"@Manual{,   title = {dipsaus: A Dipping Sauce for Data Analysis and Visualizations},   author = {Zhengjia Wang},   year = {2025},   note = {R package version 0.3.0.9004,     https://dipterix.org/dipsaus/},   url = {https://github.com/dipterix/dipsaus}, }"},{"path":"https://dipterix.org/dipsaus/index.html","id":"dipping-sauce-for-data-analysis-and-visualization","dir":"","previous_headings":"","what":"A Dipping Sauce for Data Analysis and Visualizations","title":"A Dipping Sauce for Data Analysis and Visualizations","text":"Package dipsaus provides add-ons various packages shiny, rlang, future, etc. enhance packages. install package, dipsaus provides add-ons following perspectives:","code":"# To install the development package # pak::pak('dipterix/dipsaus')  # To install from CRAN install.packages(\"dipsaus\")"},{"path":"https://dipterix.org/dipsaus/index.html","id":"id_1-shiny-customized-widgets-vignette","dir":"","previous_headings":"","what":"1. Shiny Customized Widgets (Vignette)","title":"A Dipping Sauce for Data Analysis and Visualizations","text":"compoundInput2 assembles shiny native inputs create variable-length input; actionButtonStyled add styles shiny default actionButton updating function can also update styles enable/disable button; sync_shiny_inputs synchronize among shiny inputs without causing dead-locks UI changes; set_shiny_input set shiny input object; flex_div display elements flex layout; html_asis escapes string displayed ‘-’ websites; progress2 shows shiny progress bar, also works without shiny; shiny_is_running check shiny running;","code":""},{"path":"https://dipterix.org/dipsaus/index.html","id":"id_2-parallel-functions","dir":"","previous_headings":"","what":"2. Parallel Functions","title":"A Dipping Sauce for Data Analysis and Visualizations","text":"collapse parallel solution calculate sum/mean along arrays, providing 4x speed-ups large arrays; make_forked_clusters enables multicore (forked clusters) future package even RStudio environment; baseline_array baseline arrays multicore; shift_array shift arrays along given dimensions; lapply_async2 uses future package, progress bar either console shiny apps; fastcov2 calculates covariance matrices parallel; rs_exec starts new R session job RStudio;","code":""},{"path":"https://dipterix.org/dipsaus/index.html","id":"id_3-r-expressions-vignette","dir":"","previous_headings":"","what":"3. R Expressions (Vignette)","title":"A Dipping Sauce for Data Analysis and Visualizations","text":"eval_dirty works base::eval, supports quosures generated rlang::quo; match_calls match calls nested manner, support changing call arguments recursively; %?<-% assigns default values left-hand object. E.g. %?<-% 1 assigns 1 NULL exist; %=>% provides JavaScript-style creating functions; new_function2 creates new function quasi-quotation; mask_function2 modifies function mask certain elements within function; capture_expr captures messages always return results one-line string; forelse provides Python-like -else syntax; test_farg tests whether function contains desired arguments;","code":""},{"path":"https://dipterix.org/dipsaus/index.html","id":"id_4-utility-functions-vignette","dir":"","previous_headings":"","what":"4. Utility Functions (Vignette)","title":"A Dipping Sauce for Data Analysis and Visualizations","text":"check_installed_packages, package_installed checks package(s) installed; col2hexStr convert color hex strings friendly HTML, CSS JavaScript; parse_svec converts string integer vectors, deparse_svec converts integer vectors back compact string; drop_nulls removes invalid items within lists; get_ram, mem_limit2 gets total RAM size alternatives mem.limits non-windows environment; to_ram_size provides simple way convert numbers printable storage sizes given units; time_delta calculates time differences returns number given units; ask_yesno, ask_or_default interactively ask user’s input either console RStudio; fastmap2 fastqueue2 provides wrapper fastmap package, giving object list-like operations; shared_finalizer finalizes multiple elements last element garbage collected; dev_create allows managing grouping graphic devices; print_directory_tree prints directory containing files tree-structures; rs_* functions wrapping rstudioapi functions, work without RStudio; sexp_type2 get internal data type code; to_datauri converts file base64 formats.","code":""},{"path":"https://dipterix.org/dipsaus/reference/AbstractMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Map to store key-value pairs — AbstractMap","title":"Abstract Map to store key-value pairs — AbstractMap","text":"Abstract Map store key-value pairs","code":""},{"path":"https://dipterix.org/dipsaus/reference/AbstractQueue.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines abstract queue class — AbstractQueue","title":"Defines abstract queue class — AbstractQueue","text":"class inspired https://cran.r-project.org/package=txtq. difference AbstractQueue introduce abstract class can extended can queue text messages, also arbitrary R objects, including expressions environments. queue types package inherit class.","code":""},{"path":"https://dipterix.org/dipsaus/reference/AbstractQueue.html","id":"abstract-public-methods","dir":"Reference","previous_headings":"","what":"Abstract Public Methods","title":"Defines abstract queue class — AbstractQueue","text":"Methods start @... thread-safe. used directly users. However, might want override inherit abstract class. Methods marked \"(override)\" implemented, meaning supposed implement details. Methods marked \"(optional)\" usually default alternatives. initialize(...) (override) constructor. Usually three things process: 1. set get_locker free_locker want use default lockers. 2. set lock file (using default lockers). 3. call self$connect(...) get_locker(), free_locker() (optional) Default NULL methods, queue uses internal private$default_get_locker private$default_free_locker. two methods customized locker, please implement two methods functions self$initialization get_locker obtains lock access (exclusive), free_locker frees locker. implemented, private$exclusive take care rest. Type: function; parameters: none; return: none @get_head(), @set_head(v) (override) Get head know queue self$@get_head() return integer indicating queue self$@set_head(v) stores integer. Parameter v always non-negative, guaranteed. Users supposed call methods directly, use self$head self$head<- instead. However, inherit class, supposed override methods. @get_total(), @set_total(v) (override) Similar @get_head @set_head, defines total items ever stored queue. total-head equals current items queue. @inc_total(n=1) (optional) Increase total, usually need override, unless using files store total want decrease number file connections @append_header(msg, ...) (override) msg vector strings, separated \"|\", containing encoded headers: `time`, `key`, `hash`, `message`. decode inside, can use self$print_items(stringr::str_split_fixed(msg, '\\|', 4)). Make sure return number, indicating number items stored. Unless handled elsewhere, usually return(length(msg)). @store_value(value, key) (override) Defines store value. `key` unique identifier generated time, queue ID, value. Usually use file name key ID database. value arbitrary R object store. need store value somewhere return string passed `hash` self$restore_value. restore_value(hash, key, preserve = FALSE) (override) Method restore value given combination `hash` `key`. `hash` string returned @store_value, `key` key @store_value. preserve indicator whether preserve value future use. set FALSE, supposed free resource related value. (free memory disk space) @log(n = -1, = FALSE) (override) get n items saved @append_header. n less equal 0 means listing possible items. =TRUE, return items (number rows equals self$total), including popped items. =FALSE, return items queue (number rows self$count). returned value n x 4 matrix. Usually use stringr::str_split_fixed(..., '\\|', 4). Please see types implemented example. @reset(...) (override) Reset queue, remove items reset head, total 0. @clean() (override) Clean queue, remove popped items. @validate() (override) Validate queue. Stop queue broken. @connect(con, ...) (override) Set connection. Usually called end self$initialization connect database, folder, existing queue checks whether connection new existing queue. connect(con, ...) (optional) Thread-safe version. sometimes need override function instead @connect, private$exclusive requires lockfile exist locked. lockers ready, need set lockers connection, override one. destroy() (optional) Destroy queue, free space call delayedAssign('.lockfile', {stop(...)}, assign.env=private) raise error destroyed queue called later.","code":""},{"path":"https://dipterix.org/dipsaus/reference/AbstractQueue.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public Methods","title":"Defines abstract queue class — AbstractQueue","text":"Usually need override unless know . push(value, message='',...) Function push arbitrary R object queue. message string giving notes pushed item. Usually message stored header, separated values. goal describe value. ... passed @append_header pop(n = 1, preserve = FALSE) Pop n items queue. preserve indicates whether free resources, though always guaranteed. print_item(item), print_items(items) decode matrix returned log(), returning named list data frame four heads: `time`, `key`, `hash`, `message`. list(n=-1) List items queue, decoded. n less equal 0, list results. result equivalent self$print_items(self$log(n)) log(n=-1,=FALSE) List items queue, encoded. used self$print_items. =TRUE, result list  records ever pushed queue since last time queue cleaned. =FALSE, results items queue. n number items.","code":""},{"path":"https://dipterix.org/dipsaus/reference/AbstractQueue.html","id":"public-active-bindings","dir":"Reference","previous_headings":"","what":"Public Active Bindings","title":"Defines abstract queue class — AbstractQueue","text":"id Read-property. Returns unique ID current queue. lockfile lock file. head Integer, total number items popped, .e. inactive items. total Total number items ever pushed queue since last cleaned, integer. count Integer, read-, equals total - head, number active items queue","code":""},{"path":"https://dipterix.org/dipsaus/reference/AbstractQueue.html","id":"private-methods-or-properties","dir":"Reference","previous_headings":"","what":"Private Methods or properties","title":"Defines abstract queue class — AbstractQueue","text":".id use directly. Used store queue ID. .lockfile Location lock file. lock Preserve file lock. exclusive(expr,...) Function make sure methods thread-safe default_get_locker() Default method lock queue default_free_locker Default method free queue","code":""},{"path":"https://dipterix.org/dipsaus/reference/PersistContainer.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper to cache key-value pairs and persist across sessions — PersistContainer","title":"Wrapper to cache key-value pairs and persist across sessions — PersistContainer","text":"class designed persist arbitrary R objects locally share across different sessions. container consists two-level caches. first one session-based, meaning valid current R session cleared session shut . second persist-level map, persist hard drive shared across sessions. See cache method 'details'.","code":""},{"path":"https://dipterix.org/dipsaus/reference/PersistContainer.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public Methods","title":"Wrapper to cache key-value pairs and persist across sessions — PersistContainer","text":"initialize(..., backend = rds_map) constructor. backend must inherit AbstractMap, ... passed backend$new(...). check available back-ends use cases, see map. reset(= FALSE) Reset container. set true, reset session-based hard-drive-based, otherwise reset session-based container. destroy(= FALSE) destroy container. use want finalize container reg.finalizer. (key, signature = NULL) returns list true/false (logical) vectors indicating whether keys exist container, signature used caching key-value pairs, also checks whether signature matches. important even keys match signature wrong, results false. remove(keys, = TRUE) Remove keys container. Default remove keys levels. =FALSE, remove key current session cache(key, value, signature = NULL, replace = FALSE, persist = FALSE) key signature together form unique identifier value. default signature none, useful value large, key string. replace indicates whether force replace key-value pairs even entry exists. persist true, value stored hard-disks, otherwise value deleted session closed.","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/PersistContainer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper to cache key-value pairs and persist across sessions — PersistContainer","text":"","code":"container = PersistContainer$new(tempfile())  # Reset the container so that values are cleared container$reset(all = TRUE)  # Store `1` to 'a' with signature 111 to a non-persist map # returns 1 container$cache(key = 'a', value = 1, signature = 111, persist = FALSE) #> [1] 1  # Replace 'a' with 3 # returns 3 container$cache(key = 'a', value = 3, signature = 111,                 persist = TRUE, replace = TRUE) #> [1] 3  # check if 'a' exists with signature 111 container$has('a', signature = 111)    # TRUE #>    a  #> TRUE  # When you only have 'a' but no signature container$has('a')                     # TRUE #>    a  #> TRUE  # check if 'a' exists with wrong signature 222 container$has('a', signature = 222)    # FALSE #>     a  #> FALSE    # Store 'a' with 2 with same signature # will fail and ignore the value (value will not be evaluated if signatured) # Return 2 (Important! use cached values) container$cache(key = 'a', value = {   print(123)   return(2) }, signature = 111, replace = FALSE) #> [1] 3  # When no signature is present # If the key exists (no signature provided), return stored value # returns 3 container$cache(key = 'a', value = 4) #> [1] 3  # replace is TRUE (no signature provided), signature will be some default value container$cache(key = 'a', value = 2, replace = TRUE) #> [1] 2  # destroy the container to free disk space container$destroy()"},{"path":"https://dipterix.org/dipsaus/reference/actionButtonStyled.html","id":null,"dir":"Reference","previous_headings":"","what":"Action Button but with customized styles — actionButtonStyled","title":"Action Button but with customized styles — actionButtonStyled","text":"Action Button customized styles","code":""},{"path":"https://dipterix.org/dipsaus/reference/actionButtonStyled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Action Button but with customized styles — actionButtonStyled","text":"","code":"actionButtonStyled(   inputId,   label,   icon = NULL,   width = NULL,   type = \"primary\",   btn_type = \"button\",   class = \"\",   ... )"},{"path":"https://dipterix.org/dipsaus/reference/actionButtonStyled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Action Button but with customized styles — actionButtonStyled","text":"inputId, label, icon, width, ... passed shiny::actionButton type button type, choices `default`, `primary`, `info`, `success`, `warning`, `danger` btn_type HTML tag type, either \"button\" \"\" class additional classes added button","code":""},{"path":"https://dipterix.org/dipsaus/reference/actionButtonStyled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Action Button but with customized styles — actionButtonStyled","text":"`HTML` tags","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/actionButtonStyled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Action Button but with customized styles — actionButtonStyled","text":"","code":"# demo('example-actionButtonStyled', package='dipsaus')  library(shiny) library(dipsaus)  ui <- fluidPage(   actionButtonStyled('btn', label = 'Click me', type = 'default'),   actionButtonStyled('btn2', label = 'Click me2', type = 'primary') )   server <- function(input, output, session) {   btn_types = c('default', 'primary', 'info', 'success', 'warning', 'danger')   observeEvent(input$btn, {     btype = btn_types[((input$btn-1) %% (length(btn_types)-1)) + 1]     updateActionButtonStyled(session, 'btn2', type = btype)   })   observeEvent(input$btn2, {     updateActionButtonStyled(session, 'btn',                              disabled = c(FALSE,TRUE)[(input$btn2 %% 2) + 1])   }) }   if( interactive() ){   shinyApp(ui, server, options = list(launch.browser=TRUE)) }"},{"path":"https://dipterix.org/dipsaus/reference/add_to_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Store/Get key-value pairs in 'shiny' session — add_to_session","title":"Store/Get key-value pairs in 'shiny' session — add_to_session","text":"key missing, 'll created, otherwise ignored overwritten.","code":""},{"path":"https://dipterix.org/dipsaus/reference/add_to_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store/Get key-value pairs in 'shiny' session — add_to_session","text":"","code":"add_to_session(   session,   key = \"rave_id\",   val = paste(sample(c(letters, LETTERS, 0:9), 20), collapse = \"\"),   override = FALSE )"},{"path":"https://dipterix.org/dipsaus/reference/add_to_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store/Get key-value pairs in 'shiny' session — add_to_session","text":"session 'Shiny' session key character, key store val value store override key exists, whether overwrite value","code":""},{"path":"https://dipterix.org/dipsaus/reference/add_to_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store/Get key-value pairs in 'shiny' session — add_to_session","text":"session shiny session, returns current value stored session, otherwise returns NULL","code":""},{"path":"https://dipterix.org/dipsaus/reference/as_pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert functions to pipe-friendly functions — as_pipe","title":"Convert functions to pipe-friendly functions — as_pipe","text":"Convert functions pipe-friendly functions","code":""},{"path":"https://dipterix.org/dipsaus/reference/as_pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert functions to pipe-friendly functions — as_pipe","text":"","code":"as_pipe(   x,   ...,   call,   arg_name,   .name = arg_name,   .env = parent.frame(),   .quoted = FALSE )"},{"path":"https://dipterix.org/dipsaus/reference/as_pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert functions to pipe-friendly functions — as_pipe","text":"x R object input ... default arguments explicitly display returned function call function call, function arg_name argument name varied. argument first argument new function pipe-friendly. .name new argument name; default arg_name .env executing environment .quoted whether call quoted","code":""},{"path":"https://dipterix.org/dipsaus/reference/as_pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert functions to pipe-friendly functions — as_pipe","text":"x missing, returns function takes one argument, otherwise run function given x","code":""},{"path":"https://dipterix.org/dipsaus/reference/as_pipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert functions to pipe-friendly functions — as_pipe","text":"","code":"# modify a function call vary_title <- as_pipe(call = plot(1:10, 1:10),                       pch = 16,                       arg_name = 'main',                       .name = 'title') vary_title #> <Pipe-compatible function> #> function (title, ..., pch = 16)  #> { #>     plot(1:10, 1:10, ..., pch = pch, main = \"[input:title]\") #> } #> <environment: 0x55a743d288d8>  # vary_title is pipe-friendly with `pch` default 16 vary_title(title = 'My Title')   # `pch` is explicit vary_title(title = 'My Title', pch = 1)   # other variables are implicit vary_title(title = 'My Title', type = 'l')    # modify a function  f <- function(b = 1, x){ b + x } f_pipable <- as_pipe(call = f, arg_name = 'x') f_pipable #> <Pipe-compatible function> #> function (x, ...)  #> { #>     f(..., x = \"[input:x]\") #> } #> <environment: 0x55a7444cc110>  f_pipable(2) #> [1] 3  # Advanced use  # Set option dipsaus.debug.as_pipe=TRUE to debug options(\"dipsaus.debug.as_pipe\" = TRUE)  # Both `.(z)` and `z` work  image2 <- as_pipe(call = image(   x = seq(0, 1, length.out = nrow(z)),   y = 1:ncol(z),   z = matrix(1:16, 4),   xlab = \"Time\", ylab = \"Freq\",   main = \"Debug\" ), arg_name = 'z')  #> options(\"dipsaus.debug.as_pipe\") is set to TRUE. This should be used only in debug mode. Do not use for production!  # main can be overwritten image2(matrix(1:50, 5), main = \"Production\")    # reset debug option options(\"dipsaus.debug.as_pipe\" = FALSE)"},{"path":"https://dipterix.org/dipsaus/reference/ask_or_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Line from the Terminal, but with Default Values — ask_or_default","title":"Read a Line from the Terminal, but with Default Values — ask_or_default","text":"Ask question read terminal interactive scenario","code":""},{"path":"https://dipterix.org/dipsaus/reference/ask_or_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Line from the Terminal, but with Default Values — ask_or_default","text":"","code":"ask_or_default(..., default = \"\", end = \"\", level = \"INFO\")"},{"path":"https://dipterix.org/dipsaus/reference/ask_or_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Line from the Terminal, but with Default Values — ask_or_default","text":"..., end, level passed cat2 default default value return case blank input","code":""},{"path":"https://dipterix.org/dipsaus/reference/ask_or_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Line from the Terminal, but with Default Values — ask_or_default","text":"character user's input, default value. See details.","code":""},{"path":"https://dipterix.org/dipsaus/reference/ask_or_default.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a Line from the Terminal, but with Default Values — ask_or_default","text":"prompt string ask question, providing defaults. Users need enter answer. answer blank (space), returns default, otherwise returns user input. can used interactive session.","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/ask_or_default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a Line from the Terminal, but with Default Values — ask_or_default","text":"","code":"if(interactive()){ ask_or_default('What is the best programming language?',                default = 'PHP') }"},{"path":"https://dipterix.org/dipsaus/reference/ask_yesno.html","id":null,"dir":"Reference","previous_headings":"","what":"Ask and Return True or False from the Terminal — ask_yesno","title":"Ask and Return True or False from the Terminal — ask_yesno","text":"Ask question read terminal interactive scenario","code":""},{"path":"https://dipterix.org/dipsaus/reference/ask_yesno.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ask and Return True or False from the Terminal — ask_yesno","text":"","code":"ask_yesno(   ...,   end = \"\",   level = \"INFO\",   error_if_canceled = TRUE,   use_rs = TRUE,   ok = \"Yes\",   cancel = \"No\",   rs_title = \"Yes or No:\" )"},{"path":"https://dipterix.org/dipsaus/reference/ask_yesno.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ask and Return True or False from the Terminal — ask_yesno","text":"..., end, level passed cat2 error_if_canceled raise error canceled use_rs whether use rstudioapi possible ok button label yes cancel button label rs_title message title 'RStudio' question box pops .","code":""},{"path":"https://dipterix.org/dipsaus/reference/ask_yesno.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ask and Return True or False from the Terminal — ask_yesno","text":"logical NULL raise error. \"yes\" entered, returns TRUE; \"\" entered, returns FALSE; \"c\" entered, error_if_canceled=TRUE result error, otherwise return NULL","code":""},{"path":"https://dipterix.org/dipsaus/reference/ask_yesno.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ask and Return True or False from the Terminal — ask_yesno","text":"prompt string ask yes question. Users need enter \"y\", \"yes\" yes, \"n\", \"\" , \"c\" cancel (case-insensitive). can used interactive session.","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/ask_yesno.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ask and Return True or False from the Terminal — ask_yesno","text":"","code":"if(interactive()){ ask_yesno('Do you know how hard it is to submit an R package and ',           'pass the CRAN checks?') ask_yesno('Can I pass the CRAN check this time?') }"},{"path":"https://dipterix.org/dipsaus/reference/async.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate expression in async_expr — async","title":"Evaluate expression in async_expr — async","text":"Evaluate expression async_expr","code":""},{"path":"https://dipterix.org/dipsaus/reference/async.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate expression in async_expr — async","text":"","code":"async(expr)"},{"path":"https://dipterix.org/dipsaus/reference/async.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate expression in async_expr — async","text":"expr R expression","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/async_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply R expressions in a parallel way — async_expr","title":"Apply R expressions in a parallel way — async_expr","text":"Apply R expressions parallel way","code":""},{"path":"https://dipterix.org/dipsaus/reference/async_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply R expressions in a parallel way — async_expr","text":"","code":"async_expr(   .X,   .expr,   .varname = \"x\",   envir = parent.frame(),   .pre_run = NULL,   .ncore = future::availableCores(),   ... )"},{"path":"https://dipterix.org/dipsaus/reference/async_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply R expressions in a parallel way — async_expr","text":".X vector list apply evaluation .expr R expression, unquoted .varname variable name representing element .X envir environment evaluate expressions .pre_run expressions evaluated looping. .ncore number CPU cores ... passed future::future","code":""},{"path":"https://dipterix.org/dipsaus/reference/async_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply R expressions in a parallel way — async_expr","text":"list whose length equals .X. value item returned depends whether async called. See details workflow.","code":""},{"path":"https://dipterix.org/dipsaus/reference/async_expr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply R expressions in a parallel way — async_expr","text":"async_expr uses lapply future::future internally. Within loop, item \".X\" assigned variable \"x\" (defined \".varname\") enter evaluation. evaluation, function async provided. Expressions within async evaluated another session, otherwise evaluated current session. workflow: Run .pre_run seq_along(.X): 1. Assign x .X[[]], variable name x     defined .varname 2. Evaluate expr current session. . async called, return evaluated expr b. async(aync_expr) called, evaluate aync_expr       another session, return evaluation results aync_expr","code":""},{"path":"https://dipterix.org/dipsaus/reference/async_flapply.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for future.apply::future_lapply — async_flapply","title":"Wrapper for future.apply::future_lapply — async_flapply","text":"Wrapper future.apply::future_lapply","code":""},{"path":"https://dipterix.org/dipsaus/reference/async_flapply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for future.apply::future_lapply — async_flapply","text":"","code":"async_flapply(X, FUN, ...)"},{"path":"https://dipterix.org/dipsaus/reference/async_flapply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for future.apply::future_lapply — async_flapply","text":"X, FUN, ... passing future.apply::future_lapply","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/async_works.html","id":null,"dir":"Reference","previous_headings":"","what":"Run jobs in other R sessions without waiting — async_works","title":"Run jobs in other R sessions without waiting — async_works","text":"function deprecated. Please use lapply_callr instead.","code":""},{"path":"https://dipterix.org/dipsaus/reference/async_works.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run jobs in other R sessions without waiting — async_works","text":"","code":"async_works(   X,   FUN,   ...,   .globals = NULL,   .name = \"Untitled\",   .rs = FALSE,   .wait = TRUE,   .chunk_size = Inf,   .nworkers = future::availableCores(),   .simplify = FALSE,   .quiet = FALSE,   .log )"},{"path":"https://dipterix.org/dipsaus/reference/async_works.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run jobs in other R sessions without waiting — async_works","text":"X vector list applied FUN function first argument element X ... arguments passed FUN .globals global variables evaluated FUN .name job names, used backed rstudioapi jobs .rs whether use rstudioapi jobs .wait whether wait results .chunk_size used .wait=FALSE, chunk size workers time. useful printing progress messages, might slow process .chunk_size small .nworkers number workers time .simplify whether simplify results, .e. merge list results vectors arrays .quiet whether suppress printing messages .log internally used","code":""},{"path":"https://dipterix.org/dipsaus/reference/async_works.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run jobs in other R sessions without waiting — async_works","text":".wait=TRUE, returns applied results FUN X. result types depend .simplify (compare difference lapply sapply). .wait=FALSE, returns function can check result. function takes timeout argument blocks session timeout seconds waiting results. See examples.","code":""},{"path":"https://dipterix.org/dipsaus/reference/async_works.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run jobs in other R sessions without waiting — async_works","text":"Unlike future package, global variables can automatically detected, async_works require users specify global variables explicitly via .globals async_works almost surely slower future.apply packages. However, provides functionality future.apply can hardly achieve: non-block. setting .wait=FALSE, process run background, one may run many tasks want. especially useful large data generating process occurs ( read file, process, generate summarizing reports).","code":""},{"path":"https://dipterix.org/dipsaus/reference/async_works.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run jobs in other R sessions without waiting — async_works","text":"","code":"if (FALSE) { # \\dontrun{ # requires a sub-process to run the code  # Basic usage a <- 1 async_works(1:10, function(ii){   ii + a # sub-process don't know a, hence must pass a as globals }, .globals = list(a = a))  # non-blocking case system.time({   check <- async_works(1:10, function(ii){     # simulating process, run run run     Sys.sleep(ii)     Sys.getpid()   }, .wait = FALSE) })  # check the results res <- check(timeout = 0.1) attr(res, 'resolved') # whether it's resolved  # block the session waiting for the results res <- check(timeout = Inf) attr(res, 'resolved')   } # }"},{"path":"https://dipterix.org/dipsaus/reference/attached_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Get attached package names in current session (Internally used) — attached_packages","title":"Get attached package names in current session (Internally used) — attached_packages","text":"Get attached package names current session (Internally used)","code":""},{"path":"https://dipterix.org/dipsaus/reference/attached_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get attached package names in current session (Internally used) — attached_packages","text":"","code":"attached_packages(include_base = FALSE)"},{"path":"https://dipterix.org/dipsaus/reference/attached_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get attached package names in current session (Internally used) — attached_packages","text":"include_base whether include base packages","code":""},{"path":"https://dipterix.org/dipsaus/reference/attached_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get attached package names in current session (Internally used) — attached_packages","text":"characters, package names attached current session","code":""},{"path":"https://dipterix.org/dipsaus/reference/base64-url.html","id":null,"dir":"Reference","previous_headings":"","what":"Encode or decode 'base64' — base64-url","title":"Encode or decode 'base64' — base64-url","text":"Compatible results package 'base64url', implemented package 'base64enc'. simply like depend two packages can achieve goal. implementation slower. 'base64url' installed, please use version.","code":""},{"path":"https://dipterix.org/dipsaus/reference/base64-url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encode or decode 'base64' — base64-url","text":"","code":"base64_urlencode(x)  base64_urldecode(x)"},{"path":"https://dipterix.org/dipsaus/reference/base64-url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encode or decode 'base64' — base64-url","text":"x character vector encode decode","code":""},{"path":"https://dipterix.org/dipsaus/reference/base64-url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encode or decode 'base64' — base64-url","text":"character vector length x","code":""},{"path":"https://dipterix.org/dipsaus/reference/base64-url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Encode or decode 'base64' — base64-url","text":"","code":"x = \"plain text\" encoded = base64_urlencode(x) decoded = base64_urldecode(encoded) print(encoded) #> [1] \"cGxhaW4gdGV4dA\" print(decoded) #> [1] \"plain text\""},{"path":"https://dipterix.org/dipsaus/reference/base64_to_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Save ","title":"Save ","text":"Save \"Base64\" Data Images","code":""},{"path":"https://dipterix.org/dipsaus/reference/base64_to_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save ","text":"","code":"base64_to_image(data, path)"},{"path":"https://dipterix.org/dipsaus/reference/base64_to_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save ","text":"data characters, encoded \"Base64\" data images path file path save ","code":""},{"path":"https://dipterix.org/dipsaus/reference/base64_to_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save ","text":"Absolute path saved file","code":""},{"path":"https://dipterix.org/dipsaus/reference/base64_to_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ","title":"Convert ","text":"Decode \"Base64\" data generating characters","code":""},{"path":"https://dipterix.org/dipsaus/reference/base64_to_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ","text":"","code":"base64_to_string(what)"},{"path":"https://dipterix.org/dipsaus/reference/base64_to_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ","text":"characters, encoded \"Base64\" data","code":""},{"path":"https://dipterix.org/dipsaus/reference/base64_to_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert ","text":"String","code":""},{"path":"https://dipterix.org/dipsaus/reference/base64_to_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert ","text":"","code":"input <- \"The quick brown fox jumps over the lazy dog\"  # Base64 encode what <- base64enc::base64encode(what = charToRaw(input))  # Base64 decode base64_to_string(what) #> [1] \"The quick brown fox jumps over the lazy dog\""},{"path":"https://dipterix.org/dipsaus/reference/baseline_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Contrasts of Arrays in Different Methods — baseline_array","title":"Calculate Contrasts of Arrays in Different Methods — baseline_array","text":"Provides five methods baseline array calculate contrast.","code":""},{"path":"https://dipterix.org/dipsaus/reference/baseline_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Contrasts of Arrays in Different Methods — baseline_array","text":"","code":"baseline_array(   x,   along_dim,   baseline_indexpoints,   unit_dims = seq_along(dim(x))[-along_dim],   method = c(\"percentage\", \"sqrt_percentage\", \"decibel\", \"zscore\", \"sqrt_zscore\",     \"subtract_mean\") )"},{"path":"https://dipterix.org/dipsaus/reference/baseline_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Contrasts of Arrays in Different Methods — baseline_array","text":"x array (tensor) calculate contrast along_dim integer range 1 maximum dimension x. baseline along dimension, usually time dimension. baseline_indexpoints integer vector, index points counted baseline window? index ranges 1 dim(x)[[along_dim]]. See Details. unit_dims integer vector, baseline unit: see Details. method character, baseline method options : \"percentage\", \"sqrt_percentage\", \"decibel\", \"zscore\", \"sqrt_zscore\"","code":""},{"path":"https://dipterix.org/dipsaus/reference/baseline_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Contrasts of Arrays in Different Methods — baseline_array","text":"Contrast array dimension x.","code":""},{"path":"https://dipterix.org/dipsaus/reference/baseline_array.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Contrasts of Arrays in Different Methods — baseline_array","text":"Consider scenario want baseline bunch signals recorded different locations. location, record n sessions. session, signal decomposed frequency-time domain. case, input x following form: $$session x frequency x time x location$$ Now want calibrate signals session, frequency location using first 100 time points baseline points, code $$baseline_array(x, along_dim=3, 1:100, unit_dims=c(1,2,4))$$ along_dim=3 dimension time, case, third dimension x. baseline_indexpoints=1:100, meaning first 100 time points used calculate baseline. unit_dims defines unit signal. value c(1,2,4) means unit signal per session (first dimension), per frequency (second) per location (fourth). cases, might want calculate baseline across frequencies unit signal \\(frequency x time\\), .e. signals share session location also share baseline. case, assign unit_dims=c(1,4). five baseline methods. fit different types data. Denote \\(z\\) unit signal, \\(z_0\\) baseline slice. baseline methods : \"percentage\" $$   \\frac{z - \\bar{z_{0}}}{\\bar{z_{0}}} \\times 100\\% $$ \"sqrt_percentage\" $$   \\frac{\\sqrt{z} - \\bar{\\sqrt{z_{0}}}}{\\bar{\\sqrt{z_{0}}}} \\times 100\\% $$ \"decibel\" $$   10 \\times ( \\log_{10}(z) - \\bar{\\log_{10}(z_{0})} ) $$ \"zscore\" $$   \\frac{z-\\bar{z_{0}}}{sd(z_{0})} $$ \"sqrt_zscore\" $$   \\frac{\\sqrt{z}-\\bar{\\sqrt{z_{0}}}}{sd(\\sqrt{z_{0}})} $$","code":""},{"path":"https://dipterix.org/dipsaus/reference/baseline_array.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Contrasts of Arrays in Different Methods — baseline_array","text":"","code":"library(dipsaus) set.seed(1)  # Generate sample data dims = c(10,20,30,2) x = array(rnorm(prod(dims))^2, dims)  # Set baseline window to be arbitrary 10 timepoints baseline_window = sample(30, 10)  # ----- baseline percentage change ------  # Using base functions re1 <- aperm(apply(x, c(1,2,4), function(y){   m <- mean(y[baseline_window])   (y/m - 1) * 100 }), c(2,3,1,4))  # Using dipsaus re2 <- baseline_array(x, 3, baseline_window, c(1,2,4),                       method = 'percentage')  # Check different, should be very tiny (double precisions) range(re2 - re1) #> [1] -4.547474e-13  1.818989e-12  # Check speed for large dataset if(interactive()){   dims = c(200,20,300,2)   x = array(rnorm(prod(dims))^2, dims)   # Set baseline window to be arbitrary 10 timepoints   baseline_window = seq_len(100)   f1 <- function(){     aperm(apply(x, c(1,2,4), function(y){       m <- mean(y[baseline_window])       (y/m - 1) * 100     }), c(2,3,1,4))   }   f2 <- function(){     # equivalent as bl = x[,,baseline_window, ]     #     baseline_array(x, along_dim = 3,                    baseline_indexpoints = baseline_window,                    unit_dims = c(1,2,4), method = 'sqrt_percentage')   }   microbenchmark::microbenchmark(f1(), f2(), times = 3L) }"},{"path":"https://dipterix.org/dipsaus/reference/capture_expr.html","id":null,"dir":"Reference","previous_headings":"","what":"Captures Evaluation Output of Expressions as One Single String — capture_expr","title":"Captures Evaluation Output of Expressions as One Single String — capture_expr","text":"Evaluate expression captures output characters, concatenate one single string.","code":""},{"path":"https://dipterix.org/dipsaus/reference/capture_expr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Captures Evaluation Output of Expressions as One Single String — capture_expr","text":"","code":"capture_expr(expr, collapse = \"\\n\", type = c(\"output\", \"message\"), ...)"},{"path":"https://dipterix.org/dipsaus/reference/capture_expr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Captures Evaluation Output of Expressions as One Single String — capture_expr","text":"expr R expression collapse character concatenate outputs type, ... passed capture.output","code":""},{"path":"https://dipterix.org/dipsaus/reference/capture_expr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Captures Evaluation Output of Expressions as One Single String — capture_expr","text":"Character length 1: output captured capture.output","code":""},{"path":"https://dipterix.org/dipsaus/reference/capture_expr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Captures Evaluation Output of Expressions as One Single String — capture_expr","text":"","code":"x <- data.frame(a=1:10) x_str <- capture_expr({   print(x) })  x_str #> [1] \"    a\\n1   1\\n2   2\\n3   3\\n4   4\\n5   5\\n6   6\\n7   7\\n8   8\\n9   9\\n10 10\"  cat(x_str) #>     a #> 1   1 #> 2   2 #> 3   3 #> 4   4 #> 5   5 #> 6   6 #> 7   7 #> 8   8 #> 9   9 #> 10 10"},{"path":"https://dipterix.org/dipsaus/reference/cat2.html","id":null,"dir":"Reference","previous_headings":"","what":"Color Output — cat2","title":"Color Output — cat2","text":"Color Output","code":""},{"path":"https://dipterix.org/dipsaus/reference/cat2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color Output — cat2","text":"","code":"cat2(   ...,   level = \"DEBUG\",   print_level = FALSE,   file = \"\",   sep = \" \",   fill = FALSE,   labels = NULL,   append = FALSE,   end = \"\\n\",   pal = list(DEBUG = \"grey60\", INFO = \"#1d9f34\", WARNING = \"#ec942c\", ERROR = \"#f02c2c\",     FATAL = \"#763053\", DEFAULT = \"grey60\"),   use_cli = TRUE,   bullet = \"auto\" )"},{"path":"https://dipterix.org/dipsaus/reference/cat2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color Output — cat2","text":"... printed level 'DEBUG', 'INFO', 'WARNING', 'ERROR', 'FATAL' (total 5 levels) print_level true, prepend levels messages file, sep, fill, labels, append pass base::cat end character append string pal named list defining colors see details use_cli logical, whether use package 'cli' bullet character, use 'cli', symbol show. see symbol","code":""},{"path":"https://dipterix.org/dipsaus/reference/cat2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color Output — cat2","text":"none.","code":""},{"path":"https://dipterix.org/dipsaus/reference/cat2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Color Output — cat2","text":"five levels colors default: 'DEBUG', 'INFO', 'WARNING', 'ERROR', FATAL. Default colors : 'DEBUG' (grey60), 'INFO' (#1d9f34), 'WARNING' (#ec942c), 'ERROR' (#f02c2c), 'FATAL' (#763053) 'DEFAULT' (#000000, black). level preset five levels, color \"default\"-black color.","code":""},{"path":"https://dipterix.org/dipsaus/reference/check_installed_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Check If Packages Are Installed, Returns Missing Packages — check_installed_packages","title":"Check If Packages Are Installed, Returns Missing Packages — check_installed_packages","text":"Check Packages Installed, Returns Missing Packages","code":""},{"path":"https://dipterix.org/dipsaus/reference/check_installed_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check If Packages Are Installed, Returns Missing Packages — check_installed_packages","text":"","code":"check_installed_packages(   pkgs,   libs = base::.libPaths(),   auto_install = FALSE,   ... )"},{"path":"https://dipterix.org/dipsaus/reference/check_installed_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check If Packages Are Installed, Returns Missing Packages — check_installed_packages","text":"pkgs vector packages install libs paths libraries auto_install automatically install packages missing ... parameters install.packages","code":""},{"path":"https://dipterix.org/dipsaus/reference/check_installed_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check If Packages Are Installed, Returns Missing Packages — check_installed_packages","text":"package names installed","code":""},{"path":"https://dipterix.org/dipsaus/reference/clear_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to clear all elements within environment — clear_env","title":"Function to clear all elements within environment — clear_env","text":"Function clear elements within environment","code":""},{"path":"https://dipterix.org/dipsaus/reference/clear_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to clear all elements within environment — clear_env","text":"","code":"clear_env(env, ...)"},{"path":"https://dipterix.org/dipsaus/reference/clear_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to clear all elements within environment — clear_env","text":"env environment clean, can R environment, fastmap2 instance ... ignored","code":""},{"path":"https://dipterix.org/dipsaus/reference/clear_env.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to clear all elements within environment — clear_env","text":"","code":"env = new.env() env$a = 1 print(as.list(env)) #> $a #> [1] 1 #>   clear_env(env) print(as.list(env)) #> list()"},{"path":"https://dipterix.org/dipsaus/reference/col2hexStr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert color to Hex string — col2hexStr","title":"Convert color to Hex string — col2hexStr","text":"Convert color Hex string","code":""},{"path":"https://dipterix.org/dipsaus/reference/col2hexStr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert color to Hex string — col2hexStr","text":"","code":"col2hexStr(col, alpha = NULL, prefix = \"#\", ...)"},{"path":"https://dipterix.org/dipsaus/reference/col2hexStr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert color to Hex string — col2hexStr","text":"col character integer indicating color alpha NULL numeric, transparency. See grDevices::rgb prefix character, default \"#\" ... passing  adjustcolor","code":""},{"path":"https://dipterix.org/dipsaus/reference/col2hexStr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert color to Hex string — col2hexStr","text":"characters containing hex value color. See details","code":""},{"path":"https://dipterix.org/dipsaus/reference/col2hexStr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert color to Hex string — col2hexStr","text":"col2hexStr converts colors 1, 2, 3, \"red\", \"blue\", ... hex strings can easily recognized `HTML`, `CSS` `JavaScript`. Internally function uses adjustcolor two differences: returned hex string contain alpha value alpha NULL; leading prefix \"#\" can customized","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/col2hexStr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert color to Hex string — col2hexStr","text":"","code":"col2hexStr(1, prefix = '0x')      # \"0x000000\" #> [1] \"0x000000\" col2hexStr('blue')                # \"#0000FF\" #> [1] \"#0000FF\"  # Change default palette, see \"grDevices::colors()\" grDevices::palette(c('orange3', 'skyblue1')) col2hexStr(1)                     # Instead of #000000, #CD8500 #> [1] \"#CD8500\""},{"path":"https://dipterix.org/dipsaus/reference/collapse.html","id":null,"dir":"Reference","previous_headings":"","what":"Collapse Sensors And Calculate Summations/Mean — collapse","title":"Collapse Sensors And Calculate Summations/Mean — collapse","text":"Collapse Sensors Calculate Summations/Mean","code":""},{"path":"https://dipterix.org/dipsaus/reference/collapse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collapse Sensors And Calculate Summations/Mean — collapse","text":"","code":"collapse(x, keep, average = FALSE)"},{"path":"https://dipterix.org/dipsaus/reference/collapse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collapse Sensors And Calculate Summations/Mean — collapse","text":"x numeric multi-mode tensor (array), without NA keep dimension keep average collapse sum mean","code":""},{"path":"https://dipterix.org/dipsaus/reference/collapse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collapse Sensors And Calculate Summations/Mean — collapse","text":"collapsed array values mean summation along collapsing dimensions","code":""},{"path":"https://dipterix.org/dipsaus/reference/collapse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collapse Sensors And Calculate Summations/Mean — collapse","text":"","code":"# Example 1 x = matrix(1:16, 4)  # Keep the first dimension and calculate sums along the rest collapse(x, keep = 1) #> [1] 28 32 36 40 rowSums(x)  # Should yield the same result #> [1] 28 32 36 40  # Example 2 x = array(1:120, dim = c(2,3,4,5)) result = collapse(x, keep = c(3,2)) compare = apply(x, c(3,2), sum) sum(abs(result - compare)) # The same, yield 0 or very small number (1e-10) #> [1] 0  # Example 3 (performance) # Small data, no big difference, even slower x = array(rnorm(240), dim = c(4,5,6,2)) microbenchmark::microbenchmark(   result = collapse(x, keep = c(3,2)),   compare = apply(x, c(3,2), sum),   times = 1L, check = function(v){     max(abs(range(do.call('-', v)))) < 1e-10   } ) #> Unit: microseconds #>     expr      min       lq     mean   median       uq      max neval #>   result  677.644  677.644  677.644  677.644  677.644  677.644     1 #>  compare 1070.015 1070.015 1070.015 1070.015 1070.015 1070.015     1  # large data big difference x = array(rnorm(prod(300,200,105)), c(300,200,105,1)) microbenchmark::microbenchmark(   result = collapse(x, keep = c(3,2)),   compare = apply(x, c(3,2), sum),   times = 1L , check = function(v){     max(abs(range(do.call('-', v)))) < 1e-10   }) #> Unit: milliseconds #>     expr       min        lq      mean    median        uq       max neval #>   result  65.37102  65.37102  65.37102  65.37102  65.37102  65.37102     1 #>  compare 114.52123 114.52123 114.52123 114.52123 114.52123 114.52123     1"},{"path":"https://dipterix.org/dipsaus/reference/compoundInput2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compound input that combines and extends shiny inputs — compoundInput2","title":"Compound input that combines and extends shiny inputs — compoundInput2","text":"Compound input combines extends shiny inputs","code":""},{"path":"https://dipterix.org/dipsaus/reference/compoundInput2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compound input that combines and extends shiny inputs — compoundInput2","text":"","code":"compoundInput2(   inputId,   label = \"Group\",   components = shiny::tagList(),   initial_ncomp = 1,   min_ncomp = 0,   max_ncomp = 10,   value = NULL,   label_color = NA,   max_height = NULL,   ... )"},{"path":"https://dipterix.org/dipsaus/reference/compoundInput2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compound input that combines and extends shiny inputs — compoundInput2","text":"inputId character, shiny input ID label character, show groups components `HTML` tags defines combines HTML components within groups initial_ncomp numeric initial number groups show, non-negative min_ncomp minimum number groups, default 0, non-negative max_ncomp maximum number groups, default 10, greater equal min_ncomp value list lists, initial values inputs, see examples. label_color integer characters, length 1 max_ncomp, assigning colors group labels; default NA, try get color foreground par(\"fg\") max_height maximum height widget ... ignored","code":""},{"path":"https://dipterix.org/dipsaus/reference/compoundInput2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compound input that combines and extends shiny inputs — compoundInput2","text":"`HTML` tags","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/compoundInput2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compound input that combines and extends shiny inputs — compoundInput2","text":"","code":"library(shiny); library(dipsaus) compoundInput2(   'input_id', 'Group',     div(     textInput('text', 'Text Label'),     sliderInput('sli', 'Slider Selector', value = 0, min = 1, max = 1)   ),   label_color = 1:10,   value = list(     list(text = '1'),  # Set text first group to be \"1\"     list(),                # no settings for second group     list(sli = 0.2)    # sli = 0.2 for the third group   )) #> Warning: In sliderInput(): `value` should be greater than or equal to `min` (value = 0, min = 1). #> Warning: In sliderInput(): `value` should be greater than or equal to `min` (value = 0, min = 1). #> <div id=\"input_id\" class=\"dipsaus-compound-input\"> #>   <div class=\"dipsaus-compound-input-header force-hidden\" style=\"display:none!important;\">{\"template\":[\"&lt;div class=\\\"dipsaus-compound-input-item col-xs-12\\\" data-value=\\\"${{ind}}\\\"&gt;\\n  &lt;fieldset style=\\\"border: 1px solid #efefef; padding:.35em .625em .75em; margin-bottom: 15px;\\\"&gt;\\n    &lt;legend style=\\\"border:none; margin: 0; padding: 0 10px; font-size: 14px; color: ${{label_color}}\\\"&gt;Group - ${{ind}}&lt;\\/legend&gt;\\n    &lt;div&gt;\\n      &lt;div class=\\\"form-group shiny-input-container\\\"&gt;\\n        &lt;label class=\\\"control-label\\\" id=\\\"input_id_text_${{ind}}-label\\\" for=\\\"input_id_text_${{ind}}\\\"&gt;Text Label&lt;\\/label&gt;\\n        &lt;input id=\\\"input_id_text_${{ind}}\\\" type=\\\"text\\\" class=\\\"shiny-input-text form-control\\\" value=\\\"\\\"/&gt;\\n      &lt;\\/div&gt;\\n      &lt;div class=\\\"form-group shiny-input-container\\\"&gt;\\n        &lt;label class=\\\"control-label\\\" id=\\\"input_id_sli_${{ind}}-label\\\" for=\\\"input_id_sli_${{ind}}\\\"&gt;Slider Selector&lt;\\/label&gt;\\n        &lt;input class=\\\"js-range-slider\\\" id=\\\"input_id_sli_${{ind}}\\\" data-skin=\\\"shiny\\\" data-min=\\\"1\\\" data-max=\\\"1\\\" data-from=\\\"0\\\" data-step=\\\"0.02\\\" data-grid=\\\"true\\\" data-grid-num=\\\"NaN\\\" data-grid-snap=\\\"false\\\" data-prettify-separator=\\\",\\\" data-prettify-enabled=\\\"true\\\" data-keyboard=\\\"true\\\" data-data-type=\\\"number\\\"/&gt;\\n      &lt;\\/div&gt;\\n    &lt;\\/div&gt;\\n  &lt;\\/fieldset&gt;\\n&lt;\\/div&gt;\"],\"initial_ncomp\":[1],\"min_ncomp\":[0],\"max_ncomp\":[10],\"bind_infos\":{\"text\":{\"binding\":[\"shiny.textInput\"],\"update_function\":[\"shiny::updateTextInput\"],\"call_function\":[\"shiny::textInput\"]},\"sli\":{\"binding\":[\"shiny.sliderInput\"],\"update_function\":[\"shiny::updateSliderInput\"],\"call_function\":[\"shiny::sliderInput\"]}},\"label_color\":[\"#CD8500\",\"#87CEFF\",\"#CD8500\",\"#87CEFF\",\"#CD8500\",\"#87CEFF\",\"#CD8500\",\"#87CEFF\",\"#CD8500\",\"#87CEFF\"],\"initial_value\":[{\"text\":[\"1\"]},[],{\"sli\":[0.2]}]}<\/div> #>   <div class=\"dipsaus-compound-input-body row\"><\/div> #>   <div class=\"dipsaus-compound-input-foot\"> #>     <div class=\"dipsaus-compound-input-foot-ctrl\"><\/div> #>   <\/div> #>   <div class=\"force-hidden\"> #>     <div class=\"dipsaus-compound-input-item col-xs-12\" data-value=\"...junk...\"> #>       <fieldset style=\"border: 1px solid #efefef; padding:.35em .625em .75em; margin-bottom: 15px;\"> #>         <legend style=\"border:none; margin: 0; padding: 0 10px; font-size: 14px; color: ${{label_color}}\">Group - ...junk...<\/legend> #>         <div> #>           <div class=\"form-group shiny-input-container\"> #>             <label class=\"control-label\" id=\"input_id_text_...junk...-label\" for=\"input_id_text_...junk...\">Text Label<\/label> #>             <input id=\"input_id_text_...junk...\" type=\"text\" class=\"shiny-input-text form-control\" value=\"\"/> #>           <\/div> #>           <div class=\"form-group shiny-input-container\"> #>             <label class=\"control-label\" id=\"input_id_sli_...junk...-label\" for=\"input_id_sli_...junk...\">Slider Selector<\/label> #>             <input class=\"js-range-slider\" id=\"input_id_sli_...junk...\" data-skin=\"shiny\" data-min=\"1\" data-max=\"1\" data-from=\"0\" data-step=\"0.02\" data-grid=\"true\" data-grid-num=\"NaN\" data-grid-snap=\"false\" data-prettify-separator=\",\" data-prettify-enabled=\"true\" data-keyboard=\"true\" data-data-type=\"number\"/> #>           <\/div> #>         <\/div> #>       <\/fieldset> #>     <\/div> #>   <\/div> #> <\/div>  # Source - system.file('demo/example-compountInput2.R', package='dipsaus')  # demo('example-compountInput2', package='dipsaus')  library(shiny) library(dipsaus) ui <- fluidPage(   fluidRow(     column(       width = 4,       compoundInput2(         'compound', 'Group Label', label_color = c(NA,1:9),         components = div(           textInput('txt', 'Text'),           selectInput('sel', 'Select', choices = 1:10, multiple = TRUE),           sliderInput('sli', 'Slider', max=1, min=0, val=0.5)         ),         value = list(           list(txt = '1'),  # Set text first group to be \"1\"           '',                # no settings for second group           list(sli = 0.2)    # sli = 0.2 for the third group         )       ),       hr(),       actionButton('action', 'Update compound input')     )   ) )  server <- function(input, output, session) {   observe({     print(input$compound)   })   observe({     # Getting specific input at group 1     print(input$compound_txt_1)   })   observeEvent(input$action, {     updateCompoundInput2(       session, 'compound',       # Update values for each components       value = lapply(1:5, function(ii){         list(           txt = sample(LETTERS, 1),           sel = sample(1:10, 3),           sli = runif(1)         )       }), ncomp = NULL, txt = list(label = as.character(Sys.time())))   }) }  if( interactive() ){   shinyApp(ui, server, options = list(launch.browser = TRUE)) }"},{"path":"https://dipterix.org/dipsaus/reference/decorate_function.html","id":null,"dir":"Reference","previous_headings":"","what":"Python-style decorator — decorate_function","title":"Python-style decorator — decorate_function","text":"Python-style decorator","code":""},{"path":"https://dipterix.org/dipsaus/reference/decorate_function.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Python-style decorator — decorate_function","text":"","code":"decorate_function(orig, decor, ...)  lhs %D% rhs"},{"path":"https://dipterix.org/dipsaus/reference/decorate_function.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Python-style decorator — decorate_function","text":"orig, lhs function decor, rhs decorator function takes orig first argument ... passed decor","code":""},{"path":"https://dipterix.org/dipsaus/reference/decorate_function.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Python-style decorator — decorate_function","text":"","code":"# Example 1: basic usage # Decorator that prints summary of results and return results itself verbose_summary <- function(...){   summary_args <- list(...)   function(f){     function(...){       results <- f(...)         print(do.call(         summary,         c(list(results), summary_args)       ))       results      }   }  }  # runs as.list, but through verbose_summary as_list2 <- decorate_function(as.list, verbose_summary)  # run test res <- as_list2(1:3)  # will verbose summary #>      Length Class  Mode    #> [1,] 1      -none- numeric #> [2,] 1      -none- numeric #> [3,] 1      -none- numeric identical(res, as.list(1:3)) #> [1] TRUE  # Example 2 x <- 1:20 y <- x + rnorm(20)  # decorator, add a line with slope 1 with given intercept abline_xy <- function(b){   function(f){     function(...){       f(...)       intercept <- get_dots('intercept', 0, ...)       abline(a = intercept, b = b)     }   } }  # orig, plot whatever x vs jittered+intercept plot_xy <- function(x, intercept = rnorm(1)){   plot(x, jitter(x, amount = 3) + intercept) }  # new function that decorate plot_xy with abline_xy, and # returns the intercept plot_xy2 <- decorate_function(plot_xy, abline_xy, b = 1)  # alternatively, you might also want to try plot_xy2 <- plot_xy %D% abline_xy(b = 1)  plot_xy2(x = 1:20)"},{"path":"https://dipterix.org/dipsaus/reference/deparse_svec.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Integer Vectors To String — deparse_svec","title":"Convert Integer Vectors To String — deparse_svec","text":"Convert Integer Vectors String","code":""},{"path":"https://dipterix.org/dipsaus/reference/deparse_svec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Integer Vectors To String — deparse_svec","text":"","code":"deparse_svec(   nums,   connect = \"-\",   concatenate = TRUE,   collapse = \",\",   max_lag = 1 )"},{"path":"https://dipterix.org/dipsaus/reference/deparse_svec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Integer Vectors To String — deparse_svec","text":"nums integer vector connect character used connect consecutive numbers concatenate connect strings multiples collapse concatenate, character used connect strings max_lag defines \"consecutive\", min = 1","code":""},{"path":"https://dipterix.org/dipsaus/reference/deparse_svec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Integer Vectors To String — deparse_svec","text":"strings representing input vector. example, c(1, 2, 3) returns \"1-3\".","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/deparse_svec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Integer Vectors To String — deparse_svec","text":"","code":"deparse_svec(c(1:10, 15:18)) #> [1] \"1-10,15-18\""},{"path":"https://dipterix.org/dipsaus/reference/digest2.html","id":null,"dir":"Reference","previous_headings":"","what":"Digest R object with source reference removed — digest2","title":"Digest R object with source reference removed — digest2","text":"Digest R object source reference removed","code":""},{"path":"https://dipterix.org/dipsaus/reference/digest2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Digest R object with source reference removed — digest2","text":"","code":"digest2(object, ..., keep_source = FALSE)"},{"path":"https://dipterix.org/dipsaus/reference/digest2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Digest R object with source reference removed — digest2","text":"object, ... passed digest keep_source whether keep code generates object; default false","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/dipsaus-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"Defunct Functions in Package dipsaus The functions or variables listed here are no longer part of the package. — get_cpu","title":"Defunct Functions in Package dipsaus The functions or variables listed here are no longer part of the package. — get_cpu","text":"Defunct Functions Package dipsaus functions variables listed longer part package.","code":""},{"path":"https://dipterix.org/dipsaus/reference/dipsaus-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defunct Functions in Package dipsaus The functions or variables listed here are no longer part of the package. — get_cpu","text":"","code":"get_cpu()"},{"path":"https://dipterix.org/dipsaus/reference/dipsaus-rstudio-shortcuts.html","id":null,"dir":"Reference","previous_headings":"","what":"Register customized R code to 'RStudio' shortcuts — dipsaus-rstudio-shortcuts","title":"Register customized R code to 'RStudio' shortcuts — dipsaus-rstudio-shortcuts","text":"'RStudio' keyboard shortcuts handy, however, non-trivial set shortcuts run customized code. proposing functions allow 10 customized R expressions registered. first five (1 5) interactive shortcuts, rest five (6 10) non-interactive.","code":""},{"path":"https://dipterix.org/dipsaus/reference/dipsaus-rstudio-shortcuts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register customized R code to 'RStudio' shortcuts — dipsaus-rstudio-shortcuts","text":"","code":"rs_add_insertion_shortcut(which, txt, force = FALSE)  rs_add_shortcut(which, expr, force = FALSE, quoted = FALSE)  rs_remove_shortcut(which)  rs_show_shortcut(which)  rs_quick_debug(env = globalenv())"},{"path":"https://dipterix.org/dipsaus/reference/dipsaus-rstudio-shortcuts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register customized R code to 'RStudio' shortcuts — dipsaus-rstudio-shortcuts","text":"integer 1 10, keyboard shortcut edit txt insertion/replacement shortcut add force whether remove existing shortcut hot-key registered expr expression run shortcut pressed quoted whether expr quoted, default false env environment debug code; default global environment","code":""},{"path":"https://dipterix.org/dipsaus/reference/dipsaus-rstudio-shortcuts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Register customized R code to 'RStudio' shortcuts — dipsaus-rstudio-shortcuts","text":"two steps register 'RStudio' keyboard shortcut. 1. Please enable shortcuts opening 'Tools' > 'Modify Keyboard Shortcuts' 'RStudio' menu bar; search locate add-items starting 'Dipsaus'; register hot-keys choices, save. recommended keys 'Alt' + 1 'Alt' + 0. Apple, 'Alt' equivalent 'option' key. 2. run rs_add_insertion_shortcut rs_add_shortcut customize behaviors shortcuts; see Examples. Function rs_quick_debug provides quick way debug script function without messing code. script works 'RStudio'. executing quick-debug function, cursor context automatically resolved nearest debugging code blocks searched executed. enable feature, add line \"# DIPSAUS: DEBUG START\" code, followed debugging code blocks comments. script figure . Since 'RStudio' context obtained executing function, recommended add function shortcuts. default, shortcut-1 unset, function executed.","code":""},{"path":"https://dipterix.org/dipsaus/reference/dipsaus-rstudio-shortcuts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register customized R code to 'RStudio' shortcuts — dipsaus-rstudio-shortcuts","text":"","code":"if (FALSE) { # \\dontrun{  # Need to run in RStudio # Please read the Section 'Details' carefully  # --------------------------------------------  # I assume the shortcuts are Alt+1,2,...,9,0, # corresponding to shortcuts 1 - 10  # Adds an insertion to Alt+9 rs_add_insertion_shortcut(9, \" %?<-% \", force = TRUE) # restart RStudio and try `Alt+9`   # Adds an expression to Alt+2 rs_add_shortcut(2, {   expr <- sprintf(\"system.time({\\n%s\\n})\\n\",                   rstudioapi::selectionGet()$value)   cat(expr)   eval(parse(text = expr)) }, force = TRUE)  # Select any valid R code and press Alt+1  # --------------------------------------------  # run this to set your shortcut (one-time setup) rs_add_shortcut(1, { dipsaus::rs_quick_debug() })  # Add debug feature: insert the following comment anywhere in your code # You may open a new script in the RStudio  # DIPSAUS: DEBUG START # message(\"Debugging...\") # a <- 1 # print(a) # message(\"Finished\")   # Place your cursor here, press the shortcut key  } # }"},{"path":"https://dipterix.org/dipsaus/reference/do_aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Make aggregate pipe-friendly — do_aggregate","title":"Make aggregate pipe-friendly — do_aggregate","text":"pipe-friendly wrapper aggregate using formula input.","code":""},{"path":"https://dipterix.org/dipsaus/reference/do_aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make aggregate pipe-friendly — do_aggregate","text":"","code":"do_aggregate(x, ...)"},{"path":"https://dipterix.org/dipsaus/reference/do_aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make aggregate pipe-friendly — do_aggregate","text":"x R object ... parameters passed aggregate","code":""},{"path":"https://dipterix.org/dipsaus/reference/do_aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make aggregate pipe-friendly — do_aggregate","text":"Results aggregate","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/do_aggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make aggregate pipe-friendly — do_aggregate","text":"","code":"data(ToothGrowth)  ToothGrowth |>   do_aggregate(len ~ ., mean) #>   supp dose   len #> 1   OJ  0.5 13.23 #> 2   VC  0.5  7.98 #> 3   OJ  1.0 22.70 #> 4   VC  1.0 16.77 #> 5   OJ  2.0 26.06 #> 6   VC  2.0 26.14"},{"path":"https://dipterix.org/dipsaus/reference/do_nothing.html","id":null,"dir":"Reference","previous_headings":"","what":"A dummy function that literally does nothing — do_nothing","title":"A dummy function that literally does nothing — do_nothing","text":"dummy function literally nothing","code":""},{"path":"https://dipterix.org/dipsaus/reference/do_nothing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A dummy function that literally does nothing — do_nothing","text":"","code":"do_nothing(...)"},{"path":"https://dipterix.org/dipsaus/reference/do_nothing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A dummy function that literally does nothing — do_nothing","text":"... ignored","code":""},{"path":"https://dipterix.org/dipsaus/reference/do_nothing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A dummy function that literally does nothing — do_nothing","text":"Nothing","code":""},{"path":"https://dipterix.org/dipsaus/reference/drop_nulls.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop NULL values from list or vectors — drop_nulls","title":"Drop NULL values from list or vectors — drop_nulls","text":"Drop NULL values list vectors","code":""},{"path":"https://dipterix.org/dipsaus/reference/drop_nulls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop NULL values from list or vectors — drop_nulls","text":"","code":"drop_nulls(x, .invalids = list(\"is.null\"))"},{"path":"https://dipterix.org/dipsaus/reference/drop_nulls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop NULL values from list or vectors — drop_nulls","text":"x list check .invalids list functions, function name. Default '.null'.","code":""},{"path":"https://dipterix.org/dipsaus/reference/drop_nulls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop NULL values from list or vectors — drop_nulls","text":"list vector containing invalid values","code":""},{"path":"https://dipterix.org/dipsaus/reference/drop_nulls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop NULL values from list or vectors — drop_nulls","text":"","code":"x <- list(NULL,NULL,1,2) drop_nulls(x)  # length of 2 #> [[1]] #> [1] 1 #>  #> [[2]] #> [1] 2 #>"},{"path":"https://dipterix.org/dipsaus/reference/eval_dirty.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate expressions — eval_dirty","title":"Evaluate expressions — eval_dirty","text":"Evaluate expressions","code":""},{"path":"https://dipterix.org/dipsaus/reference/eval_dirty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate expressions — eval_dirty","text":"","code":"eval_dirty(expr, env = parent.frame(), data = NULL, quoted = TRUE)"},{"path":"https://dipterix.org/dipsaus/reference/eval_dirty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate expressions — eval_dirty","text":"expr R expression 'rlang' quo env environment evaluate data dataframe list quoted expression quoted? default, TRUE. useful want use expression stored variable; see examples","code":""},{"path":"https://dipterix.org/dipsaus/reference/eval_dirty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate expressions — eval_dirty","text":"executed results expr evaluated side effects.","code":""},{"path":"https://dipterix.org/dipsaus/reference/eval_dirty.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate expressions — eval_dirty","text":"eval_dirty uses base::eval() function evaluate expressions. Compare rlang::eval_tidy, affect original environment, eval_dirty causes changes environment. Therefore expr contains assignment, environment changed case.","code":""},{"path":"https://dipterix.org/dipsaus/reference/eval_dirty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate expressions — eval_dirty","text":"","code":"env = new.env(); env$a = 1 rlang::eval_tidy(quote({a <- 111}), env = env) print(env$a)  # Will be 1. This is because eval_tidy has no side effect #> [1] 1  eval_dirty(quote({a <- 111}), env) print(env$a)  # 111, a is changed #> [1] 111  # Unquoted case eval_dirty({a <- 222}, env, quoted = FALSE) print(env$a) #> [1] 222"},{"path":"https://dipterix.org/dipsaus/reference/fancyFileInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny drag-and-drop file input — fancyFileInput","title":"Shiny drag-and-drop file input — fancyFileInput","text":"Fancy drag drop file upload shiny apps.","code":""},{"path":"https://dipterix.org/dipsaus/reference/fancyFileInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny drag-and-drop file input — fancyFileInput","text":"","code":"fancyFileInput(   inputId,   label,   width = NULL,   after_content = \"Drag & drop, or button\",   size = c(\"s\", \"m\", \"l\", \"xl\"),   ... )"},{"path":"https://dipterix.org/dipsaus/reference/fancyFileInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny drag-and-drop file input — fancyFileInput","text":"inputId input slot used access value label display label control, NULL label. width width input after_content tiny content displayed input box size height widget, choices 's', 'm', 'l', 'xl' ... passed fileInput","code":""},{"path":"https://dipterix.org/dipsaus/reference/fancyFileInput.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny drag-and-drop file input — fancyFileInput","text":"See fileInput","code":""},{"path":"https://dipterix.org/dipsaus/reference/fancyFileInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny drag-and-drop file input — fancyFileInput","text":"","code":"library(shiny) library(dipsaus)  ui <- basicPage(   fancyFileInput('file_input', \"Please upload\") )  if(interactive()) {   shinyApp(     ui, server = function(input, output, session){},     options = list(launch.browser = TRUE)   ) }"},{"path":"https://dipterix.org/dipsaus/reference/fastcov2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Covariance Matrix in Parallel — fastcov2","title":"Calculate Covariance Matrix in Parallel — fastcov2","text":"Speed covariance calculation large matrices. default behavior similar cov. Please remove NA prior calculation.","code":""},{"path":"https://dipterix.org/dipsaus/reference/fastcov2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Covariance Matrix in Parallel — fastcov2","text":"","code":"fastcov2(x, y = NULL, col1, col2, df)"},{"path":"https://dipterix.org/dipsaus/reference/fastcov2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Covariance Matrix in Parallel — fastcov2","text":"x numeric vector, matrix data frame; matrix highly recommended maximize performance y NULL (default) vector, matrix data frame compatible dimensions x; default equivalent y = x col1 integers indicating subset (columns) x calculate covariance; default columns col2 integers indicating subset (columns) y calculate covariance; default columns df scalar indicating degrees freedom; default nrow(x)-1","code":""},{"path":"https://dipterix.org/dipsaus/reference/fastcov2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Covariance Matrix in Parallel — fastcov2","text":"covariance matrix x y. Note NA handling. missing values lead NA resulting covariance matrices.","code":""},{"path":"https://dipterix.org/dipsaus/reference/fastcov2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Covariance Matrix in Parallel — fastcov2","text":"","code":"x <- matrix(rnorm(400), nrow = 100)  # Call `cov(x)` to compare fastcov2(x) #>             [,1]       [,2]        [,3]       [,4] #> [1,]  1.17251985 -0.1463312  0.08239227  0.1336536 #> [2,] -0.14633119  1.1509356 -0.12009329 -0.0259273 #> [3,]  0.08239227 -0.1200933  0.91439945  0.0385713 #> [4,]  0.13365361 -0.0259273  0.03857130  0.8697899  # Calculate covariance of subsets fastcov2(x, col1 = 1, col2 = 1:2) #>         [,1]       [,2] #> [1,] 1.17252 -0.1463312  # Speed comparison x <- matrix(rnorm(100000), nrow = 1000) microbenchmark::microbenchmark(   fastcov2 = {     fastcov2(x, col1 = 1:50, col2 = 51:100)   },   cov = {     cov(x[,1:50], x[,51:100])   },   unit = 'ms', times = 10 ) #> Unit: milliseconds #>      expr      min       lq     mean   median       uq      max neval #>  fastcov2 1.403017 1.427593 1.547707 1.471910 1.522109 2.137186    10 #>       cov 5.327286 5.370637 5.513654 5.418922 5.426101 6.542844    10"},{"path":"https://dipterix.org/dipsaus/reference/fastmap2.html","id":null,"dir":"Reference","previous_headings":"","what":"A Wrapper for fastmap::fastmap — fastmap2","title":"A Wrapper for fastmap::fastmap — fastmap2","text":"fastmap provides key-value store keys strings values R objects. differs normal environment fastmap avoids memory leak. fastmap2 wrapper fastmap, provides several generic functions similar behaviors lists environments","code":""},{"path":"https://dipterix.org/dipsaus/reference/fastmap2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Wrapper for fastmap::fastmap — fastmap2","text":"","code":"fastmap2(missing_default = NULL)  # S3 method for class 'fastmap2' x[[name]]  # S3 method for class 'fastmap2' x$name  # S3 method for class 'fastmap2' x[[name]] <- value  # S3 method for class 'fastmap2' x$name <- value  # S3 method for class 'fastmap2' x[i, j = NULL, ...]  # S3 method for class 'fastmap2' x[i, j = NULL, ...] <- value  # S3 method for class 'fastmap2' names(x)  # S3 method for class 'fastmap2' print(x, ...)  # S3 method for class 'fastmap2' length(x)  # S3 method for class 'fastmap2' as.list(x, recursive = FALSE, sorted = FALSE, ...)"},{"path":"https://dipterix.org/dipsaus/reference/fastmap2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Wrapper for fastmap::fastmap — fastmap2","text":"missing_default passed fastmap::fastmap x 'fastmap2' object name name, key value value R object , j vector names ... passed methods recursive whether recursively apply .list sorted whether sort names; default false","code":""},{"path":"https://dipterix.org/dipsaus/reference/fastmap2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Wrapper for fastmap::fastmap — fastmap2","text":"list 'fastmap2' instance","code":""},{"path":"https://dipterix.org/dipsaus/reference/fastmap2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Wrapper for fastmap::fastmap — fastmap2","text":"","code":"## --------------------------- Basic Usage -------------------------- map <- fastmap2() map$a = 1 map$b = 2 print(map) #> <Map, size=2, keys=[b, a]>  map[c('a', 'b')] #> $a #> [1] 1 #>  #> $b #> [1] 2 #>  # Alternative way map['a', 'b'] #> $a #> [1] 1 #>  #> $b #> [1] 2 #>   map[c('c', 'd')] <- 3:4 # or map['e', 'f'] <- 5:6  # The order is not guaranteed, unless sort=TRUE as.list(map) #> $f #> [1] 6 #>  #> $e #> [1] 5 #>  #> $d #> [1] 4 #>  #> $c #> [1] 3 #>  #> $b #> [1] 2 #>  #> $a #> [1] 1 #>  as.list(map, sort=TRUE) #> $a #> [1] 1 #>  #> $b #> [1] 2 #>  #> $c #> [1] 3 #>  #> $d #> [1] 4 #>  #> $e #> [1] 5 #>  #> $f #> [1] 6 #>   names(map) #> [1] \"f\" \"e\" \"d\" \"c\" \"b\" \"a\" length(map) #> [1] 6  ## ----------------------- NULL value handles ----------------------- map$b <- NULL names(map)   # 'b' still exists! #> [1] \"f\" \"e\" \"d\" \"c\" \"b\" \"a\" as.list(map) # 'b' is NULL, but still there #> $f #> [1] 6 #>  #> $e #> [1] 5 #>  #> $d #> [1] 4 #>  #> $c #> [1] 3 #>  #> $b #> NULL #>  #> $a #> [1] 1 #>   # to remove 'b', you have to use `@remove` method map$`@remove`('b')  ## ---------------- Native fastmap::fastmap methods -----------------  # whether map has 'a' map$`@has`('a') #> [1] TRUE  # Remove a name from list map$`@remove`('a')  # remove all from list map$`@reset`() print(map) #> <Map, size=0, keys=[]>"},{"path":"https://dipterix.org/dipsaus/reference/fastquantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate single quantile for numerical values — fastquantile","title":"Calculate single quantile for numerical values — fastquantile","text":"Slightly faster quantile na.rm=TRUE. internal implementation uses 'C++' function std::nth_element, significantly faster base R implementation length input x less 1e7.","code":""},{"path":"https://dipterix.org/dipsaus/reference/fastquantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate single quantile for numerical values — fastquantile","text":"","code":"fastquantile(x, q)"},{"path":"https://dipterix.org/dipsaus/reference/fastquantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate single quantile for numerical values — fastquantile","text":"x numerical vector (integers double) q number 0 1","code":""},{"path":"https://dipterix.org/dipsaus/reference/fastquantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate single quantile for numerical values — fastquantile","text":"Identical quantile(x, q, na.rm=TRUE)","code":""},{"path":"https://dipterix.org/dipsaus/reference/fastquantile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate single quantile for numerical values — fastquantile","text":"","code":"# create input x with NAs x <- rnorm(10000) x[sample(10000, 10)] <- NA  # compute median res <- fastquantile(x, 0.5) res #> [1] 0.01298609  # base method res == quantile(x, 0.5, na.rm = TRUE) #>  50%  #> TRUE  res == median(x, na.rm = TRUE) #> [1] TRUE  # Comparison microbenchmark::microbenchmark(   {     fastquantile(x, 0.5)   },{     quantile(x, 0.5, na.rm = TRUE)   },{     median(x, na.rm = TRUE)   } ) #> Unit: microseconds #>                                    expr     min      lq     mean   median #>            {     fastquantile(x, 0.5) }  86.111 123.300 132.9293 130.1330 #>  {     quantile(x, 0.5, na.rm = TRUE) } 268.120 284.446 330.4202 296.3875 #>         {     median(x, na.rm = TRUE) } 201.165 214.355 251.4946 222.8010 #>        uq     max neval #>  148.4120 169.977   100 #>  409.8595 475.558   100 #>  236.4665 403.372   100"},{"path":"https://dipterix.org/dipsaus/reference/fastqueue2.html","id":null,"dir":"Reference","previous_headings":"","what":"A Wrapper for fastmap::fastqueue — fastqueue2","title":"A Wrapper for fastmap::fastqueue — fastqueue2","text":"Wrapper fastmap::fastqueue","code":""},{"path":"https://dipterix.org/dipsaus/reference/fastqueue2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Wrapper for fastmap::fastqueue — fastqueue2","text":"","code":"fastqueue2(init = 20L, missing_default = NULL)  # S3 method for class 'fastqueue2' x[[i]]  # S3 method for class 'fastqueue2' x[i, j = NULL, ...]  # S3 method for class 'fastqueue2' print(x, ...)  # S3 method for class 'fastqueue2' length(x)  # S3 method for class 'fastqueue2' as.list(x, ...)"},{"path":"https://dipterix.org/dipsaus/reference/fastqueue2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Wrapper for fastmap::fastqueue — fastqueue2","text":"init, missing_default passed fastmap::fastqueue x 'fastqueue2' object , j integer index ... integer indices passed methods","code":""},{"path":"https://dipterix.org/dipsaus/reference/fastqueue2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Wrapper for fastmap::fastqueue — fastqueue2","text":"list 'fastqueue2' instance","code":""},{"path":"https://dipterix.org/dipsaus/reference/fastqueue2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Wrapper for fastmap::fastqueue — fastqueue2","text":"","code":"x <- fastqueue2()  # add elements x$madd(1, \"b\", function(){ \"c\" }, 4, \"5\")  # print information print(x) #> <Queue, size=5>  # get the second element without changing the queue x[[2]] #> [1] \"b\"  # remove and get the first element x$remove() #> [1] 1  # the second item x[[2]] #> function ()  #> { #>     \"c\" #> } #> <environment: 0x55a742bef578>  # first two items in a list x[c(1,2)] #> [[1]] #> [1] \"b\" #>  #> [[2]] #> function ()  #> { #>     \"c\" #> } #> <environment: 0x55a742bef578> #>   print(x) #> <Queue, size=4> as.list(x) #> [[1]] #> [1] \"b\" #>  #> [[2]] #> function ()  #> { #>     \"c\" #> } #> <environment: 0x55a742bef578> #>  #> [[3]] #> [1] 4 #>  #> [[4]] #> [1] \"5\" #>"},{"path":"https://dipterix.org/dipsaus/reference/flex_div.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Shiny element with arrangement automatically — flex_div","title":"Generate Shiny element with arrangement automatically — flex_div","text":"Generate Shiny element arrangement automatically","code":""},{"path":"https://dipterix.org/dipsaus/reference/flex_div.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Shiny element with arrangement automatically — flex_div","text":"","code":"flex_div(..., ncols = \"auto\")"},{"path":"https://dipterix.org/dipsaus/reference/flex_div.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Shiny element with arrangement automatically — flex_div","text":"... shiny UI elements ncols number columns, either \"auto\" vector positive integers","code":""},{"path":"https://dipterix.org/dipsaus/reference/flex_div.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Shiny element with arrangement automatically — flex_div","text":"HTML objects","code":""},{"path":"https://dipterix.org/dipsaus/reference/flex_div.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Shiny element with arrangement automatically — flex_div","text":"multiple numbers columns specified, flex_div guess best size applied. button UI, flex_div automatically add \"20px\" top margin.","code":""},{"path":"https://dipterix.org/dipsaus/reference/flex_div.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Shiny element with arrangement automatically — flex_div","text":"","code":"ui <- flex_div(   shiny::selectInput('sel', label = 'Select input',                      choices = '', width = '100%'),   shiny::textInput('id2', label = html_asis(' '), width = '100%',                    value = 'Heights aligned'),   actionButtonStyled('ok2', 'Button', width = '100%',),   shiny::sliderInput('sl', 'Item 4', min = 1, max = 2,                      value = 1.5, width = '100%'),   shiny::fileInput('aa', 'item 5', width = '100%'),   ncols = c(2,3) # Try to assign 2 or 3 items per column ) if(interactive()){   shiny::shinyApp(ui = shiny::fluidPage(shiny::fluidRow(ui)),                   server = function(input, output, session){}) }"},{"path":"https://dipterix.org/dipsaus/reference/forelse.html","id":null,"dir":"Reference","previous_headings":"","what":"Python-style ","title":"Python-style ","text":"Provide Python-style \"-else\" works follows: element, execute \"\" block, break executing \"\" block, just stop ignore \"else\" statement, otherwise run \"else\" block.","code":""},{"path":"https://dipterix.org/dipsaus/reference/forelse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Python-style ","text":"","code":"forelse(x, FUN, ALT_FUN = NULL)"},{"path":"https://dipterix.org/dipsaus/reference/forelse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Python-style ","text":"x iterative R objects list, vector, etc. FUN function applies x ALT_FUN function takes argument types R object","code":""},{"path":"https://dipterix.org/dipsaus/reference/forelse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Python-style ","text":"FUN returns anything NULL, function returns first none NULL object. x fed FUN return NULL, function returns ALT_FUN (ALT_FUN function) result ALT_FUN().","code":""},{"path":"https://dipterix.org/dipsaus/reference/forelse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Python-style ","text":"","code":"# --------------------------- Basic Usage ------------------------------  # 1. ALT_FUN get executed because FUN returns NULL for all items in x forelse(   1:10,   function(x){     cat('The input is ', x, end = '\\n')     if( x > 10) return(x) else return(NULL)   },   function(){     cat('ALT_FUN is executed!\\n')     'wow'   } ) #> The input is  1  #> The input is  2  #> The input is  3  #> The input is  4  #> The input is  5  #> The input is  6  #> The input is  7  #> The input is  8  #> The input is  9  #> The input is  10  #> ALT_FUN is executed! #> [1] \"wow\"  # 2. FUN returns non-NULL object forelse(   1:10,   function(x){     cat('The input is ', x, end = '\\n')     if( x %% 2 == 0 ) return(x) else return(NULL)   },   'wow' ) #> The input is  1  #> The input is  2  #> [1] 2  # --------------------------- Performance ------------------------------ FUN <- function(x){   Sys.sleep(0.01)   if( x %% 2 == 0 ) return(x) else return(NULL) }  microbenchmark::microbenchmark({   forelse(1:10, FUN, 'wow') }, {   y <- unlist(lapply(1:10, FUN))   if(length(y)){     y <- y[[1]]   }else{     y <- 'wow'   } }, {   y <- NULL   for(x in 1:10){ y <- FUN(x) }   if(is.null(y)){ y <- 'wow' } }, times = 3) #> Unit: milliseconds #>                                                                                                                       expr #>                                                                                          {     forelse(1:10, FUN, \"wow\") } #>  {     y <- unlist(lapply(1:10, FUN))     if (length(y)) {         y <- y[[1]]     }     else {         y <- \"wow\"     } } #>           {     y <- NULL     for (x in 1:10) {         y <- FUN(x)     }     if (is.null(y)) {         y <- \"wow\"     } } #>        min        lq      mean    median        uq       max neval #>   20.20497  20.20615  20.26238  20.20734  20.29109  20.37483     3 #>  100.78334 101.09481 101.23850 101.40627 101.46608 101.52589     3 #>  100.80070 100.97126 101.07248 101.14181 101.20837 101.27492     3"},{"path":"https://dipterix.org/dipsaus/reference/getInputBinding.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain registered input bindings — getInputBinding","title":"Obtain registered input bindings — getInputBinding","text":"Obtain registered input bindings","code":""},{"path":"https://dipterix.org/dipsaus/reference/getInputBinding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain registered input bindings — getInputBinding","text":"","code":"getInputBinding(fname, pkg = NULL, envir = parent.frame())"},{"path":"https://dipterix.org/dipsaus/reference/getInputBinding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain registered input bindings — getInputBinding","text":"fname input function name, character quoted expression 'shiny::textInput' numericInput. pkg (optional), name package envir environment evaluate fname pkg provided","code":""},{"path":"https://dipterix.org/dipsaus/reference/getInputBinding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain registered input bindings — getInputBinding","text":"list containing: 1. `JavaScript` input binding name; 2. `R` updating function name","code":""},{"path":"https://dipterix.org/dipsaus/reference/getInputBinding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain registered input bindings — getInputBinding","text":"","code":"library(dipsaus)  # Most recommended usage getInputBinding('compoundInput2', pkg = 'dipsaus') #> $binding #> [1] \"dipsaus.compoundInput2\" #>  #> $update_function #> [1] \"dipsaus.updateCompoundInput2\" #>  #> $call_function #> [1] \"dipsaus::compoundInput2\" #>   # Other usages getInputBinding('shiny::textInput') #> $binding #> [1] \"shiny.textInput\" #>  #> $update_function #> [1] \"shiny::updateTextInput\" #>  #> $call_function #> [1] \"shiny::textInput\" #>    getInputBinding(shiny::textInput) #> $binding #> [1] \"shiny.textInput\" #>  #> $update_function #> [1] \"shiny::updateTextInput\" #>  #> $call_function #> [1] \"shiny::textInput\" #>   getInputBinding(compoundInput2, pkg = 'dipsaus') #> $binding #> [1] \"dipsaus.compoundInput2\" #>  #> $update_function #> [1] \"dipsaus.updateCompoundInput2\" #>  #> $call_function #> [1] \"dipsaus::compoundInput2\" #>   # Bad usage, raise errors in some cases if (FALSE) { # \\dontrun{ ## You need to library(shiny), or set envir=asNamespace('shiny'), or pkg='shiny' getInputBinding('textInput') getInputBinding(textInput) # also fails  ## Always fails getInputBinding('dipsaus::compoundInput2', pkg = 'dipsaus') } # }"},{"path":"https://dipterix.org/dipsaus/reference/get_credential.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random password — get_credential","title":"Generate a random password — get_credential","text":"Please note function meant used production. meant used highly secured cryptographic purposes.","code":""},{"path":"https://dipterix.org/dipsaus/reference/get_credential.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random password — get_credential","text":"","code":"get_credential(   master_password,   method = c(\"get_or_create\", \"replace\", \"query\"),   service = NULL,   special_chr = \"~`! @#$%^&*()_-+={[}]|:;'<,>.?/\",   tokenfile = NULL,   verbose = FALSE )"},{"path":"https://dipterix.org/dipsaus/reference/get_credential.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random password — get_credential","text":"master_password master password know, least 8 characters method whether query token map, create password, choices 'get_or_create' (default), 'replace', 'query'; see 'Details' service service name, must contains letters, digits, equal sign, underscore, comma, dot, dash special_chr special characters allowed password tokenfile file containing tokens. Warning: lose token book, hard (impossible, impractical) restore passwords verbose whether print service names; default false","code":""},{"path":"https://dipterix.org/dipsaus/reference/get_credential.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random password — get_credential","text":"method 'query', returns token map; otherwise returns password ","code":""},{"path":"https://dipterix.org/dipsaus/reference/get_credential.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a random password — get_credential","text":"Please note function meant used production anything requires high security level. likely personal use since tired storing passwords cloud buy services. encryption adopts 'sha256' algorithm provided digest function. restore password, need twp components: master_password, token book ( tokenfile). missing, password lost. Please store token book properly (example, 'Dropbox' vault). token book shared. Anyone master password unlikely restore service password. share master password anyone . default, method='get_or_create' try retrieve existing tokens generate password. token missing, new token generated. method='replace' ignore existing tokens directly create new one.","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/get_credential.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a random password — get_credential","text":"","code":"tokenfile <- tempfile()  # ---------- Create a password and store the tokens to token book ------ pass1 <- get_credential(   master_password = \"my password\",   service = \"google.com:my_username\",   special_chr = \"@#$%^&*\",   tokenfile = tokenfile ) print(pass1) #> [1] \"2jceh^q1iu3o^u@f2xqgbknqprhltqjk\"  # ---------- Query existing tokens ------ token_params <- get_credential(   method = \"query\",   tokenfile = tokenfile,   verbose = TRUE ) #> google.com:my_username #>   print(token_params) #> $`google.com:my_username` #> $`google.com:my_username`$service #> [1] \"google.com:my_username\" #>  #> $`google.com:my_username`$token #> [1] \"up8XlXL9Qp6Kj4d3evPg5bEhgHAmJaOUHb3hW6YXVIxVakm54r\" #>  #> $`google.com:my_username`$seed #> [1] 2051058623          4          3         15         10 #>  #> $`google.com:my_username`$specials #> [1] \"@#$%^&*\" #>  #>   # ---------- retrieve stored password ---------- pass2 <- get_credential(   master_password = \"my password\",   service = \"google.com\",   tokenfile = tokenfile ) identical(pass1, pass2) #> [1] FALSE  # Using wrong master password pass3 <- get_credential(   master_password = \"wrong password\",   service = \"google.com\",   tokenfile = tokenfile ) identical(pass1, pass3) #> [1] FALSE  # ---------- Replace token ---------- # Existing token will be replaced with a new token pass4 <- get_credential(   master_password = \"my password\",   method = \"replace\",   service = \"google.com\",   special_chr = \"@#$%^&*\",   tokenfile = tokenfile ) print(pass4) #> [1] \"egq$eildpb0$2ydom^mc6x7kchxut^b2\" identical(pass1, pass4) #> [1] FALSE"},{"path":"https://dipterix.org/dipsaus/reference/get_dots.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or check elements from dots '...' — get_dots","title":"Get or check elements from dots '...' — get_dots","text":"Get information '...' without evaluating arguments.","code":""},{"path":"https://dipterix.org/dipsaus/reference/get_dots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or check elements from dots '...' — get_dots","text":"","code":"get_dots(..name, ..default = NULL, ...)  missing_dots(envir = parent.frame())"},{"path":"https://dipterix.org/dipsaus/reference/get_dots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or check elements from dots '...' — get_dots","text":"..name character name argument ..default R object return argument found ... dots contains argument envir R environment","code":""},{"path":"https://dipterix.org/dipsaus/reference/get_dots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or check elements from dots '...' — get_dots","text":"missing_dots returns logical vector lengths matching dot lengths. get_dots returns value corresponding name.","code":""},{"path":"https://dipterix.org/dipsaus/reference/get_dots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or check elements from dots '...' — get_dots","text":"","code":"# ------------------------ Basic Usage ---------------------------  # missing_dots(environment()) is a fixed usage  my_function <- function(...){   missing_dots(environment()) } my_function(,) #> [1] TRUE TRUE  # get_dots plot2 <- function(...){   title = get_dots('main', 'There is no title', ...)   plot(...)   title }  plot2(1:10)  #> [1] \"There is no title\" plot2(1:10, main = 'Scatter Plot of 1:10')  #> [1] \"Scatter Plot of 1:10\"  # ------------------------ Comparisons ---------------------------- f1 <- function(...){ get_dots('x', ...) } f2 <- function(...){ list(...)[['x']] } delayedAssign('y', { cat('y is evaluated!') })  # y will not evaluate f1(x = 1, y = y) #> [1] 1  # y gets evaluated f2(x = 1, y = y) #> y is evaluated! #> [1] 1  # -------------------- Decorator example -------------------------- ret_range <- function(which_range = 'y'){   function(f){     function(...){       f(...)       y_range <- range(get_dots(which_range, 0, ...))       y_range     }   } } plot_ret_yrange <- plot %D% ret_range('y') plot_ret_yrange(x = 1:10, y = rnorm(10))  #> [1] -0.7859034  1.1909336"},{"path":"https://dipterix.org/dipsaus/reference/get_ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Get 'IP' address — get_ip","title":"Get 'IP' address — get_ip","text":"Get 'IP' address","code":""},{"path":"https://dipterix.org/dipsaus/reference/get_ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get 'IP' address — get_ip","text":"","code":"get_ip(get_public = NA)"},{"path":"https://dipterix.org/dipsaus/reference/get_ip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get 'IP' address — get_ip","text":"get_public whether get public 'IP'","code":""},{"path":"https://dipterix.org/dipsaus/reference/get_ip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get 'IP' address — get_ip","text":"list 'IP' addresses","code":""},{"path":"https://dipterix.org/dipsaus/reference/get_os.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect the type of operating system — get_os","title":"Detect the type of operating system — get_os","text":"Detect type operating system","code":""},{"path":"https://dipterix.org/dipsaus/reference/get_os.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect the type of operating system — get_os","text":"","code":"get_os()"},{"path":"https://dipterix.org/dipsaus/reference/get_os.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect the type of operating system — get_os","text":"type current operating system: 'windows', 'darwin', 'linux', 'solaris', otherwise 'unknown'.","code":""},{"path":"https://dipterix.org/dipsaus/reference/get_os.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect the type of operating system — get_os","text":"","code":"get_os() #> [1] \"linux\""},{"path":"https://dipterix.org/dipsaus/reference/get_ram.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Memory Size — get_ram","title":"Get Memory Size — get_ram","text":"Get Memory Size","code":""},{"path":"https://dipterix.org/dipsaus/reference/get_ram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Memory Size — get_ram","text":"","code":"get_ram()"},{"path":"https://dipterix.org/dipsaus/reference/get_ram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Memory Size — get_ram","text":"System RAM bytes, NA supported.","code":""},{"path":"https://dipterix.org/dipsaus/reference/get_ram.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Memory Size — get_ram","text":"function get_ram supports 'MacOS', 'Windows', 'Linux'. 'Solaris' platforms return NA. system commands used detect memory limits: 'Windows' Uses command 'wmic.exe' 'Windows' system folder. Notice command-line tool might exist 'Windows' machines. get_ram return NA locate command-line tool. 'MacOS' Uses command 'sysctl' located '/usr/sbin/' '/sbin/'. Alternatively, can edit environment variable 'PATH' include command-line tools 'sysctl' missing. get_ram return NA locate 'sysctl'. 'Linux' Uses file '/proc/meminfo', possibly first entry 'MemTotal'. file missing entry 'MemTotal' located, get_ram return NA.","code":""},{"path":"https://dipterix.org/dipsaus/reference/get_ram.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Memory Size — get_ram","text":"","code":"get_ram() #> 16766767104.0 B"},{"path":"https://dipterix.org/dipsaus/reference/grapes-OF-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an element with condition that it must be from a list or vector — %OF%","title":"Get an element with condition that it must be from a list or vector — %OF%","text":"Get element condition must list vector","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-OF-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an element with condition that it must be from a list or vector — %OF%","text":"","code":"lhs %OF% rhs"},{"path":"https://dipterix.org/dipsaus/reference/grapes-OF-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an element with condition that it must be from a list or vector — %OF%","text":"lhs element candidate rhs constraint","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-OF-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an element with condition that it must be from a list or vector — %OF%","text":"Returns element length one rhs","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-OF-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get an element with condition that it must be from a list or vector — %OF%","text":"","code":"# C is from LETTERS, therefore returns `C` \"C\" %OF% LETTERS #> [1] \"C\"   # `lhs` is not from `rhs`, hence return the first element of LETTERS '9' %OF% LETTERS #> [1] \"A\" NULL %OF% LETTERS #> [1] \"A\"  # When there are multiple elements from `lhs`, select the first that # matches the constraint c('9', \"D\", \"V\") %OF% LETTERS #> [1] \"D\""},{"path":"https://dipterix.org/dipsaus/reference/grapes-equals-greater-than-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"A JavaScript style of creating functions — %=>%","title":"A JavaScript style of creating functions — %=>%","text":"JavaScript style creating functions","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-equals-greater-than-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A JavaScript style of creating functions — %=>%","text":"","code":"args %=>% expr"},{"path":"https://dipterix.org/dipsaus/reference/grapes-equals-greater-than-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A JavaScript style of creating functions — %=>%","text":"args function arguments: see formals expr R expression forms body functions: see body","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-equals-greater-than-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A JavaScript style of creating functions — %=>%","text":"function takes args parameters expr function body","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-equals-greater-than-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A JavaScript style of creating functions — %=>%","text":"","code":"# Formal arguments c(a) %=>% {   print(a) } #> function (a)  #> { #>     print(a) #> } #> <environment: 0x55a73de102f8>  # Informal arguments list(a=) %=>% {   print(a) } #> function (a)  #> { #>     print(a) #> } #> <environment: 0x55a73de102f8>  # Multiple inputs c(a, b = 2, ...) %=>% {   print(c(a, b, ...)) } #> function (a, b = 2, ...)  #> { #>     print(c(a, b, ...)) #> } #> <environment: 0x55a73de102f8>  # ----- JavaScript style of forEach ----- # ### Equivalent JavaScript Code: # LETTERS.forEach((el, ii) => { #   console.log('The index of letter ' + el + ' in \"x\" is: ' + ii); # });  iapply(LETTERS, c(el, ii) %=>% {   cat2('The index of letter ', el, ' in ', sQuote('x'), ' is: ', ii) }) -> results #> The index of letter  A  in  ‘x’  is:  1  #> The index of letter  B  in  ‘x’  is:  2  #> The index of letter  C  in  ‘x’  is:  3  #> The index of letter  D  in  ‘x’  is:  4  #> The index of letter  E  in  ‘x’  is:  5  #> The index of letter  F  in  ‘x’  is:  6  #> The index of letter  G  in  ‘x’  is:  7  #> The index of letter  H  in  ‘x’  is:  8  #> The index of letter  I  in  ‘x’  is:  9  #> The index of letter  J  in  ‘x’  is:  10  #> The index of letter  K  in  ‘x’  is:  11  #> The index of letter  L  in  ‘x’  is:  12  #> The index of letter  M  in  ‘x’  is:  13  #> The index of letter  N  in  ‘x’  is:  14  #> The index of letter  O  in  ‘x’  is:  15  #> The index of letter  P  in  ‘x’  is:  16  #> The index of letter  Q  in  ‘x’  is:  17  #> The index of letter  R  in  ‘x’  is:  18  #> The index of letter  S  in  ‘x’  is:  19  #> The index of letter  T  in  ‘x’  is:  20  #> The index of letter  U  in  ‘x’  is:  21  #> The index of letter  V  in  ‘x’  is:  22  #> The index of letter  W  in  ‘x’  is:  23  #> The index of letter  X  in  ‘x’  is:  24  #> The index of letter  Y  in  ‘x’  is:  25  #> The index of letter  Z  in  ‘x’  is:  26"},{"path":"https://dipterix.org/dipsaus/reference/grapes-help-set-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Left-hand side checked assignment Provides a way to assign default values to variables. If the statement `lhs` is invalid or NULL, this function will try to assign value, otherwise nothing happens. — %?<-%","title":"Left-hand side checked assignment Provides a way to assign default values to variables. If the statement `lhs` is invalid or NULL, this function will try to assign value, otherwise nothing happens. — %?<-%","text":"Left-hand side checked assignment Provides way assign default values variables. statement `lhs` invalid NULL, function try assign value, otherwise nothing happens.","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-help-set-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Left-hand side checked assignment Provides a way to assign default values to variables. If the statement `lhs` is invalid or NULL, this function will try to assign value, otherwise nothing happens. — %?<-%","text":"","code":"lhs %?<-% value"},{"path":"https://dipterix.org/dipsaus/reference/grapes-help-set-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Left-hand side checked assignment Provides a way to assign default values to variables. If the statement `lhs` is invalid or NULL, this function will try to assign value, otherwise nothing happens. — %?<-%","text":"lhs object check assign value value assigned lhs NULL","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-help-set-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Left-hand side checked assignment Provides a way to assign default values to variables. If the statement `lhs` is invalid or NULL, this function will try to assign value, otherwise nothing happens. — %?<-%","text":"Assign value right-hand side left-hand side lhs exist NULL","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-help-set-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Left-hand side checked assignment Provides a way to assign default values to variables. If the statement `lhs` is invalid or NULL, this function will try to assign value, otherwise nothing happens. — %?<-%","text":"","code":"# Prepare, remove aaa if exists if(exists('aaa', envir = globalenv(), inherits = FALSE)){   rm(aaa, envir = globalenv()) }  # Assign aaa %?<-% 1; print(aaa) #> [1] 1  # However, if assigned, nothing happens aaa = 1; aaa %?<-% 2; print(aaa) #> [1] 1  # in a list a = list() a$e %?<-% 1; print(a$e) #> [1] 1 a$e %?<-% 2; print(a$e) #> [1] 1"},{"path":"https://dipterix.org/dipsaus/reference/grapes-plus-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plus-minus operator — %+-%","title":"Plus-minus operator — %+-%","text":"Plus-minus operator","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-plus-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plus-minus operator — %+-%","text":"","code":"a %+-% b"},{"path":"https://dipterix.org/dipsaus/reference/grapes-plus-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plus-minus operator — %+-%","text":", b numeric vectors, matrices arrays","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-plus-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plus-minus operator — %+-%","text":"+/- b, dimension depends +b. +b scalar, returns vector two; case vector, returns matrix; cases return array last dimension equal 2.","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-plus-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plus-minus operator — %+-%","text":"","code":"# scalar 1 %+-% 2   # -1, 3 #> [1]  3 -1  # vector input c(1,2,3) %+-% 2   # matrix #>      [,1] [,2] #> [1,]    3   -1 #> [2,]    4    0 #> [3,]    5    1  # matrix input matrix(1:9, 3) %+-% 2   # 3x3x2 array #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]    3    6    9 #> [2,]    4    7   10 #> [3,]    5    8   11 #>  #> , , 2 #>  #>      [,1] [,2] [,3] #> [1,]   -1    2    5 #> [2,]    0    3    6 #> [3,]    1    4    7 #>"},{"path":"https://dipterix.org/dipsaus/reference/grapes-set-help-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Right-hand side checked assignment Provides a way to avoid assignment to the left-hand side. If the statement `value` is invalid or NULL, this function will not assign values and nothing happens. — %<-?%","title":"Right-hand side checked assignment Provides a way to avoid assignment to the left-hand side. If the statement `value` is invalid or NULL, this function will not assign values and nothing happens. — %<-?%","text":"Right-hand side checked assignment Provides way avoid assignment left-hand side. statement `value` invalid NULL, function assign values nothing happens.","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-set-help-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Right-hand side checked assignment Provides a way to avoid assignment to the left-hand side. If the statement `value` is invalid or NULL, this function will not assign values and nothing happens. — %<-?%","text":"","code":"lhs %<-?% value"},{"path":"https://dipterix.org/dipsaus/reference/grapes-set-help-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Right-hand side checked assignment Provides a way to avoid assignment to the left-hand side. If the statement `value` is invalid or NULL, this function will not assign values and nothing happens. — %<-?%","text":"lhs object assigned value value checked","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-set-help-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Right-hand side checked assignment Provides a way to avoid assignment to the left-hand side. If the statement `value` is invalid or NULL, this function will not assign values and nothing happens. — %<-?%","text":"Assign value right-hand side left-hand side value exists NULL","code":""},{"path":"https://dipterix.org/dipsaus/reference/grapes-set-help-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Right-hand side checked assignment Provides a way to avoid assignment to the left-hand side. If the statement `value` is invalid or NULL, this function will not assign values and nothing happens. — %<-?%","text":"","code":"# Prepare, remove aaa if exists if(exists('aaa', envir = globalenv(), inherits = FALSE)){   rm(aaa, envir = globalenv()) }  # aaa will not be assigned. run `print(aaa)` will raise error aaa %<-?% NULL  # Assign aaa %<-?% 1 print(aaa) #> [1] 1  # in a list a = list() a$e %<-?% bbb; print(a$e) #> NULL a$e %<-?% 2; print(a$e) #> [1] 2"},{"path":"https://dipterix.org/dipsaus/reference/graphic-devices.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a group of named graphic devices — graphic-devices","title":"Create a group of named graphic devices — graphic-devices","text":"Create group named graphic devices","code":""},{"path":"https://dipterix.org/dipsaus/reference/graphic-devices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a group of named graphic devices — graphic-devices","text":"","code":"dev_create(..., env = parent.frame(), attributes = list())  get_dev_attr(which, dev = grDevices::dev.cur(), ifnotfound = NULL)"},{"path":"https://dipterix.org/dipsaus/reference/graphic-devices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a group of named graphic devices — graphic-devices","text":"... named expressions launch devices env environment evaluate expressions attributes named list; names correspond device names values attributes set devices attribute obtain dev device search attributes ifnotfound value return attribute found","code":""},{"path":"https://dipterix.org/dipsaus/reference/graphic-devices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a group of named graphic devices — graphic-devices","text":"list functions query, control, switch devices","code":""},{"path":"https://dipterix.org/dipsaus/reference/graphic-devices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a group of named graphic devices — graphic-devices","text":"","code":"if (FALSE)  ## Unix-specific example  # Create multiple named devices, setting attributes to the second graph devs <- dev_create(   line = X11(), points = x11(),   attributes = list(points = list(pch = 16)) )  # switch to device named \"points\"  devs$dev_which('points') #> Error: object 'devs' not found  # Plot points, with pch given as preset plot(1:10, pch = get_dev_attr(which = 'pch', ifnotfound = 1))   # switch to \"line\" device devs$dev_switch('line') #> Error: object 'devs' not found plot(1:100, type='l')   # Create another group with conflict name dev_another <- dev_create(line = X11()) #> Warning: unable to open connection to X11 display '' #> Error in .External2(C_X11, d$display, d$width, d$height, d$pointsize,     d$gamma, d$colortype, d$maxcubesize, d$bg, d$canvas, d$fonts,     NA_integer_, d$xpos, d$ypos, d$title, type, antialias, d$family,     optionSymbolFont(d$symbolfamily)): unable to start device X11cairo  # Query device name with 'line' dev_another$dev_which('line')  # 4 #> Error: object 'dev_another' not found devs$dev_which('line')  # 2, doesn't conflict with the new groups #> Error: object 'devs' not found  dev.list() #> pdf  #>   2  # close one or more device dev_another$dev_off('line') #> Error: object 'dev_another' not found dev.list() #> pdf  #>   2   # close all devices devs$dev_off() #> Error: object 'devs' not found dev.list() #> pdf  #>   2    # \\dontrun{}"},{"path":"https://dipterix.org/dipsaus/reference/handler_dipsaus_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Progress-bar Handler — handler_dipsaus_progress","title":"Progress-bar Handler — handler_dipsaus_progress","text":"Handler progress2 support progressr::handlers. See examples detailed use case","code":""},{"path":"https://dipterix.org/dipsaus/reference/handler_dipsaus_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Progress-bar Handler — handler_dipsaus_progress","text":"","code":"handler_dipsaus_progress(   title = getOption(\"dipsaus.progressr.title\", \"Progress\"),   intrusiveness = getOption(\"progressr.intrusiveness.gui\", 1),   target = if (is.null(shiny::getDefaultReactiveDomain())) \"terminal\" else \"gui\",   enable = interactive() || shiny_is_running(),   ... )"},{"path":"https://dipterix.org/dipsaus/reference/handler_dipsaus_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Progress-bar Handler — handler_dipsaus_progress","text":"title default title progress2 intrusiveness non-negative scalar intrusive (disruptive) reporter user target progression updates rendered enable whether progress reported ... passed make_progression_handler","code":""},{"path":"https://dipterix.org/dipsaus/reference/handler_dipsaus_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Progress-bar Handler — handler_dipsaus_progress","text":"","code":"library(progressr) library(shiny) library(future)  ## ------------------------------ Setup! ------------------------------- handlers(handler_dipsaus_progress())  # ------------------------------ A simple usage ------------------------ xs <- 1:5 handlers(handler_dipsaus_progress()) with_progress({   p <- progressor(along = xs)   y <- lapply(xs, function(x) {     p(sprintf(\"x=%g\", x))     Sys.sleep(0.1)     sqrt(x)   }) })  # ------------------------ A future.apply case ------------------------- plan(sequential) # test it yourself with plan(multisession)  handlers(handler_dipsaus_progress()) with_progress({   p <- progressor(along = xs)   y <- future.apply::future_lapply(xs, function(x) {     p(sprintf(\"x=%g\", x))     Sys.sleep(0.1)     sqrt(x)   }) })  # ------------------------ A shiny case --------------------------------  ui <- fluidPage(   actionButton('ok', 'Run Demo') )  server <- function(input, output, session) {   handlers(handler_dipsaus_progress())   make_forked_clusters()    observeEvent(input$ok, {     with_progress({       p <- progressor(along = 1:100)       y <- future.apply::future_lapply(1:100, function(x) {         p(sprintf(\"Input %d|Result %d\", x, x+1))         Sys.sleep(1)         x+1       })     })   }) }  if(interactive()){   shinyApp(ui, server) }"},{"path":"https://dipterix.org/dipsaus/reference/html_asis.html","id":null,"dir":"Reference","previous_headings":"","what":"Escape HTML strings — html_asis","title":"Escape HTML strings — html_asis","text":"Escape HTML strings displayed '-' websites.","code":""},{"path":"https://dipterix.org/dipsaus/reference/html_asis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Escape HTML strings — html_asis","text":"","code":"html_asis(s, space = TRUE)"},{"path":"https://dipterix.org/dipsaus/reference/html_asis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Escape HTML strings — html_asis","text":"s characters space whether also escape white space, default true.","code":""},{"path":"https://dipterix.org/dipsaus/reference/html_asis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Escape HTML strings — html_asis","text":"R string","code":""},{"path":"https://dipterix.org/dipsaus/reference/html_asis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Escape HTML strings — html_asis","text":"","code":"ui <- flex_div(   shiny::textInput('id', ' ', width = '100%',                    value = 'Height not aligned'),   actionButtonStyled('ok', 'Button1', width = '100%',),   shiny::textInput('id2', html_asis(' '), width = '100%',                    value = 'Heights aligned'),   actionButtonStyled('ok2', 'Button2', width = '100%',),   ncols = 2 ) if(interactive()){   shiny::shinyApp(ui = shiny::fluidPage(shiny::fluidRow(ui)),                   server = function(input, output, session){}) }"},{"path":"https://dipterix.org/dipsaus/reference/html_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine, add, or remove 'HTML' classes — html_class","title":"Combine, add, or remove 'HTML' classes — html_class","text":"Combine 'HTML' classes produce nice, clean 'HTML' class string via combine_html_class, remove class via remove_html_class","code":""},{"path":"https://dipterix.org/dipsaus/reference/html_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine, add, or remove 'HTML' classes — html_class","text":"","code":"combine_html_class(...)  remove_html_class(target, class)"},{"path":"https://dipterix.org/dipsaus/reference/html_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine, add, or remove 'HTML' classes — html_class","text":"... one characters, classes combine; duplicated classes removed target characters, class list class one characters, classes removed target","code":""},{"path":"https://dipterix.org/dipsaus/reference/html_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine, add, or remove 'HTML' classes — html_class","text":"character string new 'HTML' class","code":""},{"path":"https://dipterix.org/dipsaus/reference/html_class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine, add, or remove 'HTML' classes — html_class","text":"","code":"# Combine classes \"a b c d e\" combine_html_class(\"a\", \"b  a\", c(\"c\", \" d\", \"b\"), list(\"e \", \"a\")) #> [1] \"a b c d e\"  # Remove class remove_html_class(\"a b   c  e\", c(\"b\", \"c \")) #> [1] \"a e\""},{"path":"https://dipterix.org/dipsaus/reference/iapply.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply each elements with index as second input — iapply","title":"Apply each elements with index as second input — iapply","text":"Apply function index variable second input.","code":""},{"path":"https://dipterix.org/dipsaus/reference/iapply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply each elements with index as second input — iapply","text":"","code":"iapply(X, FUN, ..., .method = c(\"sapply\", \"lapply\", \"vapply\"))"},{"path":"https://dipterix.org/dipsaus/reference/iapply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply each elements with index as second input — iapply","text":"X vector (atomic list) FUN function applied element X: see `Details`. ... passed apply methods .method method use, default sapply","code":""},{"path":"https://dipterix.org/dipsaus/reference/iapply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply each elements with index as second input — iapply","text":"list matrix depends .method. See lapply","code":""},{"path":"https://dipterix.org/dipsaus/reference/iapply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply each elements with index as second input — iapply","text":"FUN passed apply methods. Unlike lapply, FUN expected least two arguments. first argument element X, second argument index number element.","code":""},{"path":"https://dipterix.org/dipsaus/reference/is_from_namespace.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether a function, environment comes from a namespace — is_from_namespace","title":"Check whether a function, environment comes from a namespace — is_from_namespace","text":"coarse way find function comes package.","code":""},{"path":"https://dipterix.org/dipsaus/reference/is_from_namespace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether a function, environment comes from a namespace — is_from_namespace","text":"","code":"is_from_namespace(x, recursive = TRUE)"},{"path":"https://dipterix.org/dipsaus/reference/is_from_namespace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether a function, environment comes from a namespace — is_from_namespace","text":"x function, environment, language (environment attached) recursive whether recursively search parent environments","code":""},{"path":"https://dipterix.org/dipsaus/reference/is_from_namespace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether a function, environment comes from a namespace — is_from_namespace","text":"logical true x environment defined namespace; returns false object atomic, defined /global environment, empty environment.","code":""},{"path":"https://dipterix.org/dipsaus/reference/is_from_namespace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether a function, environment comes from a namespace — is_from_namespace","text":"","code":"is_from_namespace(baseenv())        # TRUE #> [1] TRUE is_from_namespace(utils::read.csv)  # TRUE #> [1] TRUE  x <- function(){} is_from_namespace(NULL)             # FALSE #> [1] FALSE is_from_namespace(x)                # FALSE #> [1] FALSE is_from_namespace(emptyenv())       # FALSE #> [1] FALSE  # Let environment of `x` be base environment # (exception case) environment(x) <- baseenv() is_from_namespace(x)        # TRUE #> [1] TRUE"},{"path":"https://dipterix.org/dipsaus/reference/lapply_async2.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply, but in parallel — lapply_async2","title":"Apply, but in parallel — lapply_async2","text":"Apply, parallel","code":""},{"path":"https://dipterix.org/dipsaus/reference/lapply_async2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply, but in parallel — lapply_async2","text":"","code":"lapply_async2(   x,   FUN,   FUN.args = list(),   callback = NULL,   plan = TRUE,   future.chunk.size = NULL,   future.seed = sample.int(1, n = 1e+05 - 1),   ... )"},{"path":"https://dipterix.org/dipsaus/reference/lapply_async2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply, but in parallel — lapply_async2","text":"x vector, list FUN function apply element x FUN.args arguments feed FUN callback function run iteration plan logical, character future plan; see Details. future.chunk.size, future.seed see also future_lapply. want callbacks called immediately loop, set 1, optimal way right now. ... passed plan","code":""},{"path":"https://dipterix.org/dipsaus/reference/lapply_async2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply, but in parallel — lapply_async2","text":"(FUN.args, lapply(x, function(el){eval(body(FUN))}))","code":""},{"path":"https://dipterix.org/dipsaus/reference/lapply_async2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply, but in parallel — lapply_async2","text":"plan logical, FALSE means use current plan. plan=TRUE, equals plan='multicore'. characters, plan can 'multicore', 'callr', 'sequential', 'multisession', 'multiprocess', etc. Alternatively, pass future plan objects.","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/lapply_async2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply, but in parallel — lapply_async2","text":"","code":"library(future) plan(sequential)  # Use sequential plan # 1. Change `plan` to 'multicore', 'multisession', or TRUE to enable # multi-core, but still with progress information # 2. Change plan=FALSE will use current future plan res <- lapply_async2(100:200, function(x){   return(x+1) }, callback = function(e){   sprintf('Input=%d', e) }, plan = 'sequential')  # Disable callback message, then the function reduce to # normal `future.apply::future_lapply` res <- lapply_async2(100:200, function(x){   return(x+1) }, callback = NULL, plan = FALSE)  if(interactive()) {    # PID are different, meaning executing in different sessions   lapply_async2(1:4, function(x){     Sys.getpid()   }) }"},{"path":"https://dipterix.org/dipsaus/reference/lapply_callr.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply function with rs_exec — lapply_callr","title":"Apply function with rs_exec — lapply_callr","text":"Apply function rs_exec","code":""},{"path":"https://dipterix.org/dipsaus/reference/lapply_callr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply function with rs_exec — lapply_callr","text":"","code":"lapply_callr(   x,   fun,   ...,   .callback = NULL,   .globals = list(),   .ncores = future::availableCores(),   .packages = attached_packages(),   .focus_on_console = TRUE,   .rs = FALSE,   .quiet = FALSE,   .name = \"\",   .wait = TRUE )"},{"path":"https://dipterix.org/dipsaus/reference/lapply_callr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply function with rs_exec — lapply_callr","text":"x vector list fun function ... passed function, see lapply .callback function takes zero, one, two arguments return string show progress .globals named list fun relies .ncores number cores use; used .wait=TRUE .packages packages load .focus_on_console whether focus console finished; used .rs true .rs whether create 'RStudio' jobs; default false .quiet whether suppress progress message .name name progress jobs .wait whether wait results; default true, blocks main session waiting results.","code":""},{"path":"https://dipterix.org/dipsaus/reference/lapply_callr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply function with rs_exec — lapply_callr","text":".wait=TRUE, returns list , cases, identical lapply; .wait=FALSE, returns function collects results.","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/lapply_callr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply function with rs_exec — lapply_callr","text":"","code":"if(interactive()){    lapply_callr(1:3, function(x, a){     c(Sys.getpid(), a, x)   }, a = 1)    lapply_callr(1:30, function(x)     {       Sys.sleep(0.1)       sprintf(\"a + x = %d\", a + x)     }, .globals = list(a = 1),     .callback = I, .name = \"Test\")  }"},{"path":"https://dipterix.org/dipsaus/reference/list_to_fastmap2.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy elements to fastmap2 — list_to_fastmap2","title":"Copy elements to fastmap2 — list_to_fastmap2","text":"Copy elements fastmap2","code":""},{"path":"https://dipterix.org/dipsaus/reference/list_to_fastmap2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy elements to fastmap2 — list_to_fastmap2","text":"","code":"list_to_fastmap2(li, map = NULL)"},{"path":"https://dipterix.org/dipsaus/reference/list_to_fastmap2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy elements to fastmap2 — list_to_fastmap2","text":"li list environment map NULL fastmap2 instance","code":""},{"path":"https://dipterix.org/dipsaus/reference/list_to_fastmap2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy elements to fastmap2 — list_to_fastmap2","text":"map NULL, elements added map return map, otherwise create new instance.","code":""},{"path":"https://dipterix.org/dipsaus/reference/list_to_fastqueue2.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy elements to fastqueue2 — list_to_fastqueue2","title":"Copy elements to fastqueue2 — list_to_fastqueue2","text":"Copy elements fastqueue2","code":""},{"path":"https://dipterix.org/dipsaus/reference/list_to_fastqueue2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy elements to fastqueue2 — list_to_fastqueue2","text":"","code":"list_to_fastqueue2(li, queue = NULL)"},{"path":"https://dipterix.org/dipsaus/reference/list_to_fastqueue2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy elements to fastqueue2 — list_to_fastqueue2","text":"li list environment queue NULL fastqueue2 instance","code":""},{"path":"https://dipterix.org/dipsaus/reference/list_to_fastqueue2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy elements to fastqueue2 — list_to_fastqueue2","text":"map NULL, elements added map return map, otherwise create new instance.","code":""},{"path":"https://dipterix.org/dipsaus/reference/lock.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or Unlock a Lock — lock","title":"Create or Unlock a Lock — lock","text":"wrapper 'synchronicity' package, user can interrupt lock procedure anytime, worry whether lock exists .","code":""},{"path":"https://dipterix.org/dipsaus/reference/lock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create or Unlock a Lock — lock","text":"","code":"dipsaus_lock(name, timeout = 10, exclusive = TRUE)  dipsaus_unlock(name, timeout = 10, exclusive = TRUE)  dipsaus_resetlocks(name)"},{"path":"https://dipterix.org/dipsaus/reference/lock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create or Unlock a Lock — lock","text":"name character, locker's name, must letters digits timeout numeric, seconds wait locker lock unlock exclusive ignored","code":""},{"path":"https://dipterix.org/dipsaus/reference/lock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create or Unlock a Lock — lock","text":"Logical, whether operation succeed.","code":""},{"path":"https://dipterix.org/dipsaus/reference/lock.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create or Unlock a Lock — lock","text":"","code":"# Clear existing locks dipsaus::dipsaus_resetlocks() #> NULL  # unlock to prepare for the example dipsaus_unlock('testlocker', timeout = 0.01) #> [1] TRUE  # Create a locker, return TRUE lock_success = dipsaus_lock('testlocker') if(lock_success){   cat2('testlocker has been locked') } #> testlocker has been locked   # test whether locker has been locked lock_success = dipsaus_lock('testlocker', timeout = 0.01) if(!lock_success){   cat2('attempt to lock testlocker failed') }  # unlock dipsaus_unlock('testlocker', timeout = 0.01) #> [1] TRUE  # clean up dipsaus::dipsaus_resetlocks() #> NULL"},{"path":"https://dipterix.org/dipsaus/reference/make_forked_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Create forked clusters, but more than that — make_forked_clusters","title":"Create forked clusters, but more than that — make_forked_clusters","text":"Creates forked clusters. fails, switch alternative plan (default \"multisession\").","code":""},{"path":"https://dipterix.org/dipsaus/reference/make_forked_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create forked clusters, but more than that — make_forked_clusters","text":"","code":"make_forked_clusters(   workers = future::availableCores(),   on_failure = getOption(\"dipsaus.cluster.backup\", \"sequential\"),   clean = FALSE,   ... )"},{"path":"https://dipterix.org/dipsaus/reference/make_forked_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create forked clusters, but more than that — make_forked_clusters","text":"workers positive integer, number cores use on_failure alternative plan use failed. useful forked process supported (like 'windows'); default options(\"dipsaus.cluster.backup\") 'sequential' clean whether reverse plan exit. useful use make_forked_clusters inside function. See details examples. ... passing future::plan","code":""},{"path":"https://dipterix.org/dipsaus/reference/make_forked_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create forked clusters, but more than that — make_forked_clusters","text":"Current future plan","code":""},{"path":"https://dipterix.org/dipsaus/reference/make_forked_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create forked clusters, but more than that — make_forked_clusters","text":"original designed wrapper future::plan(future::multicore, ...). Forked clusters discouraged running 'RStudio' pointers 'RStudio' might incorrectly handled, causing fork-bombs. However, forked process also big advantages parallel methods: data transfer needed, hence speed fast. Many external pointers can also shared using forked process. Since version 1.14.0, unfortunately, forked 'multicore' banned future package default, usually need enable manually. function provides simple way enable plan future time. windows, forked process supported, situation, plan fall back sequential, might want. case, function provides alternative strategy allows plan. also always enable alternative strategy setting dipsaus..fork option true. parameter clean allows automatically clean plan. function allows reverse back previous plan automatically function exits. example, users might already set plans, clean=TRUE allows set plan back original plans function exit. use feature, please make sure function called within another function, must collect results exiting outer function.","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/make_forked_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create forked clusters, but more than that — make_forked_clusters","text":"","code":"if(interactive()){    # ------ Basic example   library(future)   library(dipsaus)    # sequential   plan(\"sequential\")    make_forked_clusters()   plan()  # multicore, or multisession (on windows)    Sys.getpid()  # current main session PID   value(future({Sys.getpid()}))  # sub-process PID, evaluated as multicore    # ------ When fork is not supported    # reset to default single core strategy   plan(\"sequential\")    # Disable forked process   options(\"dipsaus.no.fork\" = TRUE)   options(\"dipsaus.cluster.backup\" = \"multisession\")    # Not fall back to multisession   make_forked_clusters()   plan()    # ------ Auto-clean    # reset plan   plan(\"sequential\")   options(\"dipsaus.no.fork\" = FALSE)   options(\"dipsaus.cluster.backup\" = \"multisession\")    # simple case:   my_func <- function(){     make_forked_clusters(clean = TRUE)      fs <- lapply(1:4, function(i){       future({Sys.getpid()})     })      unlist(value(fs))   }    my_func()    # The PIDs are different, meaning they ran in other sessions   plan()       # The plan is sequential, auto reversed strategy    # ------ Auto-clean with lapply_async2   my_plan <- plan()    # lapply_async2 version of the previous task   lapply_async2(1:4, function(i){     Sys.getpid()   })    identical(plan(), my_plan)  }"},{"path":"https://dipterix.org/dipsaus/reference/map.html","id":null,"dir":"Reference","previous_headings":"","what":"Create R object map. — map","title":"Create R object map. — map","text":"Provides five types map fit different use cases.","code":""},{"path":"https://dipterix.org/dipsaus/reference/map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create R object map. — map","text":"","code":"session_map(map = fastmap::fastmap())  rds_map(path = tempfile())  text_map(path = tempfile())"},{"path":"https://dipterix.org/dipsaus/reference/map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create R object map. — map","text":"map fastmap::fastmap() list path directory path map data stored","code":""},{"path":"https://dipterix.org/dipsaus/reference/map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create R object map. — map","text":"R6 instance inherits AbstractMap","code":""},{"path":"https://dipterix.org/dipsaus/reference/map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create R object map. — map","text":"five types map implemented. inherit class AbstractMap. several differences use case scenarios backend implementations. session_map session map takes fastmap object. objects stored current R session. means access map process parent process. goal map share data across different environments store global variables, long share map object. looking maps can shared different processes, check rest map types. closest map type rds_map. rds_map 'RDS' map uses file system store values. values stored separately '.rds' files. Compared session maps, 'RDS' map can shared across different R process. recommended store large files rds_map. value large RAM, text_map recommended. text_map 'text' map uses file system store values. Similar rds_map, can stored across multiple processes long maps share file directory. However, unlike rds_map, text_map text_map can store basic data values, namely atom data types. supported types : numeric, character, vector, list, matrix highly recommended convert factors characters. use values functions environments. recommended use case scenario speed major concern, want preserve data backward compatibility. Otherwise highly recommended use rds_map.","code":""},{"path":"https://dipterix.org/dipsaus/reference/map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create R object map. — map","text":"","code":"# ----------------------Basic Usage ----------------------  # Define a path to your map. path = tempfile() map <- rds_map(path)  # Reset map$reset()  # Check if the map is corrupted. map$validate()  # You have not set any key-value pairs yet. # Let's say two parallel processes (A and B) are sharing this map. # Process A set values map$keys() #> NULL  # Start push # set a normal message map$set(key = 'a', value = 1)  # set a large object map$set(key = 'b', value = rnorm(100000))  # set an object with hash of another object map$set(key = 'c', value = 2, signature = list(   parameter1 = 123,   parameter2 = 124 ))  # Check what's in the map from process B mapB <- rds_map(path) mapB$keys() #> ==YQ ==Yg ==Yw  #>  \"a\"  \"b\"  \"c\"  mapB$keys(include_signatures = TRUE) #>      keys                                    #> ==YQ \"a\"  \"6717f2823d3202449301145073ab8719\" #> ==Yg \"b\"  \"47603c6eb8fc74469c9f034d74fbe021\" #> ==Yw \"c\"  \"f3b07dfebb13e24c3b1a5e11ec21a15d\"  # Number of key-values pairs in the map. mapB$size() #> [1] 3  # Check if key exists mapB$has(c('1','a', 'c')) #>     1     a     c  #> FALSE  TRUE  TRUE   # Check if key exists and signature also matches mapB$has('c', signature = list(   parameter1 = 123,   parameter2 = 124 )) #>    c  #> TRUE   # Signature changed, then return FALSE. This is especially useful when # value is really large and reading the value takes tons of time mapB$has('c', signature = list(   parameter1 = 1244444,   parameter2 = 124 )) #>     c  #> FALSE   # Destroy the map's files altogether. mapB$destroy()  if (FALSE) { # \\dontrun{   # Once destroyed, validate will raise error   mapB$validate() } # }"},{"path":"https://dipterix.org/dipsaus/reference/mask_function2.html","id":null,"dir":"Reference","previous_headings":"","what":"Mask a function with given variables — mask_function2","title":"Mask a function with given variables — mask_function2","text":"Modifies default behavior function adding one environment layer top input function. masked variables assigned directly environment.","code":""},{"path":"https://dipterix.org/dipsaus/reference/mask_function2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mask a function with given variables — mask_function2","text":"","code":"mask_function2(f, ..., .list = list())"},{"path":"https://dipterix.org/dipsaus/reference/mask_function2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mask a function with given variables — mask_function2","text":"f function ..., .list name-value pairs mask function","code":""},{"path":"https://dipterix.org/dipsaus/reference/mask_function2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mask a function with given variables — mask_function2","text":"masked function","code":""},{"path":"https://dipterix.org/dipsaus/reference/mask_function2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mask a function with given variables — mask_function2","text":"","code":"a <- 123 f1 <- function(){   a + 1 } f1()   # 124 #> [1] 124  f2 <- mask_function2(f1, a = 1) f2()   # a is masked with value 1, return 2 #> [1] 2  environment(f1)  # global env #> <environment: 0x55a740c5ff78> environment(f2)  # masked env #> <environment: 0x55a740b4fa50>  env <- environment(f2) identical(parent.env(env), environment(f1))  # true #> [1] TRUE env$a  # masked variables: a=1 #> [1] 1"},{"path":"https://dipterix.org/dipsaus/reference/match_calls.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursively match calls and modify arguments — match_calls","title":"Recursively match calls and modify arguments — match_calls","text":"Recursively match calls modify arguments","code":""},{"path":"https://dipterix.org/dipsaus/reference/match_calls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursively match calls and modify arguments — match_calls","text":"","code":"match_calls(   call,   recursive = TRUE,   replace_args = list(),   quoted = FALSE,   envir = parent.frame(),   ... )"},{"path":"https://dipterix.org/dipsaus/reference/match_calls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursively match calls and modify arguments — match_calls","text":"call R expression recursive logical, recursively match calls, default true replace_args named list functions, see examples quoted logical, call quoted envir environment call evaluated ... parameters passing match.call","code":""},{"path":"https://dipterix.org/dipsaus/reference/match_calls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursively match calls and modify arguments — match_calls","text":"nested call arguments matched","code":""},{"path":"https://dipterix.org/dipsaus/reference/match_calls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recursively match calls and modify arguments — match_calls","text":"","code":"library(dipsaus); library(shiny)  # In shiny modules, we might want to add ns() to inputIds # In this example, textInput(id) will become textInput(ns(id)) match_calls(lapply(1:20, function(i){   textInput(paste('id_', i), paste('Label ', i)) }), replace_args = list(   inputId = function(arg, call){ as.call(list(quote(ns), arg)) } )) #> lapply(X = 1:20, FUN = function(i) { #>     textInput(inputId = ns(paste(\"id_\", i)), label = paste(\"Label \",  #>         i)) #> })"},{"path":"https://dipterix.org/dipsaus/reference/mean_se.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates mean and standard error of mean — mean_se","title":"Calculates mean and standard error of mean — mean_se","text":"Calculates mean standard error mean","code":""},{"path":"https://dipterix.org/dipsaus/reference/mean_se.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates mean and standard error of mean — mean_se","text":"","code":"mean_se(x, na.rm = FALSE, se_na_as_zero = na.rm)"},{"path":"https://dipterix.org/dipsaus/reference/mean_se.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates mean and standard error of mean — mean_se","text":"x R numerical object na.rm whether remove NA; default false se_na_as_zero see na_as_zero ste_mean","code":""},{"path":"https://dipterix.org/dipsaus/reference/mean_se.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates mean and standard error of mean — mean_se","text":"named vector containing mean standard error mean (ste_mean).","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/mean_se.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates mean and standard error of mean — mean_se","text":"","code":"# Mean should be near 0 (mean of standard normal) # standard error of mean should be near 0.01 mean_se(rnorm(10000)) #>          mean            se  #> -0.0008053411  0.0099975702"},{"path":"https://dipterix.org/dipsaus/reference/mem_limit2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get max RAM size This is an experimental function that is designed for non-windows systems — mem_limit2","title":"Get max RAM size This is an experimental function that is designed for non-windows systems — mem_limit2","text":"Get max RAM size experimental function designed non-windows systems","code":""},{"path":"https://dipterix.org/dipsaus/reference/mem_limit2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get max RAM size This is an experimental function that is designed for non-windows systems — mem_limit2","text":"","code":"mem_limit2()"},{"path":"https://dipterix.org/dipsaus/reference/mem_limit2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get max RAM size This is an experimental function that is designed for non-windows systems — mem_limit2","text":"list total free memory.","code":""},{"path":"https://dipterix.org/dipsaus/reference/new_function2.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new function that supports 'quasi-quosure' syntax — new_function2","title":"Create new function that supports 'quasi-quosure' syntax — new_function2","text":"Create new function supports 'quasi-quosure' syntax","code":""},{"path":"https://dipterix.org/dipsaus/reference/new_function2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new function that supports 'quasi-quosure' syntax — new_function2","text":"","code":"new_function2(   args = alist(),   body = {  },   env = parent.frame(),   quote_type = c(\"unquoted\", \"quote\", \"quo\"),   quasi_env = parent.frame() )"},{"path":"https://dipterix.org/dipsaus/reference/new_function2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new function that supports 'quasi-quosure' syntax — new_function2","text":"args named list function formals body function body expression, supports 'quasi-quosure' syntax env declare environment function quote_type character, whether body unquoted, quoted, 'quo' object ('rlang' package) quasi_env 'quasi-quosure' evaluated, default parent environment","code":""},{"path":"https://dipterix.org/dipsaus/reference/new_function2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new function that supports 'quasi-quosure' syntax — new_function2","text":"function","code":""},{"path":"https://dipterix.org/dipsaus/reference/new_function2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create new function that supports 'quasi-quosure' syntax — new_function2","text":"unquoted body expression quoted, expressions 'quasi-quosure' like !!var evaluated substituted value var. 'quosure', quo_squash applied. quoted expression substitute, expanded 'quasi-quosure' detected args must list object, see formals. arguments default values, quoted defaults, use alist. arg=alist(=) result function like function(){...}. See examples details.","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/new_function2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create new function that supports 'quasi-quosure' syntax — new_function2","text":"","code":"# ------------ standard usage ------------ x <- 1:10 f1 <- new_function2(alist(a=), { print(a + x) }, env = environment()) f1(0) #>  [1]  1  2  3  4  5  6  7  8  9 10  x <- 20:23 f1(0)  # result changed as x changed #> [1] 20 21 22 23  # ------------ 'quasi-quosure' syntax ------------ x <- 1:10 f2 <- new_function2(alist(a=), { print(a + !!x) }) print(f2) #> function (a)  #> { #>     print(a + 1:10) #> } #> <environment: 0x55a745859f20>  f2(0) #>  [1]  1  2  3  4  5  6  7  8  9 10  x <- 20:23 f2(0)  # result doesn't change as f2 doesn't depend on x anymore #>  [1]  1  2  3  4  5  6  7  8  9 10  # ------------ argument settings ------------  default <- 123  # default with values pre-specified new_function2(list(a = default))   # function (a = 123){} #> function (a = 123)  #> { #> } #> <environment: 0x55a7481309d0>  # default with values unevaluated new_function2(list(a = quote(default)))   # function (a = default){} #> function (a = default)  #> { #> } #> <environment: 0x55a743f98978> new_function2(alist(a = default)) #> function (a = default)  #> { #> } #> <environment: 0x55a742c60670>  # missing default new_function2(alist(a = ))    # function (a){} #> function (a)  #> { #> } #> <environment: 0x55a7450a21c0>"},{"path":"https://dipterix.org/dipsaus/reference/no_op.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe-friendly no-operation function — no_op","title":"Pipe-friendly no-operation function — no_op","text":"returns first input side effects","code":""},{"path":"https://dipterix.org/dipsaus/reference/no_op.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe-friendly no-operation function — no_op","text":"","code":"no_op(.x, .expr, ..., .check_fun = TRUE)"},{"path":"https://dipterix.org/dipsaus/reference/no_op.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe-friendly no-operation function — no_op","text":".x R object .expr R expression produces side effects ..., .check_fun see `details`","code":""},{"path":"https://dipterix.org/dipsaus/reference/no_op.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe-friendly no-operation function — no_op","text":"value .x","code":""},{"path":"https://dipterix.org/dipsaus/reference/no_op.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pipe-friendly no-operation function — no_op","text":"no_op pipe-friendly function takes values , evaluate expressions still returns input. useful input across multiple functions want use pipes. .expr evaluated special object '.', can use '.' represent .x .expr. example, .x=1:100, plot(x=seq(0,1,length.= 100), y=.) equivalent plot(x=seq(0,1,length.= 100), y=1:100). .check_fun checks whether .expr returns function, yes, function called argument .x ...","code":""},{"path":"https://dipterix.org/dipsaus/reference/no_op.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pipe-friendly no-operation function — no_op","text":"","code":"## 1. Basic usage  # Will print('a') and return 'a' no_op('a', print) #> [1] \"a\"  # Will do nothing and return 'a' because .check_fun is false no_op('a', print, .check_fun = FALSE)  # Will print('a') and return 'a' no_op('a', print(.), .check_fun = FALSE) #> [1] \"a\"  ## 2. Toy example library(graphics)  par(mfrow = c(2,2)) x <- rnorm(100)  # hist and plot share the same input `rnorm(100)`  y <- x |>   # .expr is a function, all ... are passed as other arguments   no_op( hist, nclass = 10 ) |>   no_op( plot, x = seq(0,1,length.out = 100) ) |>    # Repeat the previous two plots, but with different syntax   no_op({ hist(., nclass = 10) }) |>   no_op({ plot(x = seq(0,1,length.out = 100), y = .) }) |>    # The return statement is ignored    no_op({ return(x + 1)})   # x is returned at the end  identical(x, y)   # TRUE #> [1] TRUE"},{"path":"https://dipterix.org/dipsaus/reference/package_installed.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a package is installed — package_installed","title":"Check if a package is installed — package_installed","text":"Check package installed","code":""},{"path":"https://dipterix.org/dipsaus/reference/package_installed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a package is installed — package_installed","text":"","code":"package_installed(pkgs, all = FALSE)"},{"path":"https://dipterix.org/dipsaus/reference/package_installed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a package is installed — package_installed","text":"pkgs vector package names returns TRUE packages installed. Default FALSE.","code":""},{"path":"https://dipterix.org/dipsaus/reference/package_installed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a package is installed — package_installed","text":"logical, packages installed . =TRUE, return logical value whether packages re installed.","code":""},{"path":"https://dipterix.org/dipsaus/reference/package_installed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a package is installed — package_installed","text":"","code":"# Check if package base and dipsaus are installed package_installed(c('base', 'dipsaus')) #>    base dipsaus  #>    TRUE    TRUE   # Check if all required packages are installed package_installed(c('base', 'dipsaus'), all = TRUE) #> [1] TRUE"},{"path":"https://dipterix.org/dipsaus/reference/parse_svec.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse Text Into Numeric Vectors — parse_svec","title":"Parse Text Into Numeric Vectors — parse_svec","text":"Parse Text Numeric Vectors","code":""},{"path":"https://dipterix.org/dipsaus/reference/parse_svec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse Text Into Numeric Vectors — parse_svec","text":"","code":"parse_svec(text, sep = \",\", connect = \"-:|\", sort = FALSE, unique = TRUE)"},{"path":"https://dipterix.org/dipsaus/reference/parse_svec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse Text Into Numeric Vectors — parse_svec","text":"text string chunks, e.g. \"1-10, 14, 16-20, 18-30\" 4 chunks sep default \",\", character used separate chunks connect characters defining connection links example \"1:10\" \"1-10\" sort sort result unique extract unique elements","code":""},{"path":"https://dipterix.org/dipsaus/reference/parse_svec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse Text Into Numeric Vectors — parse_svec","text":"numeric vector. example, \"1-3\" returns c(1, 2, 3)","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/parse_svec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse Text Into Numeric Vectors — parse_svec","text":"","code":"parse_svec('1-10, 13:15,14-20') #>  [1]  1  2  3  4  5  6  7  8  9 10 13 14 15 16 17 18 19 20"},{"path":"https://dipterix.org/dipsaus/reference/print_directory_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Directory Tree — print_directory_tree","title":"Print Directory Tree — print_directory_tree","text":"Print Directory Tree","code":""},{"path":"https://dipterix.org/dipsaus/reference/print_directory_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Directory Tree — print_directory_tree","text":"","code":"print_directory_tree(   target,   root = \"~\",   child,   dir_only = FALSE,   collapse = NULL,   ... )"},{"path":"https://dipterix.org/dipsaus/reference/print_directory_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Directory Tree — print_directory_tree","text":"target target directory path, relative root root root directory, default '~' child child files target; missing, list files dir_only whether display directory children collapse whether concatenate results one single string ... pass list.files list files","code":""},{"path":"https://dipterix.org/dipsaus/reference/print_directory_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Directory Tree — print_directory_tree","text":"Characters, print-friendly directory tree.","code":""},{"path":"https://dipterix.org/dipsaus/reference/progress2.html","id":null,"dir":"Reference","previous_headings":"","what":"'Shiny' progress bar, but can run without reactive context — progress2","title":"'Shiny' progress bar, but can run without reactive context — progress2","text":"'Shiny' progress bar, can run without reactive context","code":""},{"path":"https://dipterix.org/dipsaus/reference/progress2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'Shiny' progress bar, but can run without reactive context — progress2","text":"","code":"progress2(   title,   max = 1,   ...,   quiet = FALSE,   session = shiny::getDefaultReactiveDomain(),   shiny_auto_close = FALSE,   log = NULL )"},{"path":"https://dipterix.org/dipsaus/reference/progress2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'Shiny' progress bar, but can run without reactive context — progress2","text":"title character, task description max maximum number items queue ... passed shiny::Progress$new(...) quiet suppress console output, ignored shiny context. session 'shiny' session, default current reactive domain shiny_auto_close logical, automatically close 'shiny' progress bar current observer . Default FALSE. setting TRUE, equivalent p <- progress2(...); .exit({p$close()}, add = TRUE). log function running locally, default NULL, redirects cat2","code":""},{"path":"https://dipterix.org/dipsaus/reference/progress2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'Shiny' progress bar, but can run without reactive context — progress2","text":"list functions: inc(detail, message = NULL, amount = 1, ...) Increase progress bar amount (default 1). close() Close progress reset(detail = '', message = '', value = 0) Reset progress value (default 0), reset information get_value() Get current progress value is_closed() Returns logical value progress closed .","code":""},{"path":"https://dipterix.org/dipsaus/reference/progress2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'Shiny' progress bar, but can run without reactive context — progress2","text":"","code":"progress <- progress2('Task A', max = 2) #> [Task A]: initializing...  progress$inc('Detail 1') #> [Task A]: Detail 1 (1 out of 2)  progress$inc('Detail 2') #> [Task A]: Detail 2 (2 out of 2)  progress$close() #> Finished   # Check if progress is closed progress$is_closed() #> [1] TRUE  # ------------------------------ Shiny Example ------------------------------ library(shiny) library(dipsaus)  ui <- fluidPage(   actionButtonStyled('do', 'Click Here', type = 'primary') )  server <- function(input, output, session) {   observeEvent(input$do, {     updateActionButtonStyled(session, 'do', disabled = TRUE)     progress <- progress2('Task A', max = 10, shiny_auto_close = TRUE)     lapply(1:10, function(ii){       progress$inc(sprintf('Detail %d', ii))       Sys.sleep(0.2)     })     updateActionButtonStyled(session, 'do', disabled = FALSE)   }) }  if(interactive()){   shinyApp(ui, server) }"},{"path":"https://dipterix.org/dipsaus/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. cli ansi_strip, tree digest digest jsonlite fromJSON, read_json, serializeJSON, toJSON, unserializeJSON, write_json parallel detectCores rlang abort, cnd_entrace, entrace, error_cnd, trace_back","code":""},{"path":"https://dipterix.org/dipsaus/reference/registerInputBinding.html","id":null,"dir":"Reference","previous_headings":"","what":"Register customized input to enable support by compound input — registerInputBinding","title":"Register customized input to enable support by compound input — registerInputBinding","text":"Register customized input enable support compound input","code":""},{"path":"https://dipterix.org/dipsaus/reference/registerInputBinding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Register customized input to enable support by compound input — registerInputBinding","text":"","code":"registerInputBinding(   fname,   pkg,   shiny_binding,   update_function = NULL,   quiet = FALSE )"},{"path":"https://dipterix.org/dipsaus/reference/registerInputBinding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Register customized input to enable support by compound input — registerInputBinding","text":"fname character, function name, \"textInput\" pkg character, package name, like \"shiny\" shiny_binding character, 'JavaScript' binding name.See examples update_function character, update function \"shiny::textInput\" quiet logical, whether suppress warnings","code":""},{"path":"https://dipterix.org/dipsaus/reference/registerInputBinding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Register customized input to enable support by compound input — registerInputBinding","text":"list binding functions, one `JavaScript` object key Shiny.inputBindings, `shiny` update function R end.","code":""},{"path":"https://dipterix.org/dipsaus/reference/registerInputBinding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Register customized input to enable support by compound input — registerInputBinding","text":"","code":"# register shiny textInput registerInputBinding('textInput', 'shiny',                      'shiny.textInput', 'shiny::updateTextInput')  # Register shiny actionLink # In \"Shiny.inputbindings\", the binding name is \"shiny.actionButtonInput\", # Shiny update function is \"shiny::updateActionButton\" registerInputBinding('actionLink', 'shiny',                      'shiny.actionButtonInput', 'shiny::updateActionButton')"},{"path":"https://dipterix.org/dipsaus/reference/restart_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Restart R Session — restart_session","title":"Restart R Session — restart_session","text":"Utilize 'RStudio' functions restart, running without 'RStudio', use package startup (included library) instead.","code":""},{"path":"https://dipterix.org/dipsaus/reference/restart_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restart R Session — restart_session","text":"","code":"restart_session()"},{"path":"https://dipterix.org/dipsaus/reference/rs_active_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Get 'RStudio' active project — rs_active_project","title":"Get 'RStudio' active project — rs_active_project","text":"Get 'RStudio' active project","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_active_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get 'RStudio' active project — rs_active_project","text":"","code":"rs_active_project(...)"},{"path":"https://dipterix.org/dipsaus/reference/rs_active_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get 'RStudio' active project — rs_active_project","text":"... passed rs_avail","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_active_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get 'RStudio' active project — rs_active_project","text":"'RStudio' running current project none, return project name, otherwise return NA","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_avail.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify 'RStudio' version — rs_avail","title":"Verify 'RStudio' version — rs_avail","text":"Verify 'RStudio' version","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_avail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify 'RStudio' version — rs_avail","text":"","code":"rs_avail(version_needed = \"1.3\", child_ok = FALSE, shiny_ok = FALSE)"},{"path":"https://dipterix.org/dipsaus/reference/rs_avail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify 'RStudio' version — rs_avail","text":"version_needed minimum version required child_ok check current R process child process main RStudio session. shiny_ok set false, check 'Shiny' running, return false shiny reactive domain NULL","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_avail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify 'RStudio' version — rs_avail","text":"whether 'RStudio' running version required","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/rs_edit_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Use 'RStudio' to open and edit files — rs_edit_file","title":"Use 'RStudio' to open and edit files — rs_edit_file","text":"Use 'RStudio' open edit files","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_edit_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use 'RStudio' to open and edit files — rs_edit_file","text":"","code":"rs_edit_file(path, create = TRUE)"},{"path":"https://dipterix.org/dipsaus/reference/rs_edit_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use 'RStudio' to open and edit files — rs_edit_file","text":"path path file create whether create path found; default true","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_edit_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use 'RStudio' to open and edit files — rs_edit_file","text":"Opens file pointing path edit, returns path","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_exec.html","id":null,"dir":"Reference","previous_headings":"","what":"Schedule a Background Job — rs_exec","title":"Schedule a Background Job — rs_exec","text":"Utilizes 'RStudio' job scheduler correct environment detected, otherwise call system command via Rscript","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_exec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Schedule a Background Job — rs_exec","text":"","code":"rs_exec(   expr,   name = \"Untitled\",   quoted = FALSE,   rs = TRUE,   as_promise = FALSE,   wait = FALSE,   packages = NULL,   focus_on_console = FALSE,   ...,   nested_ok = FALSE )"},{"path":"https://dipterix.org/dipsaus/reference/rs_exec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Schedule a Background Job — rs_exec","text":"expr R expression name used 'RStudio' name job quoted expr quoted rs whether use 'RStudio' default as_promise whether return promise object; default wait whether wait result. packages packages load sub-sessions focus_on_console whether return back console creating jobs; useful users want focus writing code; default false. feature works 'RStudio' (>=1.4) ... internally used nested_ok whether nested rs_exec allowed; default false; Set true allow nested parallel code, use risk.","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_exec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Schedule a Background Job — rs_exec","text":"wait=TRUE, returns evaluation results expr, otherwise function can track state job.","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_exec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Schedule a Background Job — rs_exec","text":"'RStudio' provides interfaces jobRunScript schedule background jobs. However, functionality applies using 'RStudio' IDE. launching R places terminals, job scheduler usually result errors. case, alternative call system command via Rscript expression expr run clean environment. Therefore R objects created outside context inaccessible within child environment, packages except base packages loaded. small difference running within without 'RStudio'. running via Rscript, environment run vanilla argument, means load, start-code. start-code stored ~/.Rprofile, start-code ignored. running within 'RStudio', start-code executed. rstudioapi version 0.11, 'vanilla' option. feature subject change future.","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_exec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Schedule a Background Job — rs_exec","text":"","code":"if(interactive()){   h <- rs_exec(     {       Sys.sleep(2)       print(Sys.getpid())     },     wait = FALSE, name = 'Test',     focus_on_console = TRUE   )   code <- h()   print(code)    # wait 3 seconds   Sys.sleep(3)   code <- h()   attributes(code) }"},{"path":"https://dipterix.org/dipsaus/reference/rs_focus_console.html","id":null,"dir":"Reference","previous_headings":"","what":"Focus on 'RStudio' Console — rs_focus_console","title":"Focus on 'RStudio' Console — rs_focus_console","text":"Focus coding; works 'RStudio' (>=1.4)","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_focus_console.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Focus on 'RStudio' Console — rs_focus_console","text":"","code":"rs_focus_console(wait = 0.5)"},{"path":"https://dipterix.org/dipsaus/reference/rs_focus_console.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Focus on 'RStudio' Console — rs_focus_console","text":"wait wait seconds sending command; soon, 'RStudio' might able react.","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_focus_console.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Focus on 'RStudio' Console — rs_focus_console","text":"None","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_save_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Save all documents in 'RStudio' — rs_save_all","title":"Save all documents in 'RStudio' — rs_save_all","text":"Perform \"safe\" save-action backward compatibility: check whether 'RStudio' running whether rstudioapi function documentSaveAll.","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_save_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save all documents in 'RStudio' — rs_save_all","text":"","code":"rs_save_all()"},{"path":"https://dipterix.org/dipsaus/reference/rs_select_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Use 'RStudio' to Select a Path on the Server — rs_select_path","title":"Use 'RStudio' to Select a Path on the Server — rs_select_path","text":"Use 'RStudio' Select Path Server","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_select_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use 'RStudio' to Select a Path on the Server — rs_select_path","text":"","code":"rs_select_path(is_directory = TRUE)"},{"path":"https://dipterix.org/dipsaus/reference/rs_select_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use 'RStudio' to Select a Path on the Server — rs_select_path","text":"is_directory whether path directory","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_select_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use 'RStudio' to Select a Path on the Server — rs_select_path","text":"Raise error rs_avail fails, otherwise returns selected path","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_set_repos.html","id":null,"dir":"Reference","previous_headings":"","what":"Add secondary 'CRAN'-like repository to the 'RStudio' settings — rs_set_repos","title":"Add secondary 'CRAN'-like repository to the 'RStudio' settings — rs_set_repos","text":"Add self-hosted repository, 'drat', 'r-universe' 'RStudio' preference. Please restart 'RStudio' take changes effect.","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_set_repos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add secondary 'CRAN'-like repository to the 'RStudio' settings — rs_set_repos","text":"","code":"rs_set_repos(name, url, add = TRUE)"},{"path":"https://dipterix.org/dipsaus/reference/rs_set_repos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add secondary 'CRAN'-like repository to the 'RStudio' settings — rs_set_repos","text":"name repository name, must unique readable url website address repository, starting schemes 'https'. add whether add existing repository; default true","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_set_repos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add secondary 'CRAN'-like repository to the 'RStudio' settings — rs_set_repos","text":"list settings.","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_set_repos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add secondary 'CRAN'-like repository to the 'RStudio' settings — rs_set_repos","text":"'RStudio' allows add secondary 'CRAN'-like repository preference, users can add -going self-hosted developing repositories (package 'drat', 'r-universe'). repositories set automatically running install.packages.","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_viewer.html","id":null,"dir":"Reference","previous_headings":"","what":"Get 'RStudio' Viewer, or Return Default — rs_viewer","title":"Get 'RStudio' Viewer, or Return Default — rs_viewer","text":"Get 'RStudio' Viewer, Return Default","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_viewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get 'RStudio' Viewer, or Return Default — rs_viewer","text":"","code":"rs_viewer(   ...,   default = TRUE,   version_needed = \"1.3\",   child_ok = FALSE,   shiny_ok = FALSE )"},{"path":"https://dipterix.org/dipsaus/reference/rs_viewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get 'RStudio' Viewer, or Return Default — rs_viewer","text":"... passed viewer default rs_avail fails, value return. Default TRUE version_needed, child_ok, shiny_ok passed rs_avail","code":""},{"path":"https://dipterix.org/dipsaus/reference/rs_viewer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get 'RStudio' Viewer, or Return Default — rs_viewer","text":"viewer can called 'RStudio' running, launch 'RStudio' internal viewer. Otherwise default function browseURL, call function given arguments. default function, return default","code":""},{"path":"https://dipterix.org/dipsaus/reference/screenshot.html","id":null,"dir":"Reference","previous_headings":"","what":"Take a screenshot in shiny apps — screenshot","title":"Take a screenshot in shiny apps — screenshot","text":"Take screenshot whole page save encoded DataURI can accessed via input[[inputId]].","code":""},{"path":"https://dipterix.org/dipsaus/reference/screenshot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take a screenshot in shiny apps — screenshot","text":"","code":"screenshot(inputId, session = shiny::getDefaultReactiveDomain())"},{"path":"https://dipterix.org/dipsaus/reference/screenshot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take a screenshot in shiny apps — screenshot","text":"inputId input id screenshot session shiny session","code":""},{"path":"https://dipterix.org/dipsaus/reference/screenshot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take a screenshot in shiny apps — screenshot","text":"None. However, screenshot results can accessed shiny input","code":""},{"path":"https://dipterix.org/dipsaus/reference/screenshot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Take a screenshot in shiny apps — screenshot","text":"","code":"library(shiny) library(dipsaus) ui <- fluidPage(   tagList(     shiny::singleton(shiny::tags$head(       shiny::tags$link(rel=\"stylesheet\", type=\"text/css\", href=\"dipsaus/dipsaus.css\"),       shiny::tags$script(src=\"dipsaus/dipsaus-dipterix-lib.js\")     ))   ),   actionButtonStyled('do', 'Take Screenshot'),   compoundInput2('group', label = 'Group', components = list(     textInput('txt', 'Enter something here')   )) )  server <- function(input, output, session) {   observeEvent(input$do, {     screenshot('screeshot_result')   })   observeEvent(input$screeshot_result, {     showModal(modalDialog(       tags$img(src = input$screeshot_result, width = '100%')     ))   }) }  if(interactive()){   shinyApp(ui, server) }"},{"path":"https://dipterix.org/dipsaus/reference/session_uuid.html","id":null,"dir":"Reference","previous_headings":"","what":"Provides Unique Session ID According to Current R Session — session_uuid","title":"Provides Unique Session ID According to Current R Session — session_uuid","text":"Provides Unique Session ID According Current R Session","code":""},{"path":"https://dipterix.org/dipsaus/reference/session_uuid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provides Unique Session ID According to Current R Session — session_uuid","text":"","code":"session_uuid(pid = Sys.getpid(), attributes = FALSE)"},{"path":"https://dipterix.org/dipsaus/reference/session_uuid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provides Unique Session ID According to Current R Session — session_uuid","text":"pid R session process ID, default Sys.getpid() attributes whether append data used calculate ID attributes, default false","code":""},{"path":"https://dipterix.org/dipsaus/reference/session_uuid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provides Unique Session ID According to Current R Session — session_uuid","text":"Character string","code":""},{"path":"https://dipterix.org/dipsaus/reference/set_shiny_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Shiny Input — set_shiny_input","title":"Set Shiny Input — set_shiny_input","text":"Shiny `input' object read-reactive list. try assign values input, errors usually occur. method provides several work-around set values input. Please use along use_shiny_dipsaus.","code":""},{"path":"https://dipterix.org/dipsaus/reference/set_shiny_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Shiny Input — set_shiny_input","text":"","code":"set_shiny_input(   session = shiny::getDefaultReactiveDomain(),   inputId,   value,   priority = c(\"event\", \"deferred\", \"immediate\"),   method = c(\"proxy\", \"serialize\", \"value\", \"expression\"),   quoted = TRUE )"},{"path":"https://dipterix.org/dipsaus/reference/set_shiny_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Shiny Input — set_shiny_input","text":"session shiny session, see shiny domains inputId character, input ID value value assign priority characters, options \"event\", \"deferred\", \"immediate\". \"event\" \"immediate\" similar, always fire changes. \"deferred\" fire signals reactive/observers input value changed method characters, options \"proxy\", \"serialize\", \"value\", \"expression\". \"proxy\" recommended, methods experimental. quoted value quoted? used method \"expression\"","code":""},{"path":"https://dipterix.org/dipsaus/reference/set_shiny_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Shiny Input — set_shiny_input","text":"","code":"library(shiny) library(dipsaus) ui <- fluidPage(   # Register widgets   use_shiny_dipsaus(),   actionButton('run', 'Set Input'),   verbatimTextOutput('input_value') )  server <- function(input, output, session) {   start = Sys.time()    output$input_value <- renderPrint({      now <- input$key     now %?<-% start     cat('This app has been opened for ',         difftime(now, start, units = 'sec'), ' seconds')   })    observeEvent(input$run, {     # setting input$key to Sys.time()     set_shiny_input(session, 'key', Sys.time())   }) }  if(interactive()){   shinyApp(ui, server) }"},{"path":"https://dipterix.org/dipsaus/reference/sexp_type2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Internal Storage Type — sexp_type2","title":"Get Internal Storage Type — sexp_type2","text":"Get internal (C) data types; See https://cran.r-project.org/doc/manuals/r-release/R-ints.pdf Page 1 different SEXPTYPEs.","code":""},{"path":"https://dipterix.org/dipsaus/reference/sexp_type2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Internal Storage Type — sexp_type2","text":"","code":"sexp_type2(x)  # S3 method for class 'sexp_type2' as.character(x, ...)  # S3 method for class 'sexp_type2' print(x, ...)"},{"path":"https://dipterix.org/dipsaus/reference/sexp_type2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Internal Storage Type — sexp_type2","text":"x R object ... ignored","code":""},{"path":"https://dipterix.org/dipsaus/reference/sexp_type2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Internal Storage Type — sexp_type2","text":"integer class \"sexp_type2\"","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/sexp_type2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Internal Storage Type — sexp_type2","text":"","code":"# 1 vs 1L  # Integer case sexp_type2(1L) #> 13 INTSXP     integer vectors   # double sexp_type2(1) #> 14 REALSXP    numeric vectors   # Built-in function sexp_type2(`+`) #> 8 BUILTINSXP  builtin functions   # normal functions sexp_type2(sexp_type2) #> 3 CLOSXP      closures   # symbols (quoted names) sexp_type2(quote(`+`)) #> 1 SYMSXP      symbols   # Calls (quoted expressions) sexp_type2(quote({`+`})) #> 6 LANGSXP     language objects"},{"path":"https://dipterix.org/dipsaus/reference/shared_finalizer.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Shared Finalization to Avoid Over Garbage Collection — shared_finalizer","title":"Create Shared Finalization to Avoid Over Garbage Collection — shared_finalizer","text":"Generates function passed reg.finalizer","code":""},{"path":"https://dipterix.org/dipsaus/reference/shared_finalizer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Shared Finalization to Avoid Over Garbage Collection — shared_finalizer","text":"","code":"shared_finalizer(x, key, fin, onexit = FALSE, ...)  # Default S3 method shared_finalizer(x, key, fin, onexit = FALSE, ...)  # S3 method for class 'R6' shared_finalizer(x, key, fin, onexit = TRUE, ...)  # S3 method for class 'fastmap' shared_finalizer(x, key, fin, onexit = FALSE, ...)  # S3 method for class 'fastmap2' shared_finalizer(x, key, fin, onexit = FALSE, ...)"},{"path":"https://dipterix.org/dipsaus/reference/shared_finalizer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Shared Finalization to Avoid Over Garbage Collection — shared_finalizer","text":"x object finalize key characters identical finalization method shared fin Shared finalization: function call finalization; see reg.finalizer. See details. onexit logical: finalization run object still uncollected end R session? See reg.finalizer ... passed methods","code":""},{"path":"https://dipterix.org/dipsaus/reference/shared_finalizer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Shared Finalization to Avoid Over Garbage Collection — shared_finalizer","text":"main purpose function allow multiple objects point source (say temporary file) perform clean objects garbage collected. Base function reg.finalizer provides finalization garbage collect single R environment. However, multiple environments share file, finalizing one single environment result removing file environment lose reference. (See example \"Native reg.finalizer fails example\") argument fin varies according different types x. environments, fin contains contains one parameter, environment . reg.finalizer. R6 classes, fin ignored class \"shared_finalize\" method defined. fastmap fastmap2 instances, fin accepts argument.","code":""},{"path":"https://dipterix.org/dipsaus/reference/shared_finalizer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Shared Finalization to Avoid Over Garbage Collection — shared_finalizer","text":"","code":"# ------------ Environment example ------------ file_exists <- TRUE clear_files <- function(e){   print('Clean some shared files')   # do something to remove files   file_exists <<- FALSE }  # e1, e2 both require file existence e1 <- new.env() e1$valid <- function(){ file_exists } e2 <- new.env() e2$valid <- function(){ file_exists }  e1$valid(); e2$valid() #> [1] TRUE #> [1] TRUE  # we don't want to remove files when either e1,e2 gets # garbage collected, however, we want to run `clear_files` # when system garbage collecting *both* e1 and e2  # Make sure `key`s are identical shared_finalizer(e1, 'cleanXXXfiles', clear_files) shared_finalizer(e2, 'cleanXXXfiles', clear_files)  # Now remove e1, files are not cleaned, and e2 is still valid rm(e1); invisible(gc(verbose = FALSE)) e2$valid()  # TRUE #> [1] TRUE file_exists # TRUE #> [1] TRUE  # remove both e1 and e2, and file gets removed rm(e2); invisible(gc(verbose = FALSE)) #> [1] \"Clean some shared files\" file_exists  # FALSE #> [1] FALSE  # ------------ R6 example ------------  cls <- R6::R6Class(   classname = '...demo...',   cloneable = TRUE,   private = list(     finalize = function(){       cat('Finalize private resource\\n')     }   ),   public = list(     file_path = character(0),     shared_finalize = function(){       cat('Finalize shared resource - ', self$file_path, '\\n')     },     initialize = function(file_path){       self$file_path = file_path       shared_finalizer(self, key = self$file_path)     }   ) ) e1 <- cls$new('file1') rm(e1); invisible(gc(verbose = FALSE)) #> Finalize private resource #> Finalize shared resource -  file1   e1 <- cls$new('file2')  # A copy of e1 e2 <- e1$clone() # unfortunately, we have to manually register shared_finalizer(e2, key = e2$file_path)  # Remove e1, gc only free private resource rm(e1); invisible(gc(verbose = FALSE)) #> Finalize private resource  # remove e1 and e2, run shared finalize rm(e2); invisible(gc(verbose = FALSE)) #> Finalize shared resource -  file2  #> Finalize private resource  # ------------ fastmap/fastmap2 example -----------  # No formals needed for fastmap/fastmap2 fin <- function(){   cat('Finalizer is called\\n') } # single reference case e1 <- dipsaus::fastmap2() shared_finalizer(e1, 'fin-fastmap2', fin = fin) invisible(gc(verbose = FALSE)) # Not triggered rm(e1); invisible(gc(verbose = FALSE)) # triggered #> Finalizer is called  # multiple reference case e1 <- dipsaus::fastmap2() e2 <- dipsaus::fastmap2() shared_finalizer(e1, 'fin-fastmap2', fin = fin) shared_finalizer(e2, 'fin-fastmap2', fin = fin)  rm(e1); invisible(gc(verbose = FALSE)) # Not triggered rm(e2); invisible(gc(verbose = FALSE)) # triggered #> Finalizer is called  # ------------ Native reg.finalizer fails example ------------  # This example shows a failure case using base::reg.finalizer  file_exists <- TRUE clear_files <- function(e){   print('Clean some shared files')   # do something to remove files   file_exists <<- FALSE }  # e1, e2 both require file existence e1 <- new.env() e1$valid <- function(){ file_exists } e2 <- new.env() e2$valid <- function(){ file_exists }  reg.finalizer(e1, clear_files) #> NULL reg.finalizer(e2, clear_files) #> NULL gc() #>           used (Mb) gc trigger  (Mb) max used  (Mb) #> Ncells 1367125 73.1    2281952 121.9  2281952 121.9 #> Vcells 2529360 19.3   12275114  93.7 23974731 183.0 file_exists #> [1] TRUE  # removing e1 will invalidate e2 rm(e1); gc() #> [1] \"Clean some shared files\" #>           used (Mb) gc trigger  (Mb) max used  (Mb) #> Ncells 1367143 73.1    2281952 121.9  2281952 121.9 #> Vcells 2529426 19.3   12275114  93.7 23974731 183.0 e2$valid()    # FALSE #> [1] FALSE  # Clean-ups rm(e2); gc() #> [1] \"Clean some shared files\" #>           used (Mb) gc trigger  (Mb) max used  (Mb) #> Ncells 1367157 73.1    2281952 121.9  2281952 121.9 #> Vcells 2529430 19.3   12275114  93.7 23974731 183.0"},{"path":"https://dipterix.org/dipsaus/reference/shift_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Shift Array by Index — shift_array","title":"Shift Array by Index — shift_array","text":"Re-arrange arrays parallel","code":""},{"path":"https://dipterix.org/dipsaus/reference/shift_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shift Array by Index — shift_array","text":"","code":"shift_array(x, shift_idx, shift_by, shift_amount)"},{"path":"https://dipterix.org/dipsaus/reference/shift_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shift Array by Index — shift_array","text":"x array, must least matrix shift_idx index shifted shift_by dimension decides shift_amount shift_amount shift amount along shift_idx","code":""},{"path":"https://dipterix.org/dipsaus/reference/shift_array.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shift Array by Index — shift_array","text":"simple use-case function think matrix row signal columns stand time. objective align (time-lock) signal according certain events. signal, want shift time points certain amount. case, shift amount defined shift_amount, whose length equals number signals. shift_idx=2 want shift time points (column, second dimension) signal. shift_by=1 shift amount depend signal number.","code":""},{"path":"https://dipterix.org/dipsaus/reference/shift_array.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shift Array by Index — shift_array","text":"","code":"x <- matrix(1:10, nrow = 2, byrow = TRUE) z <- shift_array(x, 2, 1, c(1,2))  y <- NA * x y[1,1:4] = x[1,2:5] y[2,1:3] = x[2,3:5]  # Check if z ang y are the same z - y #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    0    0    0    0   NA #> [2,]    0    0    0   NA   NA  # array case # x is Trial x Frequency x Time x <- array(1:27, c(3,3,3))  # Shift time for each trial, amount is 1, -1, 0 shift_amount <- c(1,-1,0) z <- shift_array(x, 3, 1, shift_amount)  if(interactive()){  par(mfrow = c(3, 2)) for( ii in 1:3 ){   image(t(x[ii, ,]), ylab = 'Frequency', xlab = 'Time',         main = paste('Trial', ii))   image(t(z[ii, ,]), ylab = 'Frequency', xlab = 'Time',         main = paste('Shifted amount:', shift_amount[ii])) }  }"},{"path":"https://dipterix.org/dipsaus/reference/shiny_alert2.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple shiny alert that uses 'JavaScript' promises — shiny_alert2","title":"Simple shiny alert that uses 'JavaScript' promises — shiny_alert2","text":"Simple shiny alert uses 'JavaScript' promises","code":""},{"path":"https://dipterix.org/dipsaus/reference/shiny_alert2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple shiny alert that uses 'JavaScript' promises — shiny_alert2","text":"","code":"shiny_alert2(   title = \"Alert\",   text = \"\",   icon = c(\"info\", \"warning\", \"success\", \"error\"),   danger_mode = FALSE,   auto_close = TRUE,   buttons = NULL,   on_close = NULL,   session = shiny::getDefaultReactiveDomain() )  close_alert2(session = shiny::getDefaultReactiveDomain())"},{"path":"https://dipterix.org/dipsaus/reference/shiny_alert2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple shiny alert that uses 'JavaScript' promises — shiny_alert2","text":"title title alert text alert body text (pure text) icon icon display, choices 'info', 'success' 'warning', 'error' danger_mode true false; true, confirm button turns red default focus set cancel button instead. enable danger mode, buttons must TRUE well auto_close whether close automatically clicking outside alert buttons logical value named list, characters. logical, indicates whether buttons displayed ; named list, names button text, see example; characters, characters button text value on_close NULL function takes one argument. function passed , executed users close alert session shiny session, see domains","code":""},{"path":"https://dipterix.org/dipsaus/reference/shiny_alert2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple shiny alert that uses 'JavaScript' promises — shiny_alert2","text":"temporary input ID, currently useful","code":""},{"path":"https://dipterix.org/dipsaus/reference/shiny_alert2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple shiny alert that uses 'JavaScript' promises — shiny_alert2","text":"","code":"library(shiny) library(dipsaus) ui <- fluidPage(   use_shiny_dipsaus(),   actionButtonStyled('btn', 'btn') )  server <- function(input, output, session) {   observeEvent(input$btn, {     shiny_alert2(       on_close = function(value) {         cat(\"Modal closed!\\n\")         print(value)       },       title = \"Title\",       text = \"message\",       icon = \"success\",       auto_close = FALSE,       buttons = list(\"cancel\" = TRUE,                      \"YES!\" = list(value = 1))     )   }) }  if(interactive()){   shinyApp(ui, server, options = list(launch.browser = TRUE)) }"},{"path":"https://dipterix.org/dipsaus/reference/shiny_is_running.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect whether 'Shiny' is running — shiny_is_running","title":"Detect whether 'Shiny' is running — shiny_is_running","text":"Detect whether 'Shiny' running","code":""},{"path":"https://dipterix.org/dipsaus/reference/shiny_is_running.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect whether 'Shiny' is running — shiny_is_running","text":"","code":"shiny_is_running()"},{"path":"https://dipterix.org/dipsaus/reference/shiny_is_running.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect whether 'Shiny' is running — shiny_is_running","text":"logical, true current shiny context active","code":""},{"path":"https://dipterix.org/dipsaus/reference/ste_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard error of mean — ste_mean","title":"Standard error of mean — ste_mean","text":"Ported 'rutabaga' package, calculates standard error mean. sample size determined number none-NA numbers default","code":""},{"path":"https://dipterix.org/dipsaus/reference/ste_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard error of mean — ste_mean","text":"","code":"ste_mean(x, na.rm = FALSE, na_as_zero = na.rm, ...)  # Default S3 method ste_mean(x, na.rm = FALSE, na_as_zero = na.rm, ...)"},{"path":"https://dipterix.org/dipsaus/reference/ste_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard error of mean — ste_mean","text":"x R object na.rm whether remove NA; default false na_as_zero whether convert NA zero ... passed methods","code":""},{"path":"https://dipterix.org/dipsaus/reference/ste_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard error of mean — ste_mean","text":"numerical number standard error mean","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/ste_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard error of mean — ste_mean","text":"","code":"x <- rnorm(100)  ste_mean(x) #> [1] 0.1004954  # internal implementation identical(ste_mean(x), sd(x) / sqrt(100)) #> [1] TRUE"},{"path":"https://dipterix.org/dipsaus/reference/sumsquared.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast Calculation of Sum-squared for Large Matrices/Vectors — sumsquared","title":"Fast Calculation of Sum-squared for Large Matrices/Vectors — sumsquared","text":"Calculate sum(x^2), faster number elements exceeds 1000.","code":""},{"path":"https://dipterix.org/dipsaus/reference/sumsquared.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast Calculation of Sum-squared for Large Matrices/Vectors — sumsquared","text":"x double, integer, logical vector/matrix","code":""},{"path":"https://dipterix.org/dipsaus/reference/sumsquared.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast Calculation of Sum-squared for Large Matrices/Vectors — sumsquared","text":"numerical scalar","code":""},{"path":"https://dipterix.org/dipsaus/reference/sumsquared.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fast Calculation of Sum-squared for Large Matrices/Vectors — sumsquared","text":"","code":"x <- rnorm(10000) sumsquared(x) #> [1] 9876.546  # Compare speed microbenchmark::microbenchmark(   cpp = {sumsquared(x)},   r = {sum(x^2)} ) #> Unit: microseconds #>  expr    min     lq     mean median     uq    max neval #>   cpp 37.771 37.871 38.56781 38.056 38.296 48.440   100 #>     r 23.735 24.421 25.33542 24.751 25.613 35.977   100"},{"path":"https://dipterix.org/dipsaus/reference/sync_shiny_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Synchronize Shiny Inputs — sync_shiny_inputs","title":"Synchronize Shiny Inputs — sync_shiny_inputs","text":"Synchronize Shiny Inputs","code":""},{"path":"https://dipterix.org/dipsaus/reference/sync_shiny_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Synchronize Shiny Inputs — sync_shiny_inputs","text":"","code":"sync_shiny_inputs(   input,   session,   inputIds,   uniform = rep(\"I\", length(inputIds)),   updates,   snap = 250,   ignoreNULL = TRUE,   ignoreInit = FALSE )"},{"path":"https://dipterix.org/dipsaus/reference/sync_shiny_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Synchronize Shiny Inputs — sync_shiny_inputs","text":"input, session shiny reactive objects inputIds input ids synchronized uniform functions, equaling length inputIds, converting inputs uniform values updates functions, equaling length inputIds, updating input values snap numeric, milliseconds defer changes ignoreNULL, ignoreInit passed bindEvent","code":""},{"path":"https://dipterix.org/dipsaus/reference/sync_shiny_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Synchronize Shiny Inputs — sync_shiny_inputs","text":"none.","code":""},{"path":"https://dipterix.org/dipsaus/reference/sync_shiny_inputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Synchronize Shiny Inputs — sync_shiny_inputs","text":"","code":"library(shiny)  ui <- fluidPage(   textInput('a', 'a', value = 'a'),   sliderInput('b', 'b', value = 1, min = 0, max = 1000) )  server <- function(input, output, session) {   sync_shiny_inputs(input, session, inputIds = c('a', 'b'), uniform = list(     function(a){as.numeric(a)},     'I'   ), updates = list(     function(a){updateTextInput(session, 'a', value = a)},     function(b){updateSliderInput(session, 'b', value = b)}   ))  }  if( interactive() ){   shinyApp(ui, server) }"},{"path":"https://dipterix.org/dipsaus/reference/test_farg.html","id":null,"dir":"Reference","previous_headings":"","what":"Test whether function has certain arguments — test_farg","title":"Test whether function has certain arguments — test_farg","text":"Test whether function certain arguments","code":""},{"path":"https://dipterix.org/dipsaus/reference/test_farg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test whether function has certain arguments — test_farg","text":"","code":"test_farg(fun, arg, dots = TRUE)"},{"path":"https://dipterix.org/dipsaus/reference/test_farg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test whether function has certain arguments — test_farg","text":"fun function arg characters function arguments dots whether fun's dots (...) counts","code":""},{"path":"https://dipterix.org/dipsaus/reference/test_farg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test whether function has certain arguments — test_farg","text":"","code":"a <- function(n = 1){}  # Test whether `a` has argument called 'b' test_farg(a, 'b') #> [1] FALSE  # Test whether `a` has argument called 'b' and 'n' test_farg(a, c('b', 'n')) #> [1] FALSE  TRUE  # `a` now has dots a <- function(n = 1, ...){}  # 'b' could goes to dots and a(b=...) is still valid test_farg(a, 'b') #> [1] TRUE  # strict match, dots doesn't count test_farg(a, 'b', dots = FALSE) #> [1] FALSE"},{"path":"https://dipterix.org/dipsaus/reference/time_delta.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate time difference and return a number — time_delta","title":"Calculate time difference and return a number — time_delta","text":"Calculate time difference return number","code":""},{"path":"https://dipterix.org/dipsaus/reference/time_delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate time difference and return a number — time_delta","text":"","code":"time_delta(t1, t2, units = \"secs\")"},{"path":"https://dipterix.org/dipsaus/reference/time_delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate time difference and return a number — time_delta","text":"t1 time start t2 time end units character, choices 'secs', 'mins', 'hours', 'days'","code":""},{"path":"https://dipterix.org/dipsaus/reference/time_delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate time difference and return a number — time_delta","text":"numeric difference time units specified","code":""},{"path":"https://dipterix.org/dipsaus/reference/time_delta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate time difference and return a number — time_delta","text":"","code":"a = Sys.time() Sys.sleep(0.3) b = Sys.time()  time_delta(a, b) # In seconds, around 0.3 #> [1] 0.3016112 time_delta(a, b, 'mins') # in minutes, around 0.005 #> [1] 0.005026853"},{"path":"https://dipterix.org/dipsaus/reference/to_datauri.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert file to 'base64' format — to_datauri","title":"Convert file to 'base64' format — to_datauri","text":"Convert file 'base64' format","code":""},{"path":"https://dipterix.org/dipsaus/reference/to_datauri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert file to 'base64' format — to_datauri","text":"","code":"to_datauri(file, mime = \"\")"},{"path":"https://dipterix.org/dipsaus/reference/to_datauri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert file to 'base64' format — to_datauri","text":"file file path mime 'mime' type, default blank","code":""},{"path":"https://dipterix.org/dipsaus/reference/to_datauri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert file to 'base64' format — to_datauri","text":"'base64' data string looks like 'data:;base64,AEF6986...'","code":""},{"path":"https://dipterix.org/dipsaus/reference/to_ram_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert bytes to KB, MB, GB,... — to_ram_size","title":"Convert bytes to KB, MB, GB,... — to_ram_size","text":"Convert bytes KB, MB, GB,...","code":""},{"path":"https://dipterix.org/dipsaus/reference/to_ram_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert bytes to KB, MB, GB,... — to_ram_size","text":"","code":"to_ram_size(s, kb_to_b = 1000)"},{"path":"https://dipterix.org/dipsaus/reference/to_ram_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert bytes to KB, MB, GB,... — to_ram_size","text":"s size kb_to_b many bytes counts one KB, 1000 default","code":""},{"path":"https://dipterix.org/dipsaus/reference/to_ram_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert bytes to KB, MB, GB,... — to_ram_size","text":"numeric equaling s formatted","code":""},{"path":"https://dipterix.org/dipsaus/reference/updateActionButtonStyled.html","id":null,"dir":"Reference","previous_headings":"","what":"Update styled action button — updateActionButtonStyled","title":"Update styled action button — updateActionButtonStyled","text":"Update styled action button","code":""},{"path":"https://dipterix.org/dipsaus/reference/updateActionButtonStyled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update styled action button — updateActionButtonStyled","text":"","code":"updateActionButtonStyled(   session,   inputId,   label = NULL,   icon = NULL,   type = NULL,   disabled = NULL,   ... )"},{"path":"https://dipterix.org/dipsaus/reference/updateActionButtonStyled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update styled action button — updateActionButtonStyled","text":"session, inputId, label, icon passed shiny::updateActionButton type button type update disabled whether disable button ... ignored","code":""},{"path":"https://dipterix.org/dipsaus/reference/updateActionButtonStyled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update styled action button — updateActionButtonStyled","text":"none","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/updateCompoundInput2.html","id":null,"dir":"Reference","previous_headings":"","what":"Update compound inputs — updateCompoundInput2","title":"Update compound inputs — updateCompoundInput2","text":"Update compound inputs","code":""},{"path":"https://dipterix.org/dipsaus/reference/updateCompoundInput2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update compound inputs — updateCompoundInput2","text":"","code":"updateCompoundInput2(   session,   inputId,   value = NULL,   ncomp = NULL,   initialization = NULL,   ... )"},{"path":"https://dipterix.org/dipsaus/reference/updateCompoundInput2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update compound inputs — updateCompoundInput2","text":"session shiny session session proxy inputId character see compoundInput2 value list lists, see compoundInput2 examples ncomp integer, non-negative number groups update, NULL remain unchanged initialization, ... named list updates","code":""},{"path":"https://dipterix.org/dipsaus/reference/updateCompoundInput2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update compound inputs — updateCompoundInput2","text":"none","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/updateCompoundInput2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update compound inputs — updateCompoundInput2","text":"","code":"if (FALSE) { # \\dontrun{ library(shiny); library(dipsaus)  ## UI side compoundInput2(   'input_id', 'Group',     div(     textInput('text', 'Text Label'),     sliderInput('sli', 'Slider Selector', value = 0, min = 1, max = 1)   ),   label_color = 1:10,   value = list(     list(text = '1'),  # Set text first group to be \"1\"     '',                # no settings for second group     list(sli = 0.2)    # sli = 0.2 for the third group   ))  ## server side: updateCompoundInput2(session, 'inputid',                      # Change the first 3 groups                      value = lapply(1:3, function(ii){                        list(sli = runif(1))                      }),                      # Change text label for all groups                      initialization = list(                        text = list(label = as.character(Sys.time()))                      )) } # }"},{"path":"https://dipterix.org/dipsaus/reference/update_fastmap2.html","id":null,"dir":"Reference","previous_headings":"","what":"Migrate a fastmap2 object to a new one — update_fastmap2","title":"Migrate a fastmap2 object to a new one — update_fastmap2","text":"Migrate fastmap2 object new one","code":""},{"path":"https://dipterix.org/dipsaus/reference/update_fastmap2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Migrate a fastmap2 object to a new one — update_fastmap2","text":"","code":"update_fastmap2(from, to, override = TRUE)"},{"path":"https://dipterix.org/dipsaus/reference/update_fastmap2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Migrate a fastmap2 object to a new one — update_fastmap2","text":", fastmap2 object override whether override keys exist","code":""},{"path":"https://dipterix.org/dipsaus/reference/update_fastmap2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Migrate a fastmap2 object to a new one — update_fastmap2","text":"Map ","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/reference/use_shiny_dipsaus.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up shiny plugins — use_shiny_dipsaus","title":"Set up shiny plugins — use_shiny_dipsaus","text":"function must called Shiny app's UI order widgets work.","code":""},{"path":"https://dipterix.org/dipsaus/reference/use_shiny_dipsaus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up shiny plugins — use_shiny_dipsaus","text":"","code":"use_shiny_dipsaus(x)"},{"path":"https://dipterix.org/dipsaus/reference/use_shiny_dipsaus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up shiny plugins — use_shiny_dipsaus","text":"x 'HTML' tags","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-031","dir":"Changelog","previous_headings":"","what":"dipsaus 0.3.1","title":"dipsaus 0.3.1","text":"Using importFrom instead importing whole shiny package Fixed compatibility issue using customized shiny components bslib get_ip longer throw warnings Added session argument close_alert2 Using Rcpp instead native interface avoid internal API calls ENCLOS CLOSENV","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-030","dir":"Changelog","previous_headings":"","what":"dipsaus 0.3.0","title":"dipsaus 0.3.0","text":"CRAN release: 2024-12-17 Improved lapply_async tries automatically set global variable sizes large environment variables need serialized Removed magrittr, remotes, glue ‘Suggests’","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-029","dir":"Changelog","previous_headings":"","what":"dipsaus 0.2.9","title":"dipsaus 0.2.9","text":"CRAN release: 2024-06-27","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"changes-0-2-9","dir":"Changelog","previous_headings":"","what":"Changes","title":"dipsaus 0.2.9","text":"Added is_from_namespace check function namespace Reexported jsonlite functions Fixed potential imbalance protection quantile2 Fixed documentation issue Updated JavaScript dependency","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-028","dir":"Changelog","previous_headings":"","what":"dipsaus 0.2.8","title":"dipsaus 0.2.8","text":"CRAN release: 2023-07-03","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"changes-0-2-8","dir":"Changelog","previous_headings":"","what":"Changes","title":"dipsaus 0.2.8","text":"Added fancyFileInput customized CSS original shiny::fileInput","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-027","dir":"Changelog","previous_headings":"","what":"dipsaus 0.2.7","title":"dipsaus 0.2.7","text":"CRAN release: 2023-05-26","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"changes-0-2-7","dir":"Changelog","previous_headings":"","what":"Changes","title":"dipsaus 0.2.7","text":"Added default shortcuts Used system2 instead system rs_runjob_alt controls Upgraded JavaScript libraries Fixed lapply_async2 respecting chunk size callback unspecified Removed cpp11 compiling flags use system defaults Actively clear users cache directory directories empty","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-026","dir":"Changelog","previous_headings":"","what":"dipsaus 0.2.6","title":"dipsaus 0.2.6","text":"CRAN release: 2023-01-21","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"changes-0-2-6","dir":"Changelog","previous_headings":"","what":"Changes","title":"dipsaus 0.2.6","text":"Fixed fastmap2 fastqueue2 subsetting missing index resulting errors Re-exports cli, rlang functions Using recent fixed version tinythread correctly join pthread Allowed rs_exec return promise object Removed base64url dependence implemented equivalent functions using base64enc Removed prepare_install2 Removed startup dependence Fixed Javascript vulnerability issues","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-025","dir":"Changelog","previous_headings":"","what":"dipsaus 0.2.5","title":"dipsaus 0.2.5","text":"CRAN release: 2022-10-22","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"changes-0-2-5","dir":"Changelog","previous_headings":"","what":"Changes","title":"dipsaus 0.2.5","text":"Removed RcppParallel, using TinyThread avoid TBB related installation issues Removed autoconf script, using much simpler way generate compiler flags Added keyboard shortcut run debugging code easily Allowed parse_svec space around connectors Added new method baseline_array absolute contrast","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-2-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.2.5","text":"Fixed TinyThread memory leak issues","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-024","dir":"Changelog","previous_headings":"","what":"dipsaus 0.2.4","title":"dipsaus 0.2.4","text":"CRAN release: 2022-08-24","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-2-4","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.2.4","text":"Automatically set system environments master process rs_exec Added rs_set_repos set RStudio preference, allowing add CRAN-like repositories running inside RStudio","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"minor-changes-0-2-4","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"dipsaus 0.2.4","text":"Upgraded JavaScript libraries fix dependence vulnerability issues","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-023","dir":"Changelog","previous_headings":"","what":"dipsaus 0.2.3","title":"dipsaus 0.2.3","text":"CRAN release: 2022-08-06","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-2-3","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.2.3","text":"Added rstudioapi wrapper rs_edit_file allow editing files directly RStudio","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"minor-changes-0-2-3","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"dipsaus 0.2.3","text":"parse_svec handles multiple lengths together, parse_svec(1:10) equivalent parse_svec(\"1:10\") Allowed rs_exec run nested. However, risk parent process ends nested child process finishes. case, parent temporary directory destroyed, child process become orphan (results become unavailable)","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-2-3","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.2.3","text":"Fixed “offset-parent” issue compoundInput2 max-height unset, overflow still hidden select inputs","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-022","dir":"Changelog","previous_headings":"","what":"dipsaus 0.2.2","title":"dipsaus 0.2.2","text":"CRAN release: 2022-06-18","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.2.2","text":"Added special %% make sure result constrained","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"minor-changes-0-2-2","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"dipsaus 0.2.2","text":"Replaced functions stringr self-implemented base-R functions, plan remove stringr future Create shiny_input_bindings list package load","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-2-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.2.2","text":"Fixed print_directory_tree condition generates warning vectors lengths greater 1","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-021","dir":"Changelog","previous_headings":"","what":"dipsaus 0.2.1","title":"dipsaus 0.2.1","text":"CRAN release: 2022-05-29","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.2.1","text":"Removed synchronicity package dependency dipsaus_lock dipsaus_unlock exclusive-deprecated future PersistContainer scheduled deprecated future Re-export detectCores digest Added get_credential generate strong passwords different services using one single master password","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"enhancement-0-2-1","dir":"Changelog","previous_headings":"","what":"Enhancement","title":"dipsaus 0.2.1","text":"sync_shiny_inputs uses fastmap instead environments sync_shiny_inputs uses new bindEvent scheme replace observeEvent Added sorted argument .list.fastmap2 Ignored ... argument .list.fastqueue2 rs_show_shortcut shows current shortcut expressions","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-2-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.2.1","text":"compoundInput2 now activates callback functions using updateCompoundInput2 Fixed get_ram working windows user access run wmic command Allow lapply_async progress bar show shiny applications (backward compatibility)","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-020","dir":"Changelog","previous_headings":"","what":"dipsaus 0.2.0","title":"dipsaus 0.2.0","text":"CRAN release: 2022-01-27","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.2.0","text":"Allow fastmap2 .list recursively Added mean_se calculate mean standard error mean Re-exported digest digest package Added combine_html_class remove_html_class manipulate HTML classes Force enabled ANSI color display rs_exec jobs run RStudio","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"dipsaus 0.2.0","text":"Cleaned get_os depend stringr anymore","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"big-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Big Fixes","title":"dipsaus 0.2.0","text":"Fixed progress2 working properly non-interactive sessions (shiny still running)","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-019","dir":"Changelog","previous_headings":"","what":"dipsaus 0.1.9","title":"dipsaus 0.1.9","text":"CRAN release: 2021-10-13","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"minor-changes-0-1-9","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"dipsaus 0.1.9","text":"compoundInput2 now respects par(fg) sets foreground accordingly","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"big-fixes-0-1-9","dir":"Changelog","previous_headings":"","what":"Big Fixes","title":"dipsaus 0.1.9","text":"Fixed missing_dots freezing session incorrectly called Fixed autoconf warnings","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-018","dir":"Changelog","previous_headings":"","what":"dipsaus 0.1.8","title":"dipsaus 0.1.8","text":"CRAN release: 2021-09-06","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-1-8","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.1.8","text":"Added lapply_callr replace async_workers cleaner robust implementation Added as_pipe make functions pipe-friendly Added rs_add_shortcut allow customized shortcuts RStudio Added missing_dots detect dots missing values","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-1-8","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.1.8","text":"Fixed bug lapply_async2 failing restore plan","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"enhancements-0-1-8","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"dipsaus 0.1.8","text":"Updated JavaScript libraries","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-017","dir":"Changelog","previous_headings":"","what":"dipsaus 0.1.7","title":"dipsaus 0.1.7","text":"CRAN release: 2021-07-26","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-1-7","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.1.7","text":"Added fastquantile estimate single quantile, faster base R Added RStudio shortcuts, allowing customized code shortcuts Added shiny_alert2 launches large alerts shiny applications Added %<-?% assign right-hand side expression valid null Removed qs_map, redis_map Removed dependence qs, RcppRedis, htmltools Removed make_async_evaluator","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-016","dir":"Changelog","previous_headings":"","what":"dipsaus 0.1.6","title":"dipsaus 0.1.6","text":"CRAN release: 2021-07-08","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-1-6","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.1.6","text":"Added fastcov2 calculate covariance parallel Added sumsquared calculate sum-squared faster Added sexp_type obtain internal data type code","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-1-6","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.1.6","text":"Robust get_ram function. function return NA Solaris, actual memories byte platforms. Fixed rs_focus_console job Fixed rs_exec wait true actually waiting","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"enhancements-0-1-6","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"dipsaus 0.1.6","text":"Updated JavaScript libraries fix vulnerability issues Allow rs_exec return console submitting jobs (RStudio version 1.4 required) Removed unused functions README.md.","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-014-015","dir":"Changelog","previous_headings":"","what":"dipsaus 0.1.4, 0.1.5","title":"dipsaus 0.1.4, 0.1.5","text":"CRAN release: 2021-02-14","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-1-4","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.1.4, 0.1.5","text":"Removed function get_cpu Added function convert base64 encoding characters","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-1-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.1.4, 0.1.5","text":"Robust get_ram function. function return NA Solaris, actual memories byte platforms.","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-013","dir":"Changelog","previous_headings":"","what":"dipsaus 0.1.3","title":"dipsaus 0.1.3","text":"CRAN release: 2021-02-13","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-1-3","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.1.3","text":"Added wrapper fastmap::fastqueue (fastqueue2) shows friendly messages can query elements Added wrapper method convert Base64 string generating string Soft-deprecate lock unlock functions Soft remove experimental function make_async_evaluator embrace new restbatch package","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-012","dir":"Changelog","previous_headings":"","what":"dipsaus 0.1.2","title":"dipsaus 0.1.2","text":"CRAN release: 2021-01-10","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-1-2","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.1.2","text":"Added make_forked_clusters lapply_async2 now restores previous future strategy one exiting","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"minor-changes-0-1-2","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"dipsaus 0.1.2","text":"make_forked_clusters allows set backup strategy forked process fails (example, windows)","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-1-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.1.2","text":"RAM usage corrected windows Bumped JavaScript dependence ini","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-011","dir":"Changelog","previous_headings":"","what":"dipsaus 0.1.1","title":"dipsaus 0.1.1","text":"CRAN release: 2020-10-09","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.1.1","text":"Added async_works allow scheduling works background using multiple sessions.","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"minor-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"dipsaus 0.1.1","text":"Instead showing “finished”, progress bar now shows square box finished cleaner output rs_exec now allows packages loaded scripts Internally added attached_packages detect attached packages","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-1-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.1.1","text":"Fixed lapply_async2 plan multisession, added future seed","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-010","dir":"Changelog","previous_headings":"","what":"dipsaus 0.1.0","title":"dipsaus 0.1.0","text":"CRAN release: 2020-08-12","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.1.0","text":"Removed uglifyjs use terser instead rs_exec now respects wait running RStudio jobs use_shiny_dipsaus can wrap around HTML tags now","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-1-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.1.0","text":"use_shiny_dipsaus now correctly add JavaScript css tags uglifyjs maintained might cause vulnerability issues, fixed dependency versions","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-009","dir":"Changelog","previous_headings":"","what":"dipsaus 0.0.9","title":"dipsaus 0.0.9","text":"CRAN release: 2020-07-17","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-0-9","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.0.9","text":"rs_active_project: ‘RStudio’ current active project name rs_save_all: save editing document ‘RStudio’ running rs_exec: run job ‘RStudio’, otherwise use Rscript ask_yesno, ask_or_default also uses ‘RStudio’ dialogue functions starting rs add_to_session stores key-value pairs shiny reactive sessions clear_env clear elements environments fastmap2 instances do_nothing literally nothing shiny_is_running returns whether current context within shiny app test_farg tests whether function contains certain arguments capture_expr captures outputs evaluating expression returns string get_dev_attr get attributes graphic devices print_directory_tree generates directory tree text","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"minor-changes-0-0-9","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"dipsaus 0.0.9","text":"dev_create can now set attributes attributes can obtained function get_dev_attr method dev_attributes","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-0-9","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.0.9","text":"soft-deprecated prepare_install might cause infinite loops","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-008","dir":"Changelog","previous_headings":"","what":"dipsaus 0.0.8","title":"dipsaus 0.0.8","text":"CRAN release: 2020-06-23","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-0-8","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.0.8","text":"Removed dependency crayon, added yaml Added shared_finalizer finalize multiple objects last one garbage collected Removed autoconf script Makevars special flags needed added flex_div generate div flex layout calculate size automatically","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-007","dir":"Changelog","previous_headings":"","what":"dipsaus 0.0.7","title":"dipsaus 0.0.7","text":"CRAN release: 2020-05-12","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-0-7","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.0.7","text":"Removed dependency txtq functions related Added list_to_fastmap2 convert list fastmap2 Exported to_datauri, allowing files, especially images translated base-64 code can directly used websites mask_function2 mask variables within function adding one environment layer top function new_function2 creates function supports ‘quasi-quosure’ syntax","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"minor-changes-0-0-7","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"dipsaus 0.0.7","text":"Allow maximum height set compoundInput2 fastmap2 now accept multi-assignment single value","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-0-7","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.0.7","text":"fastmap2 subset method now accept integers instead raising errors","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-006","dir":"Changelog","previous_headings":"","what":"dipsaus 0.0.6","title":"dipsaus 0.0.6","text":"CRAN release: 2020-04-05","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-0-6","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.0.6","text":"Added support R 3.5 Added %D% decorator function works like python decorators Added get_dots can get variable ... without evaluating variables","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"minor-changes-0-0-6","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"dipsaus 0.0.6","text":"lapply_async2 now supporting load-balance settings","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-0-6","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.0.6","text":"11 JavaScript library vulnerability bug fixed","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-005","dir":"Changelog","previous_headings":"","what":"dipsaus 0.0.5","title":"dipsaus 0.0.5","text":"CRAN release: 2020-03-12","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-0-5","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.0.5","text":"Added dev_create control switching among graphical devices Added use_shiny_dipsaus() import styles JavaScript Added wrapper fastmap::fastmap - fastmap2, provides several generic functions, making original fastmap like environment Added lapply_async2, naive version future.lapply, callbacks, useful play-back message required. experimental. future package progressr online, function adjusted.","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-0-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.0.5","text":"Resolved memory leaks compoundInput2 Use fastmap2 instead environments manage set_shiny_input","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-004","dir":"Changelog","previous_headings":"","what":"dipsaus 0.0.4","title":"dipsaus 0.0.4","text":"CRAN release: 2020-01-20","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-0-4","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.0.4","text":"Canceled exporting queues strange behavior windows. (plan fix next version) Implemented function convert Base64 DataURI string image cat2 now persist logger files local drive, can exported via packup_logger set_shiny_input set shiny input object baselineArray calculates baseline arrays internal parallel support shift_array fast shift array along certain dimension %+-% plus-minus operator; %=>% “JavaScript” style creating functions","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"bug-fixes-0-0-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"dipsaus 0.0.4","text":"Fixed compoundInput2 initialized rendered shiny::renderUI","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-003","dir":"Changelog","previous_headings":"","what":"dipsaus 0.0.3","title":"dipsaus 0.0.3","text":"CRAN release: 2019-11-18","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"parallel-0-0-3","dir":"Changelog","previous_headings":"Major Changes","what":"Parallel","title":"dipsaus 0.0.3","text":"Added four cross-session map types qs_map, text_map, rds_map, redis_map Created R6 class PersistContainer, designed cache key-value pairs local hard disk Implemented function make_async_evaluator works scheduler queue arbitrary number tasks without blocking main R session","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"minor-changes-0-0-3","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"dipsaus 0.0.3","text":"Renamed txtq_queue text_queue Added vignettes Minor fixes","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-002","dir":"Changelog","previous_headings":"","what":"dipsaus 0.0.2","title":"dipsaus 0.0.2","text":"CRAN release: 2019-11-05","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"shiny-0-0-2","dir":"Changelog","previous_headings":"Major Changes","what":"Shiny","title":"dipsaus 0.0.2","text":"Use webpack manage JavaScript libraries Added new shiny widget actionButtonStyled Implemented sync_shiny_inputs synchronize among shiny inputs without causing dead-locks UI changes progress2 allows debugging shiny progress instances non- reactive context. uses shiny::Progress shiny reactive context, just print messages shiny reactive domain NULL","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"parallel-0-0-2","dir":"Changelog","previous_headings":"Major Changes","what":"Parallel","title":"dipsaus 0.0.2","text":"Implemented collapse, parallel solution calculate sum/mean along arrays, providing 4x speed-ups large arrays; Added async_expr functions using future package parallel evaluation R expressions. Four cross-session queue types qs_queue, rds_queue, txtq_queue, redis_queue allow pushing arbitrary R objects queue one session pop another session.","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"r-language-0-0-2","dir":"Changelog","previous_headings":"Major Changes","what":"R-language","title":"dipsaus 0.0.2","text":"eval_dirty works base::eval, supports quosures generated rlang::quo match_calls match calls nested manner, support changing call arguments recursively %?<-% assign default values lhs","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"minor-changes-0-0-2","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"dipsaus 0.0.2","text":"cat2 act base function cat provides different levels different colored outputs; check_installed_packages, package_installed checks package(s) installed; col2hexStr convert color hex strings friendly HTML, CSS JavaScript; parse_svec converts string integer vectors, deparse_svec converts integer vectors back compact string; drop_nulls removes invalid items within lists; get_cpu gets CPU types chip-set names; get_ram, mem_limit2 gets total RAM size alternatives mem.limits non-windows environment; to_ram_size provides simple way convert numbers printable storage sizes given units; time_delta calculates time differences returns number given units.","code":""},{"path":[]},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"major-changes-0-0-1","dir":"Changelog","previous_headings":"","what":"Major Changes","title":"dipsaus 0.0.1","text":"Implemented full JavaScript support compoundInput2 new shiny input Added utility function col2hexStr convert color hex value Added utility function match_calls match modify calls","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"minor-changes-0-0-1","dir":"Changelog","previous_headings":"","what":"Minor Changes","title":"dipsaus 0.0.1","text":"Added label_color compoundInput2 enable colored group labels","code":""},{"path":"https://dipterix.org/dipsaus/news/index.html","id":"dipsaus-000","dir":"Changelog","previous_headings":"","what":"dipsaus 0.0.0","title":"dipsaus 0.0.0","text":"Initial private beta release!","code":""}]
